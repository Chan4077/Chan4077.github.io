{"version":3,"sourceRoot":"","sources":["node_modules/@material/touch-target/_touch-target.scss","node_modules/@material/elevation/_elevation.scss","node_modules/@material/theme/_css.scss","node_modules/@material/button/_button-base.scss","node_modules/@material/elevation/_elevation-theme.scss","node_modules/@material/rtl/_rtl.scss","node_modules/@material/typography/_typography.scss","node_modules/@material/button/_button-text.scss","node_modules/@material/button/_button-shared-theme.scss","node_modules/@material/button/_button-filled.scss","node_modules/@material/button/_button-protected.scss","node_modules/@material/button/_button-outlined.scss","node_modules/@material/ripple/_ripple.scss","node_modules/@material/animation/_animation.scss","node_modules/@material/button/_button-ripple.scss","node_modules/@material/button/_button.scss","node_modules/@material/ripple/_ripple-theme.scss","node_modules/@material/button/_button-outlined-theme.scss","node_modules/@material/card/_mixins.scss","node_modules/@material/dom/_dom.scss","node_modules/@material/card/_variables.scss","node_modules/@material/chips/deprecated/trailingaction/_mixins.scss","node_modules/@material/chips/deprecated/trailingaction/_variables.scss","node_modules/@material/chips/deprecated/_mixins.scss","node_modules/@material/chips/deprecated/_variables.scss","node_modules/@material/checkbox/_checkbox.scss","node_modules/@material/data-table/_data-table.scss","node_modules/@material/data-table/_data-table-theme.scss","node_modules/@material/notched-outline/_mixins.scss","node_modules/@material/data-table/_data-table-cell.scss","node_modules/@material/data-table/_data-table-header-cell.scss","node_modules/@material/icon-button/_icon-button-theme.scss","node_modules/@material/data-table/_data-table-progress-indicator.scss","node_modules/@material/data-table/_data-table-pagination.scss","node_modules/@material/select/_select-theme.scss","node_modules/@material/floating-label/_mixins.scss","node_modules/@material/select/_select-icon-theme.scss","node_modules/@material/list/_evolution-mixins.scss","node_modules/@material/checkbox/_checkbox-theme.scss","node_modules/@material/dialog/_mixins.scss","node_modules/@material/dialog/_variables.scss","node_modules/@material/drawer/_mixins.scss","node_modules/@material/drawer/_variables.scss","node_modules/@material/list/_mixins.scss","node_modules/@material/icon-button/_icon-button.scss","node_modules/@material/layout-grid/mdc-layout-grid.scss","node_modules/@material/layout-grid/_mixins.scss","node_modules/@material/list/_variables.scss","node_modules/@material/list/_evolution-variables.scss","node_modules/@material/menu-surface/_mixins.scss","node_modules/@material/menu-surface/_variables.scss","node_modules/@material/menu/_mixins.scss","node_modules/@material/snackbar/_mixins.scss","node_modules/@material/snackbar/_variables.scss","node_modules/@material/line-ripple/_mixins.scss","node_modules/@material/notched-outline/_variables.scss","node_modules/@material/textfield/_mixins.scss","node_modules/@material/textfield/helper-text/_mixins.scss","node_modules/@material/textfield/character-counter/_mixins.scss","node_modules/@material/textfield/icon/_mixins.scss","node_modules/@material/textfield/_variables.scss","node_modules/@material/tooltip/_tooltip-theme.scss","node_modules/@material/tooltip/_tooltip.scss","node_modules/@material/top-app-bar/mdc-top-app-bar.scss","node_modules/@material/top-app-bar/_mixins.scss","node_modules/@material/top-app-bar/_variables.scss","_sass/syntax-highlighting.scss","css/site.scss"],"names":[],"mappings":"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EAZE,uBAYF,mE+BzDE,sBACA,aACA,yBAIJ,qC/BmDE,+B+B/CE,mBACA,aACA,eACA,yB5BiDA,6FHLF,+B+BxCF,uCAEI,mBACA,aAIJ,mC/BiCE,+BGKE,6H0BkKE,yB1BlKF,yFHLF,+B+B1BF,kC/B0BE,mC+BlBE,mB5BuBA,uFHLF,mC+BdF,0C/BcE,gC+BVE,mBACA,oB5BcA,uGHLF,gC+BLF,gD/BKE,gC+BDE,mB5BMA,mHHLF,gC+BGF,iD/BfI,eAYF,0C+BQE,aC6FJ,qEAEI,WACA,UDpG+C,KC4oBnD,qEAqBI,OPhqBmC,KQoGvC,sGAcM,wCP4HN,sGAEI,iBO5IJ,yQAcM,2CP6IJ,yQAEI,eOtIN,gGAEI,4EApEF,qEACE,GAEE,oEAIF,IACE,mEAEA,qEAIF,IACE,2EAOA,sEAIF,KAEE,qED+LN,4EAEI,ME5UY,KF6UZ,OE7UY,KRqUhB,0JAEI,UMguBA,kBGxeJ,6FAEI,OV3gBmC,KXuErC,wVdxFE,yBAYF,4EcgJA,0Zd5JE,aAYF,8CcuLE,0eAsBA,yBdzNA,aAYF,8CcuOE,+NAEI,gCAKF,6OAEI,oBAtRO,Kd0Bb,aAYF,8Cc2PA,yJd3PA,8Dc4EA,wfdxFE,yBAYF,4EoC6pBF,qUpCzqBI,iCAYF,mGoC6pBF,uqBpCzqBI,qBAYF,oFAZE,yBAYF,wFoCosBF,4EACE,GpCjtBE,iCAYF,mGoC0sBA,IpCttBE,qBAYF,oFAZE,yBAYF,yFoCgtBF,6EACE,OpC7tBE,qBAYF,oFAZE,yBAYF,wFoCutBA,KpCnuBE,iCAYF,oGoCwaI,siBAEI,gFAOJ,siBAEI,iFCRV,iCrCvbI,sBAYF,gDqCybF,+BAEI,iCAIJ,uCAEI,iCAYJ,+BAEI,sBAYJ,iCAEI,qBAIJ,+BrC7eI,WAYF,wCc4EA,+HdxFE,sBAYF,4EcgJA,gKd5JE,aAYF,8CcuLE,wMAsBA,yBdzNA,aAYF,8CcuOE,yFAEI,gCAKF,gGAEI,oBAtRO,Kd0Bb,aAYF,8Cc2PA,mDd3PA,8DqC6fF,uMAKI,6BAIJ,sDAEI,wCACA,gBAIJ,wFnCnTI,WAqGS,wGmC2Nb,iCrCtiBI,kBAYF,2CqCkZF,qBnCxLI,WAqGS,6GmCuF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ACA,mBACA,oBACA,YAEA,4DAEA,yBD5EF,wBC6EI,aACA,SACA,SD3EW,KC6EX,mDACA,kDAnEA,yBDJJ,uBC0BE,kCAEA,yEAyDA,sBACA,YAEA,2DA1DA,yBD9BF,uBC+BI,WACA,wBA0DF,yBD1FF,uBC2FI,UD9Ea,sECaf,iCAEA,wEAEA,yBDjBe,sECkBb,WACA,wBDnBa,sECaf,kCAEA,yEAEA,yBDjBe,sECkBb,WACA,wBDnBa,sECaf,uBAEA,8DAEA,yBDjBe,sECkBb,WACA,wBDnBa,sECaf,kCAEA,yEAEA,yBDjBe,sECkBb,WACA,wBDnBa,sECaf,kCAEA,yEAEA,yBDjBe,sECkBb,WACA,wBDnBa,sECaf,uBAEA,8DAEA,yBDjBe,sECkBb,WACA,wBDnBa,sECaf,kCAEA,yEAEA,yBDjBe,sECkBb,WACA,wBDnBa,sECaf,kCAEA,yEAEA,yBDjBe,sECkBb,WACA,wBDnBa,sECaf,uBAEA,8DAEA,yBDjBe,sECkBb,WACA,wBDnBa,wECaf,kCAEA,yEAEA,yBDjBe,wECkBb,WACA,yBDnBa,wECaf,kCAEA,yEAEA,yBDjBe,wECkBb,WACA,yBDnBa,wECaf,wBAEA,+DAEA,yBDjBe,wECkBb,WACA,0BAjCA,+CDCJ,uBC0BE,uBAEA,6DAyDA,sBACA,WAEA,0DA1DA,yBD9BF,uBC+BI,WACA,wBA0DF,yBD1FF,uBC2FI,UD9Ea,qECaf,yBAEA,+DAEA,yBDjBe,qECkBb,WACA,wBDnBa,qECaf,uBAEA,6DAEA,yBDjBe,qECkBb,WACA,wBDnBa,qECaf,yBAEA,+DAEA,yBDjBe,qECkBb,WACA,wBDnBa,qECaf,uBAEA,6DAEA,yBDjBe,qECkBb,WACA,wBDnBa,qECaf,yBAEA,+DAEA,yBDjBe,qECkBb,WACA,wBDnBa,qECaf,uBAEA,6DAEA,yBDjBe,qECkBb,WACA,wBDnBa,qECaf,yBAEA,+DAEA,yBDjBe,qECkBb,WACA,wBDnBa,qECaf,wBAEA,8DAEA,yBDjBe,qECkBb,WACA,wBDnBa,qECaf,wBAEA,8DAEA,yBDjBe,qECkBb,WACA,wBDnBa,uECaf,wBAEA,8DAEA,yBDjBe,uECkBb,WACA,wBDnBa,uECaf,wBAEA,8DAEA,yBDjBe,uECkBb,WACA,wBDnBa,uECaf,wBAEA,8DAEA,yBDjBe,uECkBb,WACA,yBAtCA,yBDMJ,uBC0BE,wBAEA,6DAyDA,sBACA,WAEA,yDA1DA,yBD9BF,uBC+BI,WACA,wBA0DF,yBD1FF,uBC2FI,UD9Ea,oECaf,uBAEA,4DAEA,yBDjBe,oECkBb,WACA,wBDnBa,oECaf,uBAEA,4DAEA,yBDjBe,oECkBb,WACA,wBDnBa,oECaf,uBAEA,4DAEA,yBDjBe,oECkBb,WACA,wBDnBa,oECaf,wBAEA,6DAEA,yBDjBe,oECkBb,WACA,wBDnBa,oECaf,wBAEA,6DAEA,yBDjBe,oECkBb,WACA,wBDnBa,oECaf,wBAEA,6DAEA,yBDjBe,oECkBb,WACA,wBDnBa,oECaf,wBAEA,6DAEA,yBDjBe,oECkBb,WACA,wBDnBa,oECaf,wBAEA,6DAEA,yBDjBe,oECkBb,WACA,wBDnBa,oECaf,wBAEA,6DAEA,yBDjBe,oECkBb,WACA,wBDnBa,sECaf,wBAEA,6DAEA,yBDjBe,sECkBb,WACA,wBDnBa,sECaf,wBAEA,6DAEA,yBDjBe,sECkBb,WACA,wBDnBa,sECaf,wBAEA,6DAEA,yBDjBe,sECkBb,WACA,yBDRA,gCCwEF,MDzEa,EACX,gCCwEF,MDzEa,EACX,gCCwEF,MDzEa,EACX,gCCwEF,MDzEa,EACX,gCCwEF,MDzEa,EACX,gCCwEF,MDzEa,EACX,gCCwEF,MDzEa,EACX,gCCwEF,MDzEa,EACX,gCCwEF,MDzEa,EACX,iCCwEF,MDzEa,GACX,iCCwEF,MDzEa,GACX,iCCwEF,MDzEa,GAOb,kCCuEE,sBAEA,yBDzEF,kCC0EI,kBDtEJ,qCC2EE,kBDvEF,qCC2EE,oBAEA,yBD7EF,qCC8EI,gBAhHF,yBDuCJ,qCC2FE,aAGA;AAAA;AAAA;AAAA;AAAA,KA1IE,+CD4CJ,qCC2FE,YAGA;AAAA;AAAA;AAAA;AAAA,KA/IE,yBDiDJ,qCC2FE,YAGA;AAAA;AAAA;AAAA;AAAA,KD7EF,6BACE,kBACA,cAGF,8BACE,eACA,iBFxEA,qBr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WE,gCyCm7BA,wBtC96BE,2FHLF,gCyCmXF,wEzCnXE,gCyCm7BA,wBtC96BE,mKHLF,gCyC6xBF,iEzC7xBE,gCyCm7BA,wBtC96BE,qJHLF,gCyCsyBF,kEA6IE,wBApIF,6GzC/yBE,gCyCm7BA,wBtC96BE,6OHLF,gCyCuzBF,sGzCvzBE,gCyCm7BA,wBtC96BE,+NHLF,gCyCi0BF,wJzCj0BE,gCyCm7BA,wBtC96BE,mUHLF,gCyC6xBF,4EzC7xBE,gCyCm7BA,wBtC96BE,2KHLF,gCyCsyBF,6EA6IE,wBApIF,wHzC/yBE,gCyCm7BA,wBtC96BE,mQHLF,gCyCuzBF,iHzCvzBE,gCyCm7BA,wBtC96BE,qPHLF,gCyCi0BF,mKzCj0BE,gCyCm7BA,wBtC96BE,yVHLF,gCyC6xBF,8EzC7xBE,gCyCm7BA,wBtC96BE,+KHLF,gCyCsyBF,+EA6IE,wBApIF,0HzC/yBE,gCyCm7BA,wBtC96BE,uQHLF,gCyCuzBF,mHzCvzBE,gCyCm7BA,wBtC96BE,yPHLF,gCyCi0BF,qKzCj0BE,gCyCm7BA,wBtC96BE,6VHLF,gCyC6xBF,iFzC7xBE,gCyCm7BA,wBtC96BE,qLHLF,gCyCsyBF,kFA6IE,wBApIF,6HzC/yBE,gCyCm7BA,wBtC96BE,6QHLF,gCyCuzBF,sHzCvzBE,gCyCm7BA,wBtC96BE,+PHLF,gCyCi0BF,wKzCj0BE,gCyCm7BA,wBtC96BE,mWHLF,gCyC6xBF,6EzC7xBE,gCyCm7BA,wBtC96BE,6KHLF,gCyCsyBF,8EA6IE,wBApIF,yHzC/yBE,gCyCm7BA,yBtC96BE,qQHLF,gCyCuzBF,kHzCvzBE,gCyCm7BA,wBtC96BE,uPHLF,gCyCi0BF,oKzCj0BE,gCyCm7BA,wBtC96BE,2VHLF,gCyC6xBF,6EzC7xBE,iCyCm7BA,yBtC96BE,6KHLF,iCyCsyBF,8EA6IE,wBApIF,yHzC/yBE,iCyCm7BA,yBtC96BE,qQHLF,iCyCuzBF,kHzCvzBE,+ByCm7BA,uBtC96BE,uPHLF,+ByCi0BF,oKzCj0BE,+ByCm7BA,wBtC96BE,2VHLF,+ByCuaE,gDACE,UAKN,sCrCnLE,kCACA,mCJvQE,+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yBAEA,iCAEA,gBACA,YAnuDA,iDAivDA,2BA9uDE,2JAyvDF,0BAnvDA,mDAmwDA,4CnDp3DE,yHmDy3DA,2CArwDA,+JAmxDF,0CnDv4DE,oWmD44DA,2CAjxDJ,mCtDhIE,kCGKE,yFHLF,kCsD8oDF,8ErBngDE,UqB8nDA,kBtDzwDA,wBGKE,+KHLF,wBsDupDF,2FrB5gDE,UqB8oDA,gCA9EF,gFtD3sDE,wBGKE,mLHLF,wB0BoRF,4HAEI,U4Bo+CF,kBrBjpDF,6FAIM,0D9BxGF,6M8B8GI,yDPgIR,6FAEI,iBO5IJ,uPAIM,6D9BxGF,ohB8B8GI,4DPiJN,uPAEI,eOtIN,uFAEI,wFApEF,iFACE,GAEE,sEAIF,IACE,mEAEA,uEAIF,IACE,2EAOA,wEAIF,KAEE,uEAsCN,iMAEI,wFApEF,qFACE,GAEE,uEAIF,IACE,mEAEA,wEAIF,IACE,2EAOA,yEAIF,KAEE,wEqBkDN,oCtD5IE,kCGKE,2FHLF,kCsDoqDF,+ErBzhDE,UqB8nDA,kBAjGF,4FrB7hDE,UqB8oDA,gC5BrgDF,6HAEI,U4Bo+CF,kBAlmDF,sEA+qCE,eAEA,gBA8WF,iHrB5iDE,UqB8nDA,kBA9EF,8HrBhjDE,UqB8oDA,gCAtnDF,4BAEI,aACA,8BACA,sBAGF,4CAEI,cI9Hc,KJ+Hd,aI/Hc,KJyIpB,sCAEI,sBAusEJ,4EtDh4EE,8B0B8DF,oKAII,agC7CkB,IJ8lDtB,kIAGI,U5BviDJ,4GAEI,YgC5DkB,IhC0DtB,qIAEI,Y4BkjDyC,EFhnD3C,uFpD/BE,4BAYF,oDoDSA,gFpDrBE,4BAYF,oDsDg4EF,4EtD54EI,cAYF,sCuD+BF,wJvD3CI,cAYF,sCsDo5BF,gDtDh6BI,oBAYF,4CyDsFF,wFzDlGI,cAYF,sCoDmBA,iFpD/BE,4BAYF,oD0BkDF,iQ1B9DI,qBAYF,6C0BkDF,4a1B9DI,qBAYF,6C0BkDF,yU1B9DI,qBAYF,6CsDimDF,iGAEI,UAp5CJ,0BA61CE,oBA+wBF,iDtD3zEE,0BsDk6EF,WAGE,8DtDr6EA,2BsD06EF,WAGE,uEtD76EA,2BsDg4EF,8CtDh4EE,0BuDqBF,kFvDrBE,0BwDqBF,oJx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","sourcesContent":["//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $vertical-margin-value: math.div($touch-target-height - $component-height, 2);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: $vertical-margin-value;\n    margin-bottom: $vertical-margin-value;\n  }\n\n  @if $component-width {\n    $horizontal-margin-value: math.div(\n      $touch-target-width - $component-width,\n      2\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-right: $horizontal-margin-value;\n      margin-left: $horizontal-margin-value;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use './elevation-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $z-value from 0 through 24 {\n    .mdc-elevation--z#{$z-value} {\n      @include elevation-theme.elevation($z-value, $query: $query);\n    }\n  }\n\n  .mdc-elevation-transition {\n    @include feature-targeting.targets($feat-animation) {\n      transition: elevation-theme.transition-value();\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      will-change: elevation-theme.$property;\n    }\n  }\n}\n\n///\n/// Called once per application to set up the global default elevation styles.\n///\n@mixin overlay-common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include base-mixins.emit-once('mdc-elevation/common/structure') {\n        position: absolute;\n        border-radius: inherit;\n        pointer-events: none;\n\n        @include theme.property(\n          opacity,\n          custom-properties.create(--mdc-elevation-overlay-opacity, 0)\n        );\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      @include base-mixins.emit-once('mdc-elevation/common/animation') {\n        transition: elevation-theme.overlay-transition-value();\n      }\n    }\n\n    @include base-mixins.emit-once('mdc-elevation/common/color') {\n      $fill-color: custom-properties.create(\n        --mdc-elevation-overlay-color,\n        elevation-theme.$overlay-color\n      );\n      @include elevation-theme.overlay-fill-color($fill-color, $query: $query);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n@use './button-shared-theme';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include _static-styles-base($query: $query);\n  @include _typography-styles($query: $query);\n}\n\n@mixin _static-styles-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define button\n  .mdc-button {\n    @include _root-structure($query);\n    // The icon CSS class overrides styles defined in the .material-icons CSS\n    // class, which is loaded separately so the order of CSS definitions is not\n    // guaranteed. Therefore, increase specifity by nesting this class to ensure\n    // overrides apply.\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include _icon-structure;\n      }\n    }\n\n    .mdc-button__label {\n      @include feature-targeting.targets($feat-structure) {\n        // Necessary such that label is stacked on top of ripple\n        // (since ripple is a positioned element, non-positioned elements\n        // appear under it).\n        position: relative;\n      }\n    }\n\n    .mdc-button__touch {\n      @include touch-target.touch-target($query: $query);\n    }\n  }\n\n  .mdc-button__label + .mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-trailing;\n    }\n  }\n\n  svg.mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-svg;\n    }\n  }\n\n  .mdc-button--touch {\n    // Touch target doesn't change with height. It simply gets removed if\n    // density (height) changes. Therefore, it is a static style.\n    @include touch-target.margin(\n      $component-height: button-shared-theme.$height,\n      $query: $query\n    );\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin _typography-styles($query) {\n  .mdc-button {\n    // Exclude properties declared in theme styles.\n    @include typography.typography(\n      button,\n      $exclude-props: (\n        font-size,\n        line-height,\n        font-weight,\n        letter-spacing,\n        text-transform\n      ),\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Contains typography declarations now part of theme-styles.\n@mixin deprecated-static-styles-without-ripple(\n  $query: feature-targeting.all()\n) {\n  @include _deprecated-typography-styles($query: $query);\n  @include _static-styles-base($query: $query);\n}\n\n@mixin _deprecated-typography-styles($query) {\n  .mdc-button {\n    @include typography.typography(button, $query);\n  }\n}\n\n@mixin deprecated-base($query) {\n  @include base($query);\n}\n\n@mixin base($query) {\n  @include typography.typography(button, $query);\n  @include _root-structure($query: $query);\n}\n\n@mixin _root-structure($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    // position: relative; already set in mdc-elevation-overlay-surface-position\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    min-width: 64px;\n    border: none;\n    outline: none;\n    /* @alternate */\n    line-height: inherit;\n    user-select: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    vertical-align: middle;\n    background: transparent;\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  &:disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin icon {\n  @include _icon-structure;\n  @include _icon-size(18px);\n}\n\n@mixin _icon-structure {\n  @include rtl.reflexive-box(margin, right, 8px);\n\n  display: inline-block;\n  position: relative;\n  vertical-align: top;\n}\n\n@mixin _icon-size($size-px) {\n  $icon-size: typography.px-to-rem($size-px);\n\n  font-size: $icon-size;\n  height: $icon-size;\n  width: $icon-size;\n}\n\n@mixin icon-trailing {\n  @include rtl.reflexive-box(margin, left, 8px);\n}\n\n@mixin icon-svg {\n  fill: currentColor;\n}\n\n@mixin icon-contained {\n  @include rtl.reflexive-property(margin, -4px, 8px);\n}\n\n@mixin icon-contained-trailing {\n  @include rtl.reflexive-property(margin, 8px, -4px);\n}\n\n@mixin raised-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-theme.transition-value();\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon {\n  @include icon;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-trailing {\n  @include icon-trailing;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-svg {\n  @include icon-svg;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained {\n  @include icon-contained;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained-trailing {\n  @include icon-contained-trailing;\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/css';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$property: box-shadow !default;\n\n// The default color for the elevation overlay.\n$overlay-color: #fff;\n\n// The css property used for elevation overlay transitions. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$overlay-property: opacity !default;\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: animation-variables.$standard-curve-timing-function !default;\n\n///\n/// Sets the elevation transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$property} #{$duration} #{$easing};\n}\n\n///\n/// Sets the elevation overlay transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function overlay-transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$overlay-property} #{$duration} #{$easing};\n}\n\n///\n/// Creates a box-shadow from the Material elevation system.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @param {Number} $opacity-boost [0] - optional opacity boost for the shadow.\n/// @return {List} the complete box shadow.\n///\n@function _box-shadow($level, $color, $opacity-boost: 0) {\n  $color: theme-color.prop-value($color);\n  $umbra-z-value: map.get($umbra-map, $level);\n  $penumbra-z-value: map.get($penumbra-map, $level);\n  $ambient-z-value: map.get($ambient-map, $level);\n\n  $umbra-color: rgba($color, $umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $ambient-opacity + $opacity-boost);\n\n  @return (\n    #{'#{$umbra-z-value} #{$umbra-color}'},\n    #{'#{$penumbra-z-value} #{$penumbra-color}'},\n    #{$ambient-z-value} $ambient-color\n  );\n}\n\n// Returns the correct box-shadow specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@function elevation-box-shadow(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0\n) {\n  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  @return _box-shadow($z-value, $color, $opacity-boost);\n}\n\n///\n/// Returns a shadow or null if params are invalid.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @return {List|null} the complete box shadow or null.\n///\n@function _shadow($level, $color) {\n  @if $level == null and $color == null {\n    // Do not emit a warning if both are null, which means the user did not\n    // provide tokens.\n    @return null;\n  }\n\n  @if $level == null or $color == null {\n    // If one of the tokens is null, emit a warning: the user may not realize\n    // that both are required.\n    @warn \"both $level and $color are required; received $level: '#{$level}', $color: '#{$color}'\";\n    @return null;\n  }\n\n  @if $level < 0 or $level > 24 {\n    @warn \"$level must be between 0 and 24; received '#{$level}'\";\n    @return null;\n  }\n\n  @return _box-shadow($level, $color);\n}\n\n@function get-elevation($level) {\n  @return (box-shadow: elevation-box-shadow($level));\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin _box-shadow($shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(box-shadow, $shadow);\n  }\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin shadow($box-shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if custom-properties.is-custom-prop($box-shadow) {\n      // TODO(b/185188458): Use theme.property() once resolved.\n      $fallback: custom-properties.get-fallback($box-shadow);\n\n      // var(--<box-shadow-prop>, var(--m-elevation-box-shadow-for-gss))\n      $gss-custom-prop: custom-properties.create(\n        custom-properties.get-varname($box-shadow),\n        custom-properties.create(elevation-box-shadow-for-gss)\n      );\n\n      $value: custom-properties.create-var($gss-custom-prop);\n      @if $value == null {\n        // Custom properties are disabled, since $gss-custom-prop\n        // does not have a fallback. Avoid emitting two non-custom\n        // prop declarations by setting $fallback to null.\n        $value: $fallback;\n        $fallback: null;\n      }\n\n      @include css.declaration(box-shadow, $value, $fallback-value: $fallback);\n      @include custom-properties.declaration(\n        custom-properties.create(elevation-box-shadow-for-gss, $fallback)\n      );\n    } @else {\n      /* @alternate */\n      box-shadow: $box-shadow;\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay surface required positioning.\n///\n@mixin overlay-surface-position($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @alternate */\n    position: relative;\n  }\n}\n\n///\n/// Sets the dimensions of the elevation overlay, including positioning and sizing.\n///\n/// @param {Number} $width - The width of the elevation overlay\n/// @param {Number} [$height] - The height of the elevation overlay\n/// @param {Boolean} [$has-content-sizing] - Set to false if the container has no content sizing\n///\n@mixin overlay-dimensions(\n  $width,\n  $height: $width,\n  $has-content-sizing: true,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n\n      @if $has-content-sizing {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n      } @else {\n        top: 50%;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay fill color.\n/// Expected to be called directly on the elevation overlay element.\n///\n/// @param {Color} $color - The color of the elevation overlay.\n///\n@mixin overlay-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n///\n/// Applies the given color to the container of the overlay.\n/// @param {color} $color - the color of the overlay container\n///\n@mixin _overlay-container-color($color, $query: feature-targeting.all()) {\n  .mdc-elevation-overlay {\n    @include overlay-fill-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the elevation overlay opacity.\n/// Expected to be called from a parent element.\n///\n/// @param {Number} $opacity - The opacity of the elevation overlay.\n///\n@mixin overlay-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin elevation(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0,\n  $query: feature-targeting.all()\n) {\n  $box-shadow: elevation-box-shadow(\n    $z-value,\n    $color: $color,\n    $opacity-boost: $opacity-boost\n  );\n\n  @include shadow($box-shadow, $query: $query);\n}\n\n///\n/// Represents the configurable values of the elevation theme.\n///\n$_theme-values: (\n  shadow: null,\n  overlay-opacity: null,\n  overlay-color: null,\n);\n\n///\n/// Applies the shadow theme with the given $resolver function.\n/// @param {Function} $resolver - a function that returns a valid theme config.\n///   @see resolver for an example and expected arguments and return value.\n/// Accepts the following optional keyword args:\n/// @param {Number} $elevation - the level in the elevation system.\n/// @param {String} $shadow-color - the color used for the shadow.\n///\n@mixin with-resolver($resolver, $query: feature-targeting.all(), $args...) {\n  @if $resolver {\n    @include _theme(meta.call($resolver, $args...), $query: $query);\n  }\n}\n\n///\n/// Applies the given theme with validation.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin theme($theme: (), $query: feature-targeting.all()) {\n  @include theme.validate-theme($_theme-values, $theme);\n  @include _theme($theme, $query: $query);\n}\n\n///\n/// Applies the given theme.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin _theme($theme: (), $query: feature-targeting.all()) {\n  @include shadow(map.get($theme, shadow), $query: $query);\n  @include overlay-opacity(map.get($theme, overlay-opacity), $query: $query);\n  @include _overlay-container-color(\n    map.get($theme, overlay-color),\n    $query: $query\n  );\n}\n\n///\n/// Transforms the following optional parameters into a theme config.\n/// @param {Number} $elevation - the level of the elevation system in Material.\n/// @param {String} $shadow-color - the color to be used by the shadow.\n/// @return {Map} @see $_theme-values for accepted theme properties.\n///\n@function resolver($args...) {\n  $opts: meta.keywords($args);\n  $elevation: map.get($opts, elevation);\n  $shadow-color: map.get($opts, shadow-color);\n  @if custom-properties.is-custom-prop($elevation) {\n    @return _resolve-custom-props($elevation, $shadow-color);\n  }\n\n  @return (shadow: _shadow($elevation, $shadow-color));\n}\n\n@function _resolve-custom-props($elevation, $shadow-color) {\n  $fallback-dp: custom-properties.get-fallback($elevation);\n  $fallback-shadow-color: custom-properties.get-fallback($shadow-color);\n  $shadow: custom-properties.set-fallback(\n    $elevation,\n    _shadow($fallback-dp, $fallback-shadow-color)\n  );\n  @return (shadow: $shadow);\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(size, map.get($theme, font-size));\n  @include theme.property(weight, map.get($theme, font-weight));\n  @include theme.property(tracking, map.get($theme, letter-spacing));\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/tokens/resolvers';\n@use './button-ripple';\n@use './button-shared-theme';\n@use './button-text-theme';\n\n@mixin styles(\n  $theme: button-text-theme.$light-theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include button-base.static-styles($query: $query);\n  @include static-styles($query: $query);\n  .mdc-button {\n    @include button-text-theme.theme-styles($theme, $query: $query);\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include static-styles-without-ripple($query: $query);\n  @include button-ripple.static-styles($query: $query);\n}\n\n@mixin static-styles-without-ripple($query: feature-targeting.all()) {\n  .mdc-button {\n    // TODO(b/179402677): move this into theme config\n    @include button-shared-theme.horizontal-padding(\n      button-shared-theme.$horizontal-padding,\n      $query: $query\n    );\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './button-ripple';\n\n$height: 36px !default;\n$horizontal-padding: 8px !default;\n$contained-horizontal-padding: 16px !default;\n// For a contained button with an icon, the padding on the side of the\n// button with the icon.\n$contained-horizontal-padding-icon: 12px !default;\n\n$minimum-height: 24px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$shape-radius: small !default;\n\n$disabled-ink-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-container-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.12\n) !default;\n\n@mixin theme($theme, $resolver, $query: feature-targeting.all()) {\n  @include _label-text-typography(\n    (\n      family: map.get($theme, label-text-font),\n      size: map.get($theme, label-text-size),\n      tracking: map.get($theme, label-text-tracking),\n      weight: map.get($theme, label-text-weight),\n      transform: map.get($theme, label-text-transform),\n    ),\n    $query: $query\n  );\n\n  @include container-fill-color(\n    (\n      default: map.get($theme, container-color),\n      disabled: map.get($theme, disabled-container-color),\n    ),\n    $query: $query\n  );\n\n  @include ink-color(\n    (\n      default: map.get($theme, label-text-color),\n      hover: map.get($theme, hover-label-text-color),\n      focus: map.get($theme, focus-label-text-color),\n      pressed: map.get($theme, pressed-label-text-color),\n      disabled: map.get($theme, disabled-label-text-color),\n    ),\n    $query: $query\n  );\n\n  @include icon-color(\n    (\n      default: map.get($theme, with-icon-icon-color),\n      hover: map.get($theme, with-icon-hover-icon-color),\n      focus: map.get($theme, with-icon-focus-icon-color),\n      pressed: map.get($theme, with-icon-pressed-icon-color),\n      disabled: map.get($theme, with-icon-disabled-icon-color),\n    ),\n    $query: $query\n  );\n\n  $icon-size: map.get($theme, with-icon-icon-size);\n  @include _icon-size($icon-size, $query: $query);\n\n  @include _states-colors(\n    (\n      focus: map.get($theme, focus-state-layer-color),\n      hover: map.get($theme, hover-state-layer-color),\n      pressed: map.get($theme, pressed-state-layer-color),\n    ),\n    $query: $query\n  );\n\n  $hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity);\n  $focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity);\n  $pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity);\n  @include ripple-theme.states-opacities(\n    $opacity-map: (\n      focus: $focus-state-layer-opacity,\n      hover: $hover-state-layer-opacity,\n      press: $pressed-state-layer-opacity,\n    ),\n    $ripple-target: button-ripple.$ripple-target,\n    $query: $query\n  );\n\n  $container-height: map.get($theme, container-height);\n  @include height($container-height, $query: $query);\n\n  $container-height-value: if(\n    custom-properties.is-custom-prop($container-height),\n    custom-properties.get-fallback($container-height),\n    $container-height\n  );\n  @if $container-height-value != null and $container-height-value != $height {\n    @include _touch-target-reset($query: $query);\n  }\n\n  $shape: map.get($theme, container-shape);\n  @if $shape {\n    $container-height: if(\n      $container-height != null,\n      $container-height,\n      $height\n    );\n    @include _shape-radius-with-height(\n      $shape,\n      $height: $container-height,\n      $query: $query\n    );\n  }\n\n  @include _elevation(\n    $resolver,\n    $elevation-map: (\n      default: map.get($theme, container-elevation),\n      disabled: map.get($theme, disabled-container-elevation),\n      focus: map.get($theme, focus-container-elevation),\n      hover: map.get($theme, hover-container-elevation),\n      pressed: map.get($theme, pressed-container-elevation)\n    ),\n    $shadow-color: map.get($theme, container-shadow-color),\n    $query: $query\n  );\n}\n\n@function resolve-theme-elevation-keys($theme, $resolver) {\n  $elevation-resolver: map.get($resolver, elevation);\n  $shadow-color: map.get($theme, container-shadow-color);\n  @if $elevation-resolver == null or $shadow-color == null {\n    @return $theme;\n  }\n\n  $elevation-keys: (\n    container-elevation,\n    hover-container-elevation,\n    focus-container-elevation,\n    pressed-container-elevation,\n    disabled-container-elevation\n  );\n\n  @each $key in $elevation-keys {\n    $elevation: map.get($theme, $key);\n    @if $elevation != null {\n      $resolved-value: meta.call(\n        $resolver,\n        $elevation: $elevation,\n        $shadow-color: $shadow-color\n      );\n      // Update the key with the resolved value.\n      $theme: map.set($theme, $key, $resolved-value);\n    }\n  }\n  @return $theme;\n}\n\n///\n/// Sets ripple color for button.\n///\n@mixin ripple-states(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: button-ripple.$ripple-target\n  );\n}\n\n@mixin filled-accessible(\n  $container-fill-color,\n  $query: feature-targeting.all()\n) {\n  $fill-tone: theme-color.tone($container-fill-color);\n\n  @include container-fill-color($container-fill-color, $query);\n\n  @if ($fill-tone == 'dark') {\n    @include ink-color(text-primary-on-dark, $query);\n    @include ripple-states($color: text-primary-on-dark, $query: $query);\n  } @else {\n    @include ink-color(text-primary-on-light, $query);\n    @include ripple-states($color: text-primary-on-light, $query: $query);\n  }\n}\n\n///\n/// Sets the container fill color to the given color for an enabled button.\n/// @param {Color|map} $color-or-map - The desired container fill color,\n///     specified either as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  // :not(:disabled) is used to support link styled as button\n  // as link does not support :enabled style\n  &:not(:disabled) {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:hover {\n      @include _container-fill-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus() {\n      @include _container-fill-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.active {\n      @include _container-fill-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the container fill color to the given color for a disabled button.\n/// @param {Color} $color - The desired container fill color.\n/// @deprecated - call `container-fill-color` instead with `disabled` as a map\n///     key.\n///\n@mixin disabled-container-fill-color($color, $query: feature-targeting.all()) {\n  @include container-fill-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets the icon color to the given color for an enabled button.\n/// @param {Color} $color-or-map - The desired icon color, specified either\n///     as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:hover {\n      @include _icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus() {\n      @include _icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.active {\n      @include _icon-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the icon color to the given color for a disabled button.\n/// @param {Color} $color - The desired icon color.\n/// @deprecated - call `icon-color` instead with `disabled` as a map key.\n///\n@mixin disabled-icon-color($color, $query: feature-targeting.all()) {\n  @include icon-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets the ink color to the given color for an enabled button,\n/// and sets the icon color to the given color unless `mdc-button-icon-color`\n/// is also used.\n/// @param {Color} $color-or-map - The desired ink color, specified either\n///     as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n\n    &:hover {\n      @include _ink-color(state.get-hover-state($color-or-map), $query: $query);\n    }\n\n    @include ripple-theme.focus() {\n      @include _ink-color(state.get-focus-state($color-or-map), $query: $query);\n    }\n\n    @include ripple-theme.active {\n      @include _ink-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color to the given color for a disabled button,\n/// and sets the icon color to the given color unless `mdc-button-icon-color`\n/// is also used.\n/// @param {Color} $color - The desired ink color.\n/// @deprecated - call `ink-color` instead with `disabled` as a map key.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets density scale for button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-3`,\n///     `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height($height, $query: $query);\n\n  @if $density-scale != 0 {\n    @include _touch-target-reset($query: $query);\n  }\n}\n\n///\n/// Resets touch target-related styles. This is called from the density mixin to\n/// automatically remove the increased touch target, since dense components\n/// don't have the same default a11y requirements.\n/// @access private\n///\n@mixin _touch-target-reset($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .mdc-button__touch {\n    @include feature-targeting.targets($feat-structure) {\n      // Do not set display: none in case the touch target is <a> element.\n      height: 100%;\n    }\n  }\n}\n\n///\n/// Sets custom height for button.\n/// @param {Number} $height - Height of button in `px`.\n///\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include _shape-radius-with-height($radius, $rtl-reflexive, $height, $query);\n}\n\n@mixin _shape-radius-with-height(\n  $radius,\n  $rtl-reflexive: false,\n  $height: $height,\n  $query: feature-targeting.all()\n) {\n  @include shape-mixins.radius(\n    $radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n\n  #{button-ripple.$ripple-target} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets horizontal padding to the given number.\n/// @param {Number} $padding\n/// @param {Number} $padding-icon [null] For buttons with an icon, the\n///     horizontal padding on the side with the icon, if different from\n///     $padding.\n///\n@mixin horizontal-padding(\n  $padding,\n  $padding-icon: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // $padding should be a single value; enforce it by specifying all 4 sides in the output\n    padding: 0 $padding 0 $padding;\n  }\n\n  @if $padding-icon != null {\n    &.mdc-button--icon-trailing {\n      @include feature-targeting.targets($feat-structure) {\n        // $padding should be a single value; enforce it by specifying all 4\n        // sides in the output.\n        padding: 0 $padding-icon 0 $padding;\n      }\n    }\n\n    &.mdc-button--icon-leading {\n      @include feature-targeting.targets($feat-structure) {\n        // $padding should be a single value; enforce it by specifying all 4\n        // sides in the output.\n        padding: 0 $padding 0 $padding-icon;\n      }\n    }\n  }\n}\n\n///\n/// Sets the button label to overflow as ellipsis\n///\n@mixin label-overflow-ellipsis($query: feature-targeting.all()) {\n  .mdc-button__label {\n    @include typography.overflow-ellipsis($query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  &::before {\n    @include dom-mixins.transparent-border($query: $query);\n  }\n\n  // Link buttons apply focus to the contained link. Focus is indicated via the\n  // link since focus-within isn't supported by IE.\n  & .mdc-button__link:focus,\n  &:focus {\n    &::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 5px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets the container fill color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n///\n/// Sets the icon color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _icon-size($size-px, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $size-px != null {\n    $size-rem: typography.px-to-rem($size-px);\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(font-size, $size-rem);\n        @include theme.property(width, $size-rem);\n        @include theme.property(height, $size-rem);\n      }\n    }\n  }\n}\n\n///\n/// Sets the ink color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin _states-colors($color-map, $query: feature-targeting.all()) {\n  $hover: map.get($color-map, hover);\n\n  $hover-value: if(\n    custom-properties.is-custom-prop($hover),\n    custom-properties.get-fallback($hover),\n    $hover\n  );\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  @if $hover-value != null {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: button-ripple.$ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin _label-text-typography(\n  $typography-map,\n  $query: feature-targeting.all()\n) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  $family: map.get($typography-map, family);\n  $size: map.get($typography-map, size);\n  $tracking: map.get($typography-map, tracking);\n  $weight: map.get($typography-map, weight);\n  $transform: map.get($typography-map, transform);\n\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, $family);\n    @include theme.property(font-size, $size);\n    @include theme.property(letter-spacing, $tracking);\n    @include theme.property(font-weight, $weight);\n    @include theme.property(text-transform, $transform);\n  }\n}\n\n@mixin _elevation(\n  $resolver,\n  $elevation-map,\n  $shadow-color,\n  $query: feature-targeting.all()\n) {\n  $elevation-resolver: map.get($resolver, elevation);\n\n  @if $shadow-color {\n    $default: state.get-default-state($elevation-map);\n    @if $default != null {\n      @include elevation-theme.with-resolver(\n        $elevation-resolver,\n        $elevation: $default,\n        $shadow-color: $shadow-color,\n        $query: $query\n      );\n    }\n\n    $focus: state.get-focus-state($elevation-map);\n    @if $focus != null {\n      @include ripple-theme.focus {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $focus,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $hover: state.get-hover-state($elevation-map);\n    @if $hover != null {\n      &:hover {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $hover,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $pressed: state.get-pressed-state($elevation-map);\n    @if $pressed != null {\n      @include ripple-theme.active {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $pressed,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $disabled: state.get-disabled-state($elevation-map);\n    @if $disabled != null {\n      &:disabled {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $disabled,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/tokens/resolvers';\n@use './button-base';\n@use './button-filled-theme';\n@use './button-ripple';\n@use './button-shared-theme';\n\n@mixin styles(\n  $theme: button-filled-theme.$light-theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include button-base.static-styles($query: $query);\n  @include static-styles($query: $query);\n  .mdc-button--unelevated {\n    @include button-filled-theme.theme-styles(\n      $theme,\n      $resolver,\n      $query: $query\n    );\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include static-styles-without-ripple($query: $query);\n  @include button-ripple.static-styles($query: $query);\n}\n\n@mixin static-styles-without-ripple($query: feature-targeting.all()) {\n  .mdc-button--unelevated {\n    @include button-base.raised-transition($query: $query);\n    // TODO(b/179402677): move into theme config\n    @include button-shared-theme.horizontal-padding(\n      $padding: button-shared-theme.$contained-horizontal-padding,\n      $padding-icon: button-shared-theme.$contained-horizontal-padding-icon,\n      $query: $query\n    );\n  }\n}\n\n// Legacy mixins\n\n@mixin filled($query: feature-targeting.all()) {\n  // TODO(b/179402677): move into theme config\n  @include button-shared-theme.horizontal-padding(\n    $padding: button-shared-theme.$contained-horizontal-padding,\n    $padding-icon: button-shared-theme.$contained-horizontal-padding-icon,\n    $query: $query\n  );\n  @include button-filled-theme.theme-styles(\n    button-filled-theme.$light-theme,\n    $query: $query\n  );\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-filled($query) {\n  @include filled($query);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use './button-base';\n@use './button-protected-theme';\n@use './button-ripple';\n@use './button-shared-theme';\n\n@mixin styles(\n  $theme: button-protected-theme.$light-theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include button-base.static-styles($query: $query);\n  @include static-styles($query: $query);\n  .mdc-button--raised {\n    @include button-protected-theme.theme-styles(\n      $theme,\n      $resolver: $resolver,\n      $query: $query\n    );\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include static-styles-without-ripple($query: $query);\n  @include button-ripple.static-styles($query: $query);\n}\n\n@mixin static-styles-without-ripple($query: feature-targeting.all()) {\n  .mdc-button--raised {\n    @include button-base.raised-transition($query);\n    // TODO(b/179402677): move into theme config\n    @include button-shared-theme.horizontal-padding(\n      $padding: button-shared-theme.$contained-horizontal-padding,\n      $padding-icon: button-shared-theme.$contained-horizontal-padding-icon,\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-raised($query) {\n  @include raised($query);\n}\n\n@mixin raised($query) {\n  @include elevation-theme.elevation(2, $query: $query);\n\n  &:hover,\n  &:focus {\n    @include elevation-theme.elevation(4, $query: $query);\n  }\n\n  &:active {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  &:disabled {\n    @include elevation-theme.elevation(0, $query: $query);\n  }\n\n  @include button-base.raised-transition($query);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use './button-base';\n@use './button-outlined-theme';\n@use './button-ripple';\n@use './button-shared-theme';\n\n@mixin styles(\n  $theme: button-outlined-theme.$light-theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include button-base.static-styles($query: $query);\n  @include static-styles($query: $query);\n  .mdc-button--outlined {\n    @include theme-styles($theme, $resolver, $query: $query);\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include static-styles-without-ripple($query: $query);\n  @include button-ripple.static-styles($query: $query);\n}\n\n@mixin static-styles-without-ripple($query: feature-targeting.all()) {\n  .mdc-button--outlined {\n    @include _static-styles($query: $query);\n  }\n}\n\n@mixin _static-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-style: solid;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    $duration: elevation-theme.$transition-duration;\n    $easing: elevation-theme.$transition-timing-function;\n    transition: border #{$duration} #{$easing};\n  }\n\n  #{button-ripple.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      border-style: solid;\n      border-color: transparent;\n    }\n  }\n}\n\n@mixin outlined($query: feature-targeting.all()) {\n  @include _static-styles($query: $query);\n  @include button-outlined-theme.theme-styles(\n    button-outlined-theme.$light-theme,\n    $query: $query\n  );\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-outlined($query) {\n  @include outlined($query);\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use './ripple-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n\n  .mdc-ripple-surface {\n    @include ripple-theme.states($query: $query);\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-ripple-surface {\n    @include surface($query: $query);\n    @include radius-bounded($query: $query);\n    @include surface-styles($query: $query);\n  }\n\n  .mdc-ripple-surface[data-mdc-ripple-is-unbounded],\n  .mdc-ripple-upgraded--unbounded {\n    @include radius-unbounded($query: $query);\n    @include unbounded-styles($query: $query);\n  }\n}\n\n/// Sets all states (including hover, focus, press, activated and selected) with\n/// given color as base color.\n///\n/// This mixin is for internal use only. Use `ripple-theme.states($color)` mixin\n/// to set interactive states (hover, focus & press) color.\n///\n/// @param {Color|String} $color - Target base color. Can be valid CSS color or\n///     a color string literal (i.e., `primary`, `secondary`, etc).\n@mixin states-for-color($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states($color, $query: $query);\n  @include ripple-theme.states-activated($color, $query: $query);\n  @include ripple-theme.states-selected($color, $query: $query);\n}\n\n@mixin surface-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n    outline: none;\n    overflow: hidden;\n  }\n}\n\n@mixin unbounded-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n}\n\n@mixin common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // Ensure that styles needed by any component using MDC Ripple are emitted, but only once.\n  // (Every component using MDC Ripple imports these mixins, but doesn't necessarily import\n  // mdc-ripple.scss.)\n  @include feature-targeting.targets($feat-animation) {\n    @include base-mixins.emit-once('mdc-ripple/common/animation') {\n      @include keyframes_;\n    }\n  }\n}\n\n@mixin surface(\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $include-will-change: true // TODO(b/151931961): Remove once resolved\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    // TODO(b/151931961): Remove the following block once resolved\n    @if $include-will-change {\n      will-change: transform, opacity;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: '';\n    }\n  }\n\n  #{$ripple-target}::before {\n    @include feature-targeting.targets($feat-animation) {\n      // Also transition background-color to avoid unnatural color flashes when toggling activated/selected state\n      transition: opacity ripple-theme.$states-wash-duration linear,\n        background-color ripple-theme.$states-wash-duration linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that the ripple wash for hover/focus states is displayed on top of positioned child elements\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 1)\n      );\n    }\n  }\n\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 0)\n      );\n    }\n  }\n\n  // Common styles for upgraded surfaces (some of these depend on custom properties set via JS or other mixins)\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n        transform: scale(0);\n        transform-origin: center center;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--unbounded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: var(--mdc-ripple-top, 0);\n        @include rtl.ignore-next-line();\n        left: var(--mdc-ripple-left, 0);\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-activation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-radius-in ripple-theme.$translate-duration\n            forwards,\n          mdc-ripple-fg-opacity-in ripple-theme.$fade-in-duration forwards;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-deactivation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-opacity-out ripple-theme.$fade-out-duration;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        // Retain transform from mdc-ripple-fg-radius-in activation\n        transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n          scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n  }\n}\n\n@mixin radius-bounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{$radius});\n      @include rtl.ignore-next-line();\n      left: calc(50% - #{$radius});\n      width: $radius * 2;\n      height: $radius * 2;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n@mixin radius-unbounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{math.div($radius, 2)});\n      @include rtl.ignore-next-line();\n      left: calc(50% - #{math.div($radius, 2)});\n      width: $radius;\n      height: $radius;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        top: var(--mdc-ripple-top, calc(50% - #{math.div($radius, 2)}));\n        @include rtl.ignore-next-line();\n        left: var(--mdc-ripple-left, calc(50% - #{math.div($radius, 2)}));\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n// Common styles for a ripple target element.\n// Used for components which have an inner ripple target element.\n@mixin target-common($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    // Necessary for clicks on other inner elements (e.g. close icon in chip)\n    // to go through.\n    pointer-events: none;\n  }\n}\n\n@mixin keyframes_ {\n  @keyframes mdc-ripple-fg-radius-in {\n    from {\n      animation-timing-function: variables2.$standard-curve-timing-function;\n      // NOTE: For these keyframes, we do not need custom property fallbacks because they are only\n      // used in conjunction with `.mdc-ripple-upgraded`. Since MDCRippleFoundation checks to ensure\n      // that custom properties are supported within the browser before adding this class, we can\n      // safely use them without a fallback.\n      transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    }\n\n    to {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n        scale(var(--mdc-ripple-fg-scale, 1));\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-in {\n    from {\n      animation-timing-function: linear;\n      opacity: 0;\n    }\n\n    to {\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-out {\n    from {\n      animation-timing-function: linear;\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$deceleration-curve-timing-function: cubic-bezier(0, 0, 0.2, 1) !default;\n$standard-curve-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$acceleration-curve-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n$sharp-curve-timing-function: cubic-bezier(0.4, 0, 0.6, 1) !default;\n\n@function enter($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $deceleration-curve-timing-function;\n}\n\n@function exit-permanent($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $acceleration-curve-timing-function;\n}\n\n@function exit-temporary($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $sharp-curve-timing-function;\n}\n\n@function standard($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $standard-curve-timing-function;\n}\n\n@function linear($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay linear;\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n\n$ripple-target: '.mdc-button__ripple';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-button {\n    @include ripple.surface($query: $query, $ripple-target: $ripple-target);\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n\n    #{$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        position: absolute;\n        // Ripple needs content-box as the box sizing and box-sizing: border-box\n        // is often set as a default, so we override that here.\n        box-sizing: content-box;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        z-index: 0;\n      }\n    }\n\n    // Ripple targets inside outlined buttons set their own `top`/`left`,\n    // depending on the border width.\n    &:not(.mdc-button--outlined) #{$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        top: 0;\n        left: 0;\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use './button-base';\n@use './button-filled';\n@use './button-filled-theme';\n@use './button-outlined';\n@use './button-outlined-theme';\n@use './button-protected';\n@use './button-protected-theme';\n@use './button-ripple';\n@use './button-text';\n@use './button-text-theme';\n@use './button-theme';\n@use './button-shared-theme';\n\n// For backwards compatibility.\n@forward './button-base' show deprecated-base, base, icon, icon-trailing, icon-svg, icon-contained, icon-contained-trailing, deprecated-icon, deprecated-icon-trailing, deprecated-icon-svg, deprecated-icon-contained, deprecated-icon-contained-trailing;\n\n@mixin styles($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n  @include theme-styles($query: $query);\n}\n\n@mixin theme-styles($query: feature-targeting.all()) {\n  .mdc-button {\n    @include button-text-theme.theme-styles(\n      button-text-theme.$light-theme,\n      $query: $query\n    );\n  }\n  .mdc-button--unelevated {\n    @include button-filled-theme.theme-styles(\n      button-filled-theme.$light-theme,\n      $query: $query\n    );\n  }\n  .mdc-button--raised {\n    @include button-protected-theme.theme-styles(\n      button-protected-theme.$light-theme,\n      $query: $query\n    );\n  }\n  .mdc-button--outlined {\n    @include button-outlined-theme.theme-styles(\n      button-outlined-theme.$light-theme,\n      $query: $query\n    );\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include static-styles-without-ripple($query: $query);\n  @include button-ripple.static-styles($query: $query);\n}\n\n@mixin static-styles-without-ripple($query: feature-targeting.all()) {\n  @include button-base.static-styles($query: $query);\n  @include button-text.static-styles-without-ripple($query: $query);\n  @include button-filled.static-styles-without-ripple($query: $query);\n  @include button-protected.static-styles-without-ripple($query: $query);\n  @include button-outlined.static-styles-without-ripple($query: $query);\n}\n\n// Legacy mixins\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  @include button-base.deprecated-static-styles-without-ripple($query: $query);\n  @include button-text.static-styles-without-ripple($query: $query);\n  @include button-filled.static-styles-without-ripple($query: $query);\n  @include button-protected.static-styles-without-ripple($query: $query);\n  @include button-outlined.static-styles-without-ripple($query: $query);\n  @include _theme-styles-without-ripple($query: $query);\n}\n\n@mixin _theme-styles-without-ripple($query: feature-targeting.all()) {\n  @include button-text-theme.deprecated-theme-styles($query: $query);\n  @include button-filled-theme.deprecated-theme-styles($query: $query);\n  @include button-outlined-theme.deprecated-theme-styles($query: $query);\n  // Elevation has been recategorized into theme styles. Keeping old elevation\n  // styles here for backwards compatibility.\n  .mdc-button--raised {\n    @include button-protected.raised($query: $query);\n  }\n}\n\n// @deprecated - use styles() instead.\n@mixin core-styles($query: feature-targeting.all()) {\n  @include styles($query: $query);\n  // TODO: remove this rule since padding now takes care of icon margins.\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-button--raised,\n  .mdc-button--unelevated,\n  .mdc-button--outlined {\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        // Icons inside contained buttons have different styles due to increased button padding\n        @include button-base.icon-contained;\n      }\n    }\n\n    .mdc-button__label + .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include button-base.icon-contained-trailing;\n      }\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @if color.alpha(theme-color.prop-value($color)) > 0 {\n          @include theme.property(background-color, $color);\n        } @else {\n          // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n          // This avoids unnecessary transitions and overflow.\n          content: none;\n        }\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/tokens/resolvers';\n@use '@material/ripple/ripple-theme';\n@use './button-base';\n@use './button-shared-theme';\n@use './button-ripple';\n\n$outlined-border-width: 1px !default;\n$outline-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$_custom-property-prefix: 'outlined-button';\n\n$light-theme: (\n  container-height: button-shared-theme.$height,\n  container-shape: button-shared-theme.$shape-radius,\n  disabled-label-text-color: button-shared-theme.$disabled-ink-color,\n  disabled-outline-color: button-shared-theme.$disabled-container-color,\n  focus-label-text-color: null,\n  focus-outline-color: null,\n  focus-state-layer-color: primary,\n  focus-state-layer-opacity: 0.12,\n  hover-label-text-color: null,\n  hover-outline-color: null,\n  hover-state-layer-color: primary,\n  hover-state-layer-opacity: 0.04,\n  label-text-color: primary,\n  label-text-font: button-font-family,\n  label-text-size: button-font-size,\n  label-text-tracking: button-letter-spacing,\n  label-text-transform: button-text-transform,\n  label-text-weight: button-font-weight,\n  outline-color: $outline-color,\n  outline-width: $outlined-border-width,\n  pressed-label-text-color: null,\n  pressed-state-layer-color: primary,\n  pressed-state-layer-opacity: 0.12,\n  with-icon-icon-color: null,\n  with-icon-icon-size: 18px,\n  with-icon-hover-icon-color: null,\n  with-icon-focus-icon-color: null,\n  with-icon-pressed-icon-color: null,\n  with-icon-disabled-icon-color: null,\n);\n\n/// Sets theme based on provided theme configuration.\n/// Only emits theme related styles.\n/// @param {Map} $theme - Theme configuration to use.\n@mixin theme($theme, $resolver: resolvers.$material) {\n  @include theme.validate-theme($light-theme, $theme);\n  $theme: button-shared-theme.resolve-theme-elevation-keys(\n    $theme,\n    $resolver: $resolver\n  );\n  @include keys.declare-custom-properties($theme, $_custom-property-prefix);\n}\n\n@mixin theme-styles(\n  $theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include theme.validate-theme($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n  @include _theme($theme, $resolver, $query: $query);\n}\n\n@mixin _theme($theme, $resolver, $query) {\n  @include button-shared-theme.theme($theme, $resolver, $query: $query);\n  @include outline-color(\n    (\n      default: map.get($theme, outline-color),\n      disabled: map.get($theme, disabled-outline-color),\n      focus: map.get($theme, focus-outline-color),\n      hover: map.get($theme, hover-outline-color),\n    ),\n    $query: $query\n  );\n  @include outline-width(map.get($theme, outline-width), $query: $query);\n}\n\n@mixin deprecated-theme-styles($query: feature-targeting.all()) {\n  .mdc-button--outlined {\n    $theme: map.merge(\n      $light-theme,\n      (\n        focus-state-layer-color: null,\n        focus-state-layer-opacity: null,\n        hover-state-layer-color: null,\n        hover-state-layer-opacity: null,\n        pressed-state-layer-color: null,\n        pressed-state-layer-opacity: null,\n        label-text-font: null,\n        label-text-size: null,\n        label-text-tracking: null,\n        label-text-transform: null,\n        label-text-weight: null,\n      )\n    );\n    @include _theme($theme, resolvers.$material, $query: $query);\n  }\n}\n\n///\n/// Sets the outline color to the given color for an enabled button.\n/// @param {Color} $color-or-map - The desired outline color, specified either\n///     as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin outline-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include _outline-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:hover {\n      @include _outline-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus() {\n      @include _outline-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    // Increase active state specificity due to ripple-theme.focus().\n    &:active,\n    &:focus:active {\n      @include _outline-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _outline-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the outline color to the given color for a disabled button.\n/// @param {Color} $color - The desired outline color.\n/// @deprecated - call `outline-color` instead with `disabled` as a map key.\n///\n@mixin disabled-outline-color($color, $query: feature-targeting.all()) {\n  @include outline-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n@mixin outline-width(\n  $outline-width,\n  $padding: button-shared-theme.$contained-horizontal-padding,\n  // For a button with an icon, the padding on the side of the button with the\n  // icon.\n  $padding-icon: button-shared-theme.$contained-horizontal-padding-icon,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $outline-width != null {\n    $outline-width-value: if(\n      custom-properties.is-custom-prop($outline-width),\n      custom-properties.get-fallback($outline-width),\n      $outline-width\n    );\n    // TODO(b/194792044): uncouple padding from outline-width\n    // Note: Adjust padding to maintain consistent width with non-outlined buttons\n    $padding-value: math.max($padding - $outline-width-value, 0);\n    $padding-icon-value: math.max($padding-icon - $outline-width-value, 0);\n\n    @include button-shared-theme.horizontal-padding(\n      $padding: $padding-value,\n      $padding-icon: $padding-icon-value,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-width, $outline-width);\n    }\n\n    #{button-ripple.$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(\n          top,\n          'calc(-1 * outline-width)',\n          $replace: (outline-width: $outline-width)\n        );\n        @include theme.property(\n          left,\n          'calc(-1 * outline-width)',\n          $replace: (outline-width: $outline-width)\n        );\n        @include theme.property(border-width, $outline-width);\n      }\n    }\n    .mdc-button__touch {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(\n          left,\n          'calc(-1 * outline-width)',\n          $replace: (outline-width: $outline-width)\n        );\n        @include theme.property(\n          width,\n          'calc(100% + 2 * outline-width)',\n          $replace: (outline-width: $outline-width)\n        );\n      }\n    }\n  }\n}\n\n///\n/// Sets the outline color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _outline-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use './variables';\n@use '@material/theme/theme-color';\n@use '@material/dom/mixins' as dom-mixins;\n\n//\n// Public\n//\n\n$ripple-target: '.mdc-card__ripple';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// card styles. It is recommended that most users use `mdc-card-core-styles` instead.\n@mixin without-ripple($query: feature-targeting.all()) {\n  // postcss-bem-linter: define card\n\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // prettier-ignore\n  @include elevation-mixins.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-card {\n    @include shape-radius(variables.$shape-radius, $query: $query);\n    @include fill-color(surface, $query);\n    @include elevation-mixins.overlay-surface-position($query: $query);\n    @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n    @include elevation-mixins.elevation(1, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      @include container-layout_;\n    }\n\n    // Transparent card border for high-contrast mode.\n    &::after {\n      @include shape-radius(variables.$shape-radius, $query: $query);\n      @include dom-mixins.transparent-border($query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-card--outlined {\n    @include elevation-mixins.elevation(0, $query: $query);\n    @include outline(variables.$outline-color, $query: $query);\n\n    // Outlined card already displays border in high-contrast mode. Overwriting\n    // styles set above to remove a duplicate border.\n    &::after {\n      @include feature-targeting.targets($feat-structure) {\n        border: none;\n      }\n    }\n  }\n\n  .mdc-card__content {\n    @include feature-targeting.targets($feat-structure) {\n      border-radius: inherit;\n      height: 100%;\n    }\n  }\n\n  //\n  // Media\n  //\n\n  .mdc-card__media {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative; // Child element `__media-content` has `position: absolute`\n      box-sizing: border-box;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover;\n    }\n\n    &::before {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n        content: '';\n      }\n    }\n  }\n\n  .mdc-card__media:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-left-radius: inherit;\n      border-top-right-radius: inherit;\n    }\n  }\n\n  .mdc-card__media:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-left-radius: inherit;\n      border-bottom-right-radius: inherit;\n    }\n  }\n\n  .mdc-card__media--square {\n    @include media-aspect-ratio(1, 1, $query);\n  }\n\n  .mdc-card__media--16-9 {\n    @include media-aspect-ratio(16, 9, $query);\n  }\n\n  .mdc-card__media-content {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      box-sizing: border-box;\n    }\n  }\n\n  //\n  // Primary action\n  //\n\n  .mdc-card__primary-action {\n    @include feature-targeting.targets($feat-structure) {\n      @include container-layout_;\n\n      position: relative; // Needed to prevent the ripple wash from overflowing the container in IE and Edge\n      outline: none;\n      color: inherit;\n      text-decoration: none;\n      cursor: pointer;\n      overflow: hidden;\n    }\n  }\n\n  .mdc-card__primary-action:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-left-radius: inherit;\n      border-top-right-radius: inherit;\n    }\n  }\n\n  .mdc-card__primary-action:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-left-radius: inherit;\n      border-bottom-right-radius: inherit;\n    }\n  }\n\n  //\n  // Action row\n  //\n\n  .mdc-card__actions {\n    @include feature-targeting.targets($feat-structure) {\n      @include actions-layout_;\n\n      min-height: 52px;\n      padding: 8px;\n    }\n  }\n\n  .mdc-card__actions--full-bleed {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n    }\n  }\n\n  .mdc-card__action-buttons,\n  .mdc-card__action-icons {\n    @include feature-targeting.targets($feat-structure) {\n      @include actions-layout_;\n    }\n  }\n\n  .mdc-card__action-icons {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, variables.$action-icon-color);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      flex-grow: 1;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-card__action-buttons + .mdc-card__action-icons {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 16px);\n    }\n  }\n\n  //\n  // Action items\n  //\n\n  .mdc-card__action {\n    @include feature-targeting.targets($feat-structure) {\n      @include actions-layout_(inline-flex);\n\n      justify-content: center;\n      cursor: pointer;\n      user-select: none;\n    }\n\n    &:focus {\n      @include feature-targeting.targets($feat-structure) {\n        outline: none;\n      }\n    }\n  }\n\n  //\n  // Action buttons\n  //\n\n  .mdc-card__action--button {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 8px);\n\n      padding: 0 8px;\n    }\n\n    &:last-child {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, right, 0);\n      }\n    }\n  }\n\n  .mdc-card__actions--full-bleed .mdc-card__action--button {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n      width: 100%;\n      height: auto;\n      max-height: none;\n      margin: 0;\n      padding: 8px 16px;\n      @include rtl.ignore-next-line();\n      text-align: left;\n    }\n\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  //\n  // Action icons\n  //\n\n  .mdc-card__action--icon {\n    @include feature-targeting.targets($feat-structure) {\n      // Icon buttons are taller than buttons, so we need to adjust their margins to prevent the action row from\n      // expanding.\n      margin: -6px 0;\n\n      // Same padding as mdc-icon-button.\n      padding: 12px;\n    }\n  }\n\n  .mdc-card__action--icon:not(:disabled) {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, variables.$action-icon-color);\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// card styles. It is recommended that most users use `mdc-card-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-card__primary-action {\n    @include ripple.surface($query, $ripple-target: $ripple-target);\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n    @include ripple-theme.states(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n\n    #{$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: content-box;\n        height: 100%;\n        overflow: hidden;\n        left: 0;\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        width: 100%;\n      }\n    }\n\n    @include ripple-theme.focus {\n      &::after {\n        @include dom-mixins.transparent-border(\n          $border-width: 5px,\n          $border-style: double,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin outline(\n  $color,\n  $thickness: variables.$outline-width,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-width: $thickness;\n    border-style: solid;\n  }\n\n  @include feature-targeting.targets($feat-color) {\n    border-color: theme-color.prop-value($color);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n}\n\n@mixin media-aspect-ratio($x, $y, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      // This clever trick brought to you by: http://www.mademyday.de/css-height-equals-width-with-pure-css.html\n      margin-top: math.percentage(math.div($y, $x));\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin container-layout_ {\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n}\n\n@mixin actions-layout_($display: flex) {\n  display: $display;\n  flex-direction: row;\n  align-items: center;\n  box-sizing: border-box;\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:color';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$action-icon-color: rgba(\n  theme-color.prop-value(on-surface),\n  theme-color.text-emphasis(medium)\n) !default;\n$outline-color: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  12%\n) !default;\n$outline-width: 1px !default;\n$shape-radius: medium !default;\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/mixins' as rtl;\n@use '@material/theme/theme';\n@use '@material/touch-target/mixins' as touch;\n@use './variables';\n\n$ripple-target: '.mdc-deprecated-chip-trailing-action__ripple';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query: $query);\n  @include ripple($query: $query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include touch.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  @include _touch-target-base($query);\n\n  .mdc-deprecated-chip-trailing-action {\n    @include size(variables.$size, $query);\n    @include color(variables.$color, $query);\n    @include touch-target-width(variables.$touch-target-width, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      border: none;\n      display: inline-flex;\n      position: relative;\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n      padding: 0;\n      outline: none;\n      cursor: pointer;\n      -webkit-appearance: none;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      background: none;\n    }\n\n    // Nested to increase specificity, ensuring SVG and font icon\n    // color is affected regardless of load order without needing\n    // !important or HTML tag targetting.\n    .mdc-deprecated-chip-trailing-action__icon {\n      @include feature-targeting.targets($feat-color) {\n        fill: currentColor;\n        color: inherit;\n      }\n    }\n  }\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-deprecated-chip-trailing-action {\n    @include ripple.surface($query: $query, $ripple-target: $ripple-target);\n    @include ripple.radius-unbounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n    @include ripple-theme.states(\n      variables.$ripple-color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n\n    #{$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        position: absolute;\n        // Ripple needs content-box as the box sizing and box-sizing: border-box\n        // is often set as a default, so we override that here.\n        box-sizing: content-box;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n      }\n    }\n  }\n}\n\n/// Set the color of the trailing action\n/// @param {Color} $color The trailing action color\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-chip-trailing-action {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n/// Set the size of the trailing action\n/// @param {Number} $number The size of the trailing action\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-deprecated-chip-trailing-action__icon {\n    @include feature-targeting.targets($feat-structure) {\n      height: $size;\n      width: $size;\n      font-size: $size;\n    }\n  }\n}\n\n/// Set the horizontal spacing of the trailing action\n/// @param {Number} $left The left spacing\n/// @param {Number} $right The right spacing\n@mixin horizontal-spacing($left, $right, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-deprecated-chip-trailing-action {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left, $right);\n    }\n  }\n}\n\n/// Set the width of the touch target\n/// @param {Number} $width The width of the touch target\n@mixin touch-target-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-deprecated-chip-trailing-action__touch {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n    }\n  }\n}\n\n/// Private mixins\n\n@mixin _touch-target-base($query: feature-targeting.all()) {\n  .mdc-deprecated-chip-trailing-action__touch {\n    @include touch.touch-target($set-width: true, $query: $query);\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$size: 18px !default;\n$margin-right: -4px !default;\n$margin-left: 4px !default;\n$touch-target-width: 26px !default;\n$color: on-surface !default;\n$ripple-color: on-surface !default;\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/animation/functions';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/checkbox/functions' as checkbox-functions;\n@use '@material/checkbox/variables' as checkbox-variables;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use './variables';\n@use '@material/elevation/functions' as elevation-functions;\n@use '@material/theme/theme-color';\n@use './trailingaction/mixins' as trailing-action-mixins;\n\n$ripple-target: '.mdc-chip__ripple';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query: $query);\n  @include ripple($query: $query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include leading-icon-color(variables.$icon-color, $query: $query);\n  @include trailing-icon-color(variables.$icon-color, $query: $query);\n  @include leading-icon-size(variables.$leading-icon-size, $query: $query);\n  @include trailing-icon-size(variables.$trailing-icon-size, $query: $query);\n  @include trailing-icon-margin($query: $query);\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation-mixins.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-chip {\n    @include shape-radius(variables.$shape-radius, $query: $query);\n    @include fill-color(variables.$fill-color-default, $query: $query);\n    @include ink-color-without-ripple_(\n      variables.$ink-color-default,\n      $query: $query\n    );\n    @include typography.typography(body2, $query: $query);\n    @include density($density-scale: 0, $query: $query);\n    @include leading-icon-margin($query: $query);\n    @include elevation-mixins.overlay-surface-position($query: $query);\n    @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      // position: relative; already set in mdc-elevation-overlay-surface-position\n      align-items: center;\n      box-sizing: border-box;\n      padding: 0 variables.$horizontal-padding;\n      border-width: 0;\n      outline: none;\n      cursor: pointer;\n      -webkit-appearance: none;\n\n      &::-moz-focus-inner {\n        padding: 0;\n        border: 0;\n      }\n    }\n\n    &:hover {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, on-surface);\n      }\n    }\n\n    .mdc-chip__touch {\n      @include touch-target-mixins.touch-target($query: $query);\n    }\n  }\n\n  .mdc-chip--exit {\n    @include feature-targeting.targets($feat-color) {\n      transition: variables.$exit-transition;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n  }\n\n  .mdc-chip__overflow {\n    @include feature-targeting.targets($feat-structure) {\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n  }\n\n  .mdc-chip__text {\n    @include feature-targeting.targets($feat-structure) {\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-chip__icon {\n    @include feature-targeting.targets($feat-structure) {\n      border-radius: 50%;\n      outline: none;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-chip__checkmark {\n    @include feature-targeting.targets($feat-structure) {\n      height: variables.$leading-icon-size;\n    }\n  }\n\n  .mdc-chip__checkmark-path {\n    @include feature-targeting.targets($feat-animation) {\n      transition: checkbox-functions.transition-exit(\n        stroke-dashoffset,\n        variables.$checkmark-animation-delay,\n        variables.$checkmark-animation-duration\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      stroke-width: 2px;\n      stroke-dashoffset: checkbox-variables.$mark-path-length_;\n      stroke-dasharray: checkbox-variables.$mark-path-length_;\n    }\n  }\n\n  .mdc-chip__primary-action:focus {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  .mdc-chip--selected .mdc-chip__checkmark-path {\n    @include feature-targeting.targets($feat-structure) {\n      stroke-dashoffset: 0;\n    }\n  }\n\n  .mdc-chip__icon--leading,\n  .mdc-chip__icon--trailing {\n    @include feature-targeting.targets($feat-structure) {\n      // Make these positioned elements, such that they're stacked above the\n      // touch target element (`mdc-chip__touch`), so that clicks reach the\n      // icons (e.g. for removable input chips).\n      position: relative;\n    }\n  }\n\n  // Change color of selected choice chips\n\n  .mdc-chip-set--choice {\n    .mdc-chip {\n      @include selected-ink-color-without-ripple_(primary, $query: $query);\n    }\n\n    .mdc-chip--selected {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, surface);\n      }\n    }\n  }\n\n  // Add leading checkmark to filter chips with no leading icon\n\n  .mdc-chip__checkmark-svg {\n    @include feature-targeting.targets($feat-structure) {\n      width: 0;\n      height: variables.$leading-icon-size;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: width variables.$width-animation-duration\n        animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-chip--selected .mdc-chip__checkmark-svg {\n    @include feature-targeting.targets($feat-structure) {\n      width: variables.$leading-icon-size;\n    }\n  }\n\n  // Add leading checkmark to filter chips with a leading icon\n\n  .mdc-chip-set--filter {\n    .mdc-chip__icon--leading {\n      @include feature-targeting.targets($feat-animation) {\n        transition: opacity variables.$opacity-animation-duration linear;\n        transition-delay: variables.$leading-icon-delay;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n\n      + .mdc-chip__checkmark {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity variables.$opacity-animation-duration linear;\n\n          // Delay the checkmark transition.\n          transition-delay: variables.$checkmark-with-leading-icon-delay;\n        }\n\n        @include feature-targeting.targets($feat-structure) {\n          opacity: 0;\n        }\n\n        .mdc-chip__checkmark-svg {\n          // stylelint-disable max-nesting-depth\n\n          @include feature-targeting.targets($feat-animation) {\n            transition: width 0ms;\n          }\n\n          // stylelint-enable max-nesting-depth\n        }\n      }\n    }\n\n    .mdc-chip--selected .mdc-chip__icon--leading {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n\n      + .mdc-chip__checkmark {\n        @include feature-targeting.targets($feat-structure) {\n          // This ensures that the checkmark has zero width while the leading icon is still animating.\n          width: 0;\n          opacity: 1;\n        }\n      }\n    }\n\n    .mdc-chip__icon--leading-hidden.mdc-chip__icon--leading {\n      @include feature-targeting.targets($feat-structure) {\n        width: 0;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        // This ensures that the leading icon doesn't fade in while the checkmark is fading out.\n        opacity: 0;\n      }\n\n      + .mdc-chip__checkmark {\n        @include feature-targeting.targets($feat-structure) {\n          width: variables.$leading-icon-size;\n        }\n      }\n    }\n  }\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-chip {\n    @include ripple.surface($query: $query, $ripple-target: $ripple-target);\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n    @include ink-color-ripple_(variables.$ink-color-default, $query: $query);\n\n    #{$ripple-target} {\n      @include ripple.target-common($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        overflow: hidden;\n      }\n    }\n  }\n\n  .mdc-chip-set--choice {\n    .mdc-chip {\n      @include selected-ink-color-ripple_(primary, $query: $query);\n    }\n  }\n}\n\n@mixin set-core-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-chip-entry {\n      from {\n        transform: scale(0.8);\n        opacity: 0.4;\n      }\n\n      to {\n        transform: scale(1);\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-chip-set {\n    @include set-spacing(8px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-wrap: wrap;\n      box-sizing: border-box;\n    }\n  }\n\n  .mdc-chip-set--input .mdc-chip {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-chip-entry 100ms\n        animation-variables.$deceleration-curve-timing-function;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include shape-mixins.radius(\n    $radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n\n  #{$ripple-target} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin fill-color-accessible($color, $query: feature-targeting.all()) {\n  $fill-tone: theme-color.tone($color);\n\n  @include fill-color($color, $query: $query);\n\n  @if ($fill-tone == 'dark') {\n    @include ink-color(text-primary-on-dark, $query: $query);\n    @include selected-ink-color(text-primary-on-dark, $query: $query);\n    @include leading-icon-color(text-primary-on-dark, $query: $query);\n    @include trailing-icon-color(text-primary-on-dark, $query: $query);\n  } @else {\n    @include ink-color(text-primary-on-light, $query: $query);\n    @include selected-ink-color(text-primary-on-light, $query: $query);\n    @include leading-icon-color(text-primary-on-light, $query: $query);\n    @include trailing-icon-color(text-primary-on-light, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color-ripple_($color, $query: $query);\n  @include ink-color-without-ripple_($color, $query: $query);\n}\n\n@mixin ink-color-without-ripple_($color, $query) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin ink-color-ripple_($color, $query) {\n  @include ripple-theme.states(\n    $color,\n    true,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin selected-ink-color($color, $query: feature-targeting.all()) {\n  @include selected-ink-color-ripple_($color, $query: $query);\n  @include selected-ink-color-without-ripple_($color, $query: $query);\n}\n\n@mixin selected-ink-color-without-ripple_($color, $query) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-chip--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n\n    @include leading-icon-color($color, $query: $query);\n\n    &:hover {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  .mdc-chip__checkmark-path {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(stroke, $color);\n    }\n  }\n}\n\n@mixin selected-ink-color-ripple_($color, $query) {\n  &.mdc-chip {\n    @include ripple-theme.states-selected(\n      $color,\n      $has-nested-focusable-element: true,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin outline(\n  $width: 1px,\n  $style: solid,\n  $color: theme-color.prop-value(on-surface),\n  $query: feature-targeting.all()\n) {\n  @include outline-width($width, $query: $query);\n  @include outline-style($style, $query: $query);\n  @include outline-color($color, $query: $query);\n}\n\n@mixin outline-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(border-color, $color);\n  }\n}\n\n@mixin outline-style($style, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-style: $style;\n  }\n}\n\n@mixin outline-width(\n  $width,\n  $horizontal-padding: variables.$horizontal-padding,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Note: Adjust padding to maintain consistent width with non-outlined chips\n  $horizontal-padding-value: math.max($horizontal-padding - $width, 0);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding-right: $horizontal-padding-value;\n    padding-left: $horizontal-padding-value;\n    border-width: $width;\n  }\n\n  #{$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      top: -$width;\n      left: -$width;\n      border: $width solid transparent;\n    }\n  }\n}\n\n@mixin horizontal-padding($padding, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding-right: $padding;\n    padding-left: $padding;\n  }\n}\n\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n@mixin set-spacing($gap-size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding: math.div($gap-size, 2);\n  }\n\n  .mdc-chip {\n    @include feature-targeting.targets($feat-structure) {\n      margin: math.div($gap-size, 2);\n    }\n  }\n\n  .mdc-chip--touch {\n    @include touch-target-mixins.margin(\n      $component-height: variables.$height,\n      $query: $query\n    );\n  }\n}\n\n@mixin leading-icon-color(\n  $color,\n  $opacity: variables.$icon-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-chip__icon--leading {\n    @include feature-targeting.targets($feat-color) {\n      color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n}\n\n@mixin trailing-icon-color(\n  $color,\n  $opacity: variables.$icon-opacity,\n  $hover-opacity: variables.$trailing-icon-hover-opacity,\n  $focus-opacity: variables.$trailing-icon-focus-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include trailing-action-mixins.color($color, $query: $query);\n\n  // TODO(b/151980552): Remove the following block\n  .mdc-chip__icon--trailing {\n    @include feature-targeting.targets($feat-color) {\n      color: rgba(theme-color.prop-value($color), $opacity);\n    }\n\n    &:hover {\n      @include feature-targeting.targets($feat-color) {\n        color: rgba(theme-color.prop-value($color), $hover-opacity);\n      }\n    }\n\n    &:focus {\n      @include feature-targeting.targets($feat-color) {\n        color: rgba(theme-color.prop-value($color), $focus-opacity);\n      }\n    }\n  }\n}\n\n// For customizing icon size, we need to increase specifity to ensure\n// overrides apply. Styles defined in the .material-icons CSS class are\n// loaded separately, so the order of CSS definitions is not guaranteed.\n\n@mixin leading-icon-size($size, $query: feature-targeting.all()) {\n  .mdc-chip__icon.mdc-chip__icon--leading:not(.mdc-chip__icon--leading-hidden) {\n    @include icon-size_($size, $query: $query);\n  }\n}\n\n@mixin trailing-icon-size($size, $query: feature-targeting.all()) {\n  @include trailing-action-mixins.size($size, $query: $query);\n\n  // TODO(b/151980552): Remove the following block\n  .mdc-chip__icon.mdc-chip__icon--trailing {\n    @include icon-size_($size, $query: $query);\n  }\n}\n\n@mixin icon-size_($size, $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    font-size: $size;\n  }\n}\n\n@mixin leading-icon-margin(\n  $left-margin: variables.$leading-icon-margin-left,\n  $right-margin: variables.$leading-icon-margin-right,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &.mdc-chip--selected .mdc-chip__checkmark,\n  .mdc-chip__icon--leading:not(.mdc-chip__icon--leading-hidden) {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left-margin, $right-margin);\n    }\n  }\n}\n\n@mixin trailing-icon-margin(\n  $left-margin: variables.$trailing-icon-margin-left,\n  $right-margin: variables.$trailing-icon-margin-right,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include trailing-action-mixins.horizontal-spacing(\n    $left-margin,\n    $right-margin,\n    $query: $query\n  );\n\n  // TODO(b/151980552): Remove the following block\n  .mdc-chip__icon--trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left-margin, $right-margin);\n    }\n  }\n}\n\n@mixin elevation-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-functions.transition-value();\n  }\n\n  &.mdc-chip--exit {\n    @include feature-targeting.targets($feat-animation) {\n      transition: elevation-functions.transition-value(),\n        variables.$exit-transition;\n    }\n  }\n}\n\n///\n/// Sets the density scale for chips.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values are `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height($height, $query: $query);\n\n  @if $density-scale != 0 {\n    @include touch-target-reset_($query: $query);\n  }\n}\n\n///\n/// Resets touch target-related styles. This is called from the density mixin to\n/// automatically remove the increased touch target, since dense components\n/// don't have the same default a11y requirements.\n/// @access private\n///\n@mixin touch-target-reset_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Selector is necessary here to override original specificity.\n  &.mdc-chip--touch {\n    @include feature-targeting.targets($feat-structure) {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  }\n\n  .mdc-chip__touch {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:color';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/density/variables' as density-variables;\n@use '@material/theme/theme-color';\n\n$fill-color-default: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  12%\n) !default;\n$ink-color-default: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$horizontal-padding: 12px !default;\n$height: 32px !default;\n$shape-radius: 50% !default;\n\n$minimum-height: 24px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$icon-color: theme-color.prop-value(on-surface) !default;\n$icon-opacity: 0.54 !default;\n$trailing-icon-hover-opacity: 0.62 !default;\n$trailing-icon-focus-opacity: 0.87 !default;\n$leading-icon-size: 20px !default;\n$trailing-icon-size: 18px !default;\n// Speed up delay to bridge gap between leading icon and checkmark transition.\n$leading-icon-delay: -50ms !default;\n$checkmark-with-leading-icon-delay: 80ms !default;\n\n$checkmark-animation-delay: 50ms !default;\n$checkmark-animation-duration: 150ms !default;\n$width-animation-duration: 150ms !default;\n$opacity-animation-duration: 75ms !default;\n\n$leading-icon-margin-right: 4px !default;\n$leading-icon-margin-left: -4px !default;\n\n$trailing-icon-margin-right: -4px !default;\n$trailing-icon-margin-left: 4px !default;\n\n$exit-transition: opacity 75ms\n    animation-variables.$standard-curve-timing-function,\n  width 150ms animation-variables.$deceleration-curve-timing-function,\n  padding 100ms linear, margin 100ms linear !default;\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/dom';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/theme/theme-color';\n@use './checkbox-custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/touch-target/variables' as touch-target-variables;\n@use './checkbox-theme';\n\n///\n/// Checkbox and ripple styles.\n///\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple-styles($query);\n}\n\n/// Checkbox styles (Excluding ripple styles).\n///\n/// NOTE: This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n/// checkbox styles. It is recommended that most users use `mdc-checkbox-core-styles` instead.\n// TODO(b/162887560): Rename to `checkbox-without-ripple-styles()`\n@mixin without-ripple($query: feature-targeting.all()) {\n  // TODO(b/165005345): Include theme-styles() after static-styles().\n  @include theme-styles($query: $query);\n  @include static-styles($query: $query);\n}\n\n/// Checkbox static styles.\n/// Checkbox styles that are not customizable should go here.\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n\n  @include feature-targeting.targets($feat-animation) {\n    @include mark-keyframes_;\n  }\n\n  .mdc-checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      @include base_;\n    }\n  }\n\n  @include dom.forced-colors-mode {\n    @include checkbox-theme.disabled-container-colors(\n      $unmarked-stroke-color: GrayText,\n      $unmarked-fill-color: transparent,\n      $marked-stroke-color: GrayText,\n      $marked-fill-color: transparent,\n      $query: $query\n    );\n    @include checkbox-theme.disabled-ink-color(GrayText, $query: $query);\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0 1px; // Extra horizontal space around mixedmark symbol.\n      }\n    }\n  }\n\n  // Needed to disable hover effects on CSS-only (non-JS) checkboxes\n  .mdc-checkbox--disabled {\n    @include feature-targeting.targets($feat-structure) {\n      @include disabled_;\n    }\n  }\n\n  .mdc-checkbox__background {\n    @include background_($query);\n  }\n\n  .mdc-checkbox__checkmark {\n    @include checkmark_($query);\n  }\n\n  .mdc-checkbox__checkmark-path {\n    @include checkmark-path_($query);\n  }\n\n  .mdc-checkbox__mixedmark {\n    @include mixedmark_($query);\n  }\n\n  .mdc-checkbox--anim {\n    @include feature-targeting.targets($feat-animation) {\n      @include anim_;\n    }\n  }\n\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n  .mdc-checkbox__native-control[data-indeterminate='true']\n    ~ .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-animation) {\n      @include background--marked_;\n    }\n\n    .mdc-checkbox__checkmark-path {\n      @include feature-targeting.targets($feat-structure) {\n        @include checkmark-path--marked_;\n      }\n    }\n  }\n\n  .mdc-checkbox__native-control {\n    @include feature-targeting.targets($feat-structure) {\n      @include native-control_;\n    }\n\n    &:disabled {\n      @include feature-targeting.targets($feat-structure) {\n        @include disabled_;\n      }\n    }\n  }\n\n  .mdc-checkbox--touch {\n    @include checkbox-theme.touch-target(\n      custom-properties.create(\n        checkbox-state-layer-size,\n        touch-target-variables.$height\n      ),\n      custom-properties.create(\n        checkbox-state-layer-size,\n        checkbox-theme.$ripple-size\n      ),\n      $query: $query\n    );\n  }\n\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include checkmark--checked_($query);\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-structure) {\n        @include mixedmark--checked_;\n      }\n    }\n  }\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n  .mdc-checkbox__native-control[data-indeterminate='true']\n    ~ .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include checkmark--indeterminate_($query);\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-structure) {\n        @include mixedmark--indeterminate_;\n      }\n    }\n  }\n\n  // JS checkbox\n  .mdc-checkbox.mdc-checkbox--upgraded {\n    .mdc-checkbox__background,\n    .mdc-checkbox__checkmark,\n    .mdc-checkbox__checkmark-path,\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-animation) {\n        @include child--upgraded_;\n      }\n    }\n  }\n}\n\n/// Checkbox theme styles.\n/// Checkbox styles that are customizable should go here.\n@mixin theme-styles($query: feature-targeting.all()) {\n  .mdc-checkbox {\n    @include checkbox-theme.theme-deprecated(\n      checkbox-theme.$light-theme-deprecated,\n      $query: $query\n    );\n  }\n}\n\n/// Checkbox's ripple styles.\n///\n/// NOTE: This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n/// checkbox styles. It is recommended that most users use `mdc-checkbox-core-styles` instead.\n@mixin ripple-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-checkbox {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: checkbox-theme.$ripple-target\n    );\n    @include ripple.radius-unbounded(\n      $query: $query,\n      $ripple-target: checkbox-theme.$ripple-target\n    );\n    @include ripple-theme.behind-content(\n      checkbox-theme.$ripple-target,\n      $query: $query\n    );\n  }\n\n  #{checkbox-theme.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin base_ {\n  display: inline-block;\n  position: relative;\n  flex: 0 0 checkbox-theme.$icon-size;\n  box-sizing: content-box;\n  width: checkbox-theme.$icon-size;\n  height: checkbox-theme.$icon-size;\n  line-height: 0;\n  white-space: nowrap;\n  cursor: pointer;\n  vertical-align: bottom;\n}\n\n@mixin disabled_ {\n  cursor: default;\n  pointer-events: none;\n}\n\n@mixin child--upgraded_ {\n  transition: none;\n}\n\n// Animation\n\n@mixin anim_ {\n  $mdc-checkbox-indeterminate-change-duration_: 500ms;\n\n  // stylelint-disable selector-max-type\n\n  &-unchecked-checked,\n  &-unchecked-indeterminate,\n  &-checked-unchecked,\n  &-indeterminate-unchecked {\n    .mdc-checkbox__background {\n      animation-duration: checkbox-theme.$transition-duration * 2;\n      animation-timing-function: linear;\n    }\n  }\n\n  &-unchecked-checked {\n    .mdc-checkbox__checkmark-path {\n      // Instead of delaying the animation, we simply multiply its length by 2 and begin the\n      // animation at 50% in order to prevent a flash of styles applied to a checked checkmark\n      // as the background is fading in before the animation begins.\n      animation: mdc-checkbox-unchecked-checked-checkmark-path\n        checkbox-theme.$transition-duration * 2 linear 0s;\n      transition: none;\n    }\n  }\n\n  &-unchecked-indeterminate {\n    .mdc-checkbox__mixedmark {\n      animation: mdc-checkbox-unchecked-indeterminate-mixedmark\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n  }\n\n  &-checked-unchecked {\n    .mdc-checkbox__checkmark-path {\n      animation: mdc-checkbox-checked-unchecked-checkmark-path\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n  }\n\n  &-checked-indeterminate {\n    .mdc-checkbox__checkmark {\n      animation: mdc-checkbox-checked-indeterminate-checkmark\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n\n    .mdc-checkbox__mixedmark {\n      animation: mdc-checkbox-checked-indeterminate-mixedmark\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n  }\n\n  &-indeterminate-checked {\n    .mdc-checkbox__checkmark {\n      animation: mdc-checkbox-indeterminate-checked-checkmark\n        $mdc-checkbox-indeterminate-change-duration_ linear 0s;\n      transition: none;\n    }\n\n    .mdc-checkbox__mixedmark {\n      animation: mdc-checkbox-indeterminate-checked-mixedmark\n        $mdc-checkbox-indeterminate-change-duration_ linear 0s;\n      transition: none;\n    }\n  }\n\n  &-indeterminate-unchecked {\n    .mdc-checkbox__mixedmark {\n      // stylelint-disable-next-line declaration-colon-space-after\n      animation: mdc-checkbox-indeterminate-unchecked-mixedmark\n        $mdc-checkbox-indeterminate-change-duration_ * 0.6 linear 0s;\n      transition: none;\n    }\n  }\n\n  // stylelint-enable selector-max-type\n}\n\n@mixin background_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    position: absolute;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    width: checkbox-theme.$icon-size;\n    height: checkbox-theme.$icon-size;\n    // border-color is overridden by the mdc-checkbox-unmarked-stroke-color() mixin\n    border: checkbox-theme.$border-width solid currentColor;\n    border-radius: 2px;\n    background-color: transparent;\n    pointer-events: none;\n    will-change: background-color, border-color;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(background-color), transition-exit(border-color);\n  }\n}\n\n@mixin background--marked_ {\n  transition: transition-enter(border-color), transition-enter(background-color);\n}\n\n// stylelint-disable block-no-empty -- For backward compatibility.\n@mixin focus-indicator_($query: feature-targeting.all()) {\n}\n@mixin focus-indicator--focused_($query: feature-targeting.all()) {\n}\n// stylelint-enable block-no-empty\n\n// Native input\n\n@mixin native-control_ {\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  opacity: 0;\n  cursor: inherit;\n}\n\n// Check mark\n\n@mixin checkmark_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(\n      opacity,\n      0ms,\n      checkbox-theme.$transition-duration * 2\n    );\n  }\n\n  .mdc-checkbox--upgraded & {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin checkmark--checked_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-enter(\n        opacity,\n        0ms,\n        checkbox-theme.$transition-duration * 2\n      ),\n      transition-enter(transform, 0ms, checkbox-theme.$transition-duration * 2);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin checkmark--indeterminate_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: rotate(45deg);\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(\n        opacity,\n        0ms,\n        checkbox-theme.$transition-duration\n      ),\n      transition-exit(transform, 0ms, checkbox-theme.$transition-duration);\n  }\n}\n\n// Check mark path\n\n@mixin checkmark-path_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(\n      stroke-dashoffset,\n      0ms,\n      checkbox-theme.$transition-duration * 2\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    stroke: currentColor;\n    stroke-width: checkbox-theme.$mark-stroke-size * 1.3;\n    stroke-dashoffset: $mark-path-length_;\n    stroke-dasharray: $mark-path-length_;\n  }\n}\n\n@mixin checkmark-path--marked_ {\n  stroke-dashoffset: 0;\n}\n\n// Mixed mark\n\n@mixin mixedmark_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: 100%;\n    height: 0;\n    transform: scaleX(0) rotate(0deg);\n    border-width: math.div(math.floor(checkbox-theme.$mark-stroke-size), 2);\n    border-style: solid;\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(opacity), transition-exit(transform);\n  }\n}\n\n@mixin mixedmark--checked_ {\n  transform: scaleX(1) rotate(-45deg);\n}\n\n@mixin mixedmark--indeterminate_ {\n  transform: scaleX(1) rotate(0deg);\n  opacity: 1;\n}\n\n@function transition-enter(\n  $property,\n  $delay: 0ms,\n  $duration: checkbox-theme.$transition-duration\n) {\n  @return functions2.enter($property, $duration, $delay);\n}\n\n@function transition-exit(\n  $property,\n  $delay: 0ms,\n  $duration: checkbox-theme.$transition-duration\n) {\n  @return functions2.exit-temporary($property, $duration, $delay);\n}\n\n// Manual calculation done on SVG\n$mark-path-length_: 29.7833385 !default;\n$indeterminate-checked-easing-function_: cubic-bezier(0.14, 0, 0, 1) !default;\n\n@mixin mark-keyframes_ {\n  @keyframes mdc-checkbox-unchecked-checked-checkmark-path {\n    0%,\n    50% {\n      stroke-dashoffset: $mark-path-length_;\n    }\n\n    50% {\n      animation-timing-function: animation-variables.$deceleration-curve-timing-function;\n    }\n\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }\n\n  @keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {\n    0%,\n    68.2% {\n      transform: scaleX(0);\n    }\n\n    68.2% {\n      animation-timing-function: cubic-bezier(0, 0, 0, 1);\n    }\n\n    100% {\n      transform: scaleX(1);\n    }\n  }\n\n  @keyframes mdc-checkbox-checked-unchecked-checkmark-path {\n    from {\n      animation-timing-function: animation-variables.$acceleration-curve-timing-function;\n      opacity: 1;\n      stroke-dashoffset: 0;\n    }\n\n    to {\n      opacity: 0;\n      stroke-dashoffset: $mark-path-length_ * -1;\n    }\n  }\n\n  @keyframes mdc-checkbox-checked-indeterminate-checkmark {\n    from {\n      animation-timing-function: animation-variables.$deceleration-curve-timing-function;\n      transform: rotate(0deg);\n      opacity: 1;\n    }\n\n    to {\n      transform: rotate(45deg);\n      opacity: 0;\n    }\n  }\n\n  @keyframes mdc-checkbox-indeterminate-checked-checkmark {\n    from {\n      animation-timing-function: $indeterminate-checked-easing-function_;\n      transform: rotate(45deg);\n      opacity: 0;\n    }\n\n    to {\n      transform: rotate(360deg);\n      opacity: 1;\n    }\n  }\n\n  @keyframes mdc-checkbox-checked-indeterminate-mixedmark {\n    from {\n      animation-timing-function: mdc-animation-deceleration-curve-timing-function;\n      transform: rotate(-45deg);\n      opacity: 0;\n    }\n\n    to {\n      transform: rotate(0deg);\n      opacity: 1;\n    }\n  }\n\n  @keyframes mdc-checkbox-indeterminate-checked-mixedmark {\n    from {\n      animation-timing-function: $indeterminate-checked-easing-function_;\n      transform: rotate(0deg);\n      opacity: 1;\n    }\n\n    to {\n      transform: rotate(315deg);\n      opacity: 0;\n    }\n  }\n\n  @keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {\n    0% {\n      animation-timing-function: linear;\n      transform: scaleX(1);\n      opacity: 1;\n    }\n\n    32.8%,\n    100% {\n      transform: scaleX(0);\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/checkbox/mixins' as checkbox-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './data-table-cell';\n@use './data-table-header-cell';\n@use './data-table-pagination';\n@use './data-table-progress-indicator';\n@use './data-table-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define data-table\n\n  .mdc-data-table__content {\n    @include typography.typography(body2, $query: $query);\n  }\n\n  .mdc-data-table {\n    @include data-table-theme.fill-color(\n      data-table-theme.$fill-color,\n      $query: $query\n    );\n    @include data-table-theme.shape-radius(\n      data-table-theme.$shape-radius,\n      $query: $query\n    );\n    @include data-table-theme.stroke-size(\n      data-table-theme.$stroke-size,\n      $query: $query\n    );\n    @include data-table-theme.stroke-color(\n      data-table-theme.$stroke-color,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      // NOTE: Root element should not be scrollable, added this for backward\n      // compatibility.\n      -webkit-overflow-scrolling: touch;\n      display: inline-flex;\n      flex-direction: column;\n      box-sizing: border-box;\n      position: relative;\n    }\n  }\n\n  // Note that we don't output the color styles inside the `@at-root`,\n  // because it makes it difficult to consume by projects that wrap their\n  // themes in a class (e.g. `.my-theme { @include mdc-data-table-core-style() }`).\n  @include data-table-theme.row-fill-color(\n    data-table-theme.$row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-fill-color(\n    data-table-theme.$header-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.selected-row-fill-color(\n    data-table-theme.$selected-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-color(\n    data-table-theme.$divider-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-size(\n    data-table-theme.$divider-size,\n    $query: $query\n  );\n  @include data-table-theme.row-hover-fill-color(\n    data-table-theme.$row-hover-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-text-color(\n    data-table-theme.$header-row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.row-text-color(\n    data-table-theme.$row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.density(\n    data-table-theme.$default-density-scale,\n    $query: $query\n  );\n  @include data-table-theme.cell-padding(\n    $leading-padding: data-table-theme.$cell-leading-padding,\n    $trailing-padding: data-table-theme.$cell-trailing-padding,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-color(\n    data-table-theme.$sort-icon-color,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-active-color(\n    data-table-theme.$sort-icon-active-color,\n    $query: $query\n  );\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      -webkit-overflow-scrolling: touch;\n      overflow-x: auto;\n      width: 100%;\n    }\n  }\n\n  .mdc-data-table__table {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: 100%; // Makes table full-width of its container (Firefox / IE11)\n      border: 0;\n      white-space: nowrap;\n      border-spacing: 0;\n      /**\n       * With table-layout:fixed, table and column widths are defined by the width\n       * of the first row of cells. Cells in subsequent rows do not affect column\n       * widths. This results in a predictable table layout and may also speed up\n       * rendering.\n       */\n      table-layout: fixed;\n    }\n  }\n\n  @include data-table-cell.core-styles($query: $query);\n  @include data-table-header-cell.core-styles($query: $query);\n  @include data-table-progress-indicator.core-styles($query: $query);\n\n  .mdc-data-table--sticky-header {\n    @include data-table-header-cell.header-cell-sticky($query: $query);\n  }\n\n  @include data-table-pagination.core-styles($query: $query);\n}\n\n@mixin theme-baseline($query: feature-targeting.all()) {\n  @include data-table-theme.checked-icon-color(\n    data-table-theme.$checked-icon-color,\n    $query: $query\n  );\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/functions';\n@use '@material/checkbox/checkbox-theme';\n@use '@material/density/density';\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/rtl/rtl';\n@use '@material/select/select-theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n\n$fill-color: surface !default;\n$header-row-fill-color: surface !default;\n$row-fill-color: inherit !default;\n$selected-row-fill-color: rgba(theme-color.prop-value(primary), 0.04) !default;\n$checked-icon-color: primary !default;\n$divider-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n$divider-size: 1px !default;\n$row-hover-fill-color: rgba(theme-color.prop-value(on-surface), 0.04) !default;\n\n$header-row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$sort-icon-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$sort-icon-active-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.87\n) !default;\n$sort-icon-density-scale: -5 !default;\n\n$shape-radius: medium !default;\n$stroke-size: 1px !default;\n$stroke-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$row-height: 52px !default;\n$header-row-height: get-header-row-height($row-height) !default;\n$cell-leading-padding: 16px !default;\n$cell-trailing-padding: 16px !default;\n\n$minimum-row-height: 36px !default;\n$maximum-row-height: $row-height !default;\n$default-density-scale: density.$default-scale !default;\n$density-config: (\n  height: (\n    maximum: $row-height,\n    default: $row-height,\n    minimum: $minimum-row-height,\n  ),\n);\n$pagination-rows-per-page-select-height: 36px;\n\n@function get-header-row-height($height) {\n  @return $height + 4px;\n}\n\n/// Sets the color of sort icon button when it is in idle state.\n/// (icon showed on header cell focus)\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n/// Sets the color of sort icon button when it is activated (sorted).\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('background-color', $color);\n  }\n}\n\n@mixin header-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Set background color to cell instead of row to support sticky header.\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin selected-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin checked-icon-color($color, $query: feature-targeting.all()) {\n  .mdc-data-table__header-row-checkbox,\n  .mdc-data-table__row-checkbox {\n    @include checkbox-theme.focus-indicator-color($color, $query: $query);\n    @include checkbox-theme.container-colors(\n      $marked-stroke-color: $color,\n      $marked-fill-color: $color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets divider color of data table (including outline color of rows per page\n/// select). Use `stroke-color()` to set table border color.\n/// @param {Color} $color Divider color.\n///\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.outline-color($color, $query: $query);\n  }\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      border-bottom-color: $color;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      border-top-color: $color;\n    }\n  }\n}\n\n@mixin divider-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-width: $size;\n      border-bottom-style: solid;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-width: $size;\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-data-table__row:last-child .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom: none;\n    }\n  }\n}\n\n@mixin row-hover-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin header-row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets row text color (including pagination row text).\n/// @param {Color} $color Row text color\n///\n@mixin row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label,\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets rounded shape radius to data table.\n/// @param {Number|List} $radius - Shape radius in `border-radius` CSS format.\n/// @param {Boolean} $rtl-reflexive - Set to `true` to flip radius corners in\n///     RTL context.\n///\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n\n  // Apply same border radius as parent to leading & trailing header cells.\n  // Header cells have explicite background color applied which requires border\n  // radius to take its parent rounded shape.\n  $border-radius: shape-functions.unpack-radius($radius);\n  $top-left-radius: shape-functions.resolve-radius(list.nth($border-radius, 1));\n  $top-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 2)\n  );\n\n  .mdc-data-table__header-cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-left-radius, $top-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-right-radius,\n          if($rtl-reflexive, $top-left-radius, $top-right-radius)\n        );\n\n        border-top-left-radius: 0;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-right-radius, $top-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-left-radius,\n          if($rtl-reflexive, $top-right-radius, $top-left-radius)\n        );\n\n        border-top-right-radius: 0;\n      }\n    }\n  }\n}\n\n@mixin stroke-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-width: $size;\n    border-style: solid;\n  }\n}\n\n@mixin stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    border-color: $color;\n  }\n}\n\n@mixin header-row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $height;\n    }\n  }\n}\n\n///\n/// Sets cell padding including cell, header cell, row checkbox cell and header\n/// row checkbox cell.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $trailing-padding [$cell-trailing-padding] Trailing padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $trailing-padding: $cell-trailing-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0 $trailing-padding 0 $leading-padding;\n    }\n  }\n\n  @include checkbox-cell-padding(\n    $leading-padding: $leading-padding,\n    $row-checkbox-density-scale: $row-checkbox-density-scale,\n    $query: $query\n  );\n}\n\n///\n/// Sets only row checkbox cell and header row checkbox cell leading padding.\n/// Use `cell-padding()` to set all cell's padding.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin checkbox-cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell--checkbox,\n  .mdc-data-table__cell--checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      // Distance from leading cell bound to checkbox's icon bound should be\n      // 16dp (`$leading-padding`). Calculate required padding excluding\n      // checkbox bounds.\n      $checkbox-icon-size: 24px;\n      $checkbox-touch-size: touch-target.$height;\n      @if $row-checkbox-density-scale and $row-checkbox-density-scale < 0 {\n        $checkbox-touch-size: checkbox-theme.get-ripple-size(\n          $row-checkbox-density-scale\n        );\n      }\n      $leading-padding: $leading-padding -\n        math.div($checkbox-touch-size - $checkbox-icon-size, 2);\n      @include rtl.reflexive-property(padding, $leading-padding, 0);\n    }\n  }\n}\n\n@mixin column-widths($width-list, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $i from 1 through list.length($width-list) {\n    .mdc-data-table__row > :nth-child(#{$i}) {\n      @include feature-targeting.targets($feat-structure) {\n        width: list.nth($width-list, $i);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for data table. Use corresponding density mixins of child components (such as Checkbox) to apply\n/// density scales which will be rendered inside data table.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to set density of row checkbox and also\n///     automatically adjust the alignment of row checkbox within a cell.\n///     See `checkbox.density()` mixin for supported density scales.\n///\n@mixin density(\n  $density-scale,\n  $row-checkbox-density-scale: null,\n  $pagination-select-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include row-height($height, $query: $query);\n  @include header-row-height(get-header-row-height($height), $query: $query);\n\n  @if $row-checkbox-density-scale {\n    @include checkbox-cell-padding(\n      $leading-padding: $cell-leading-padding,\n      $row-checkbox-density-scale: $row-checkbox-density-scale,\n      $query: $query\n    );\n\n    .mdc-data-table__header-row-checkbox,\n    .mdc-data-table__row-checkbox {\n      @include checkbox-theme.density($row-checkbox-density-scale);\n    }\n  }\n\n  @if $pagination-select-density-scale {\n    @include select-density($pagination-select-density-scale);\n  }\n}\n\n@mixin select-density($density-scale) {\n  @include select-theme.outlined-height(\n    select-theme.$height + density.$interval * $density-scale\n  );\n  .mdc-list-item {\n    @include list-theme.one-line-item-density(\n      $density-scale + 2,\n      $exclude-variants: true\n    );\n  }\n\n  margin: 0;\n}\n\n///\n/// Sets maximum height of data table. Use this to make table vertically\n/// scrollable.\n/// @param {Number} $height\n///\n@mixin max-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $height;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline {\n    @include base_($query);\n\n    &__leading,\n    &__notch,\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: border-box;\n        height: 100%;\n        border-top: variables.$border-width solid;\n        border-bottom: variables.$border-width solid;\n        pointer-events: none;\n      }\n    }\n\n    &__leading {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          variables.$border-width solid,\n          none\n        );\n\n        width: variables.$leading-width;\n      }\n    }\n\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          none,\n          variables.$border-width solid\n        );\n\n        flex-grow: 1;\n      }\n    }\n\n    &__notch {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: calc(100% - #{variables.$leading-width} * 2);\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        max-width: 100%;\n      }\n    }\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: clip;\n      }\n    }\n\n    &--upgraded .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% / 0.75);\n      }\n    }\n  }\n\n  .mdc-notched-outline--notched {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(padding, right, 8px);\n\n        border-top: none;\n      }\n    }\n  }\n\n  .mdc-notched-outline--no-label {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin stroke-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-structure) {\n      border-width: $width;\n    }\n  }\n}\n\n///\n/// Adds top offset to compensate for border width box size when it is notched.\n/// Use this when floating label is aligned to center to prevent label jump on focus.\n/// @param {Number} $stroke-width Stroke width of notched outline that needs to be offset.\n///\n@mixin notch-offset($stroke-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline--notched .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $stroke-width;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $component-height: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Resolve the radius relative to the notched outline component's height. The\n  // component should provide its current height from its density. The resolved\n  // radius allows percentage radii to be converted to pixels.\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $component-height\n  );\n\n  // Grab the top-left radius. We'll need it to adjust the leading for the\n  // label notch if the resulting radius shape is larger than the default\n  // leading.\n  $top-left-radius: list.nth(\n    shape-functions.unpack-radius($resolved-radius),\n    1\n  );\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  .mdc-notched-outline__leading {\n    // mask the leading to apply the top-left and bottom-left corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 1 0 0 1),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        // If the radius is bigger than the default leading width, we need to\n        // increase the leading width\n        width: $top-left-radius-px;\n        @if ($top-left-is-custom-prop) {\n          // The radius may be a custom property, in which case the above width\n          // is the IE11 fallback value.\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        // If the top-left radius is dynamic, the width of the leading is\n        // the max of whichever is larger: the default leading width or the\n        // value of the custom property.\n        $var: custom-properties.create-var($top-left-radius);\n        @supports (top: max(0%)) {\n          width: max(#{variables.$leading-width}, #{$var});\n        }\n      }\n    }\n  }\n\n  // Similar to above, adjust the max-width of the notch if we adjusted the\n  // leading's width.\n  .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        max-width: calc(100% - #{$top-left-radius-px} * 2);\n        @if ($top-left-is-custom-prop) {\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        $var: custom-properties.create-var($top-left-radius);\n        @supports (top: max(0%)) {\n          max-width: calc(100% - max(#{variables.$leading-width}, #{$var}) * 2);\n        }\n      }\n    }\n  }\n\n  .mdc-notched-outline__trailing {\n    // mask the leading to apply the top-right and bottom-right corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 0 1 1 0),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin floating-label-float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    // stylelint-disable-next-line no-descending-specificity\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets floating label position in notched outline when label is afloat.\n///\n/// @param {Number} $positionY Absolute Y-axis position in `px`.\n/// @param {Number} $positionX Absolute X-axis position in `px`. Defaults to `0`.\n/// @param {Number} $scale Defaults to `.75`.\n///\n/// @todo Replace mixin `mdc-notched-outline-floating-label-float-position` with this mixin when floating label is\n///     center aligned in all the places.\n///\n@mixin floating-label-float-position-absolute(\n  $positionY,\n  $positionX: 0,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust-absolute,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    // stylelint-disable-next-line no-descending-specificity\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the notch\n///\n/// @param {Number} $max-width Max-width for the notch\n///\n@mixin notch-max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    height: 100%;\n    @include rtl.ignore-next-line();\n    text-align: left;\n    pointer-events: none;\n\n    @include rtl.rtl {\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__cell {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      overflow: hidden;\n      text-align: left;\n      text-overflow: ellipsis;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--checkbox {\n    @include adaptive-width($query: $query);\n  }\n}\n\n@mixin adaptive-width($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Set to lowest width to adapt to cell content. Cell width should adapt\n    // to row checkbox size when it is dense.\n    // NOTE: `min-width` does not seem to work on table cells.\n    width: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use './data-table-theme';\n@use './data-table-cell';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__header-cell {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      outline: none;\n\n      @include rtl.ignore-next-line();\n      text-align: left;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell--checkbox {\n    @include data-table-cell.adaptive-width($query: $query);\n  }\n\n  .mdc-data-table__header-cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.density(\n      $density-scale: data-table-theme.$sort-icon-density-scale,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Apply dummy `transform` to avoid pixel shift on sort down animation.\n      transform: rotate(0.0001deg);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n    }\n\n    .mdc-data-table__header-cell--numeric & {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, right, 4px);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: functions.standard(transform, $duration: 150ms);\n    }\n\n    .mdc-data-table__header-cell--sorted-descending & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: rotate(-180deg);\n      }\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    &:focus,\n    .mdc-data-table__header-cell:hover &,\n    .mdc-data-table__header-cell--sorted & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: inline-flex;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-data-table__header-cell--with-sort {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  .mdc-data-table__sort-status-label {\n    @include dom.visually-hidden($query: $query);\n  }\n}\n\n/// Sets header cell in sticky position on table content vertical scroll.\n@mixin header-cell-sticky($query: $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      position: sticky;\n      top: 0;\n      z-index: 1;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n\n$ripple-target: '.mdc-icon-button__ripple';\n\n$icon-size: 24px !default;\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$container-shape: 50%;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$_custom-property-prefix: 'icon-button';\n\n$light-theme: (\n  disabled-icon-color: theme-color.$on-surface,\n  disabled-icon-opacity: 0.38,\n  icon-color: theme-color.$primary,\n  icon-size: $icon-size,\n  focus-icon-color: theme-color.$primary,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: 0.12,\n  hover-icon-color: theme-color.$primary,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: 0.08,\n  pressed-icon-color: theme-color.$primary,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: 0.12,\n  state-layer-size: $size,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\n  @include _icon-size(map.get($theme, icon-size));\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\n  @include _icon-color-with-map(\n    (\n      default: map.get($theme, icon-color),\n      disabled: map.get($theme, disabled-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      hover: map.get($theme, hover-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  // States styles\n  @include ripple-theme.theme-styles(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    ),\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: math.div($size - $icon-size, 2);\n  }\n\n  &.mdc-icon-button--reduced-size {\n    $component-size: $size;\n    // Icon button ripple size is capped at 40px for icon buttons with densities\n    // -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\n    // See http://b/192353968 for more info.\n    @if $size >= 40px and $size <= 48px {\n      $component-size: 40px;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      width: $component-size;\n      height: $component-size;\n      padding: math.div($component-size - $icon-size, 2);\n    }\n\n    &.mdc-icon-button--touch {\n      @include touch-target-mixins.margin(\n        $component-height: $component-size,\n        $component-width: $component-size,\n        $touch-target-height: $size,\n        $touch-target-width: $size,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-icon-button__touch {\n    @include touch-target-mixins.touch-target(\n      $set-width: true,\n      $query: $query,\n      $height: $size,\n      $width: $size\n    );\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.div(math.max($width, $height), 2),\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $width + $padding * 2;\n    height: $height + $padding * 2;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  // stylelint-disable-next-line selector-max-type\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color_($color, $query: $query);\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\n    // away from :before to a dedicated element.\n    outline: solid 3px transparent;\n\n    &:focus {\n      outline: double 5px transparent;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  @include theme.property(height, $size);\n  @include theme.property(width, $size);\n}\n\n@mixin _icon-size($size) {\n  @include theme.property(font-size, $size);\n\n  svg,\n  img {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n///\n/// Sets the icon opacity to the given opacity.\n/// @access private\n///\n@mixin _disabled-icon-opacity($opacity) {\n  &:disabled {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the icon color to the given color.\n/// @param {map} $color-map - The desired icon color, specified as a map of\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\n/// @access private\n///\n@mixin _icon-color-with-map($color-map) {\n  @include ink-color_(state.get-default-state($color-map));\n\n  $disabled: state.get-disabled-state($color-map);\n  @if $disabled {\n    &:disabled {\n      @include ink-color_($disabled);\n    }\n  }\n\n  $focus: state.get-focus-state($color-map);\n  @if $focus {\n    @include ripple-theme.focus {\n      @include ink-color_($focus);\n    }\n  }\n\n  $hover: state.get-hover-state($color-map);\n  @if $hover {\n    &:hover {\n      @include ink-color_($hover);\n    }\n  }\n\n  $pressed: state.get-pressed-state($color-map);\n  @if $pressed {\n    @include ripple-theme.active {\n      @include ink-color_($pressed);\n    }\n  }\n}\n\n@mixin _states-colors($color-map) {\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  $hover: map.get($color-map, hover);\n  @if $hover {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__progress-indicator {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: absolute;\n      width: 100%;\n    }\n\n    .mdc-data-table--in-progress & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n  }\n\n  .mdc-data-table__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('background-color', surface);\n\n      height: 100%;\n      // TODO(b/151453287): Set appropriate opacity value once we've a UX\n      // guidance.\n      opacity: 0.32;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n  }\n}\n","@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use '@material/rtl/mixins' as rtl;\n@use '@material/icon-button/icon-button-theme';\n@use '@material/select/select-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/menu/mixins' as menu-theme;\n@use './data-table-theme';\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n/// Sets core styles for data table pagination.\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__pagination {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n\n      align-items: center;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-navigation {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: flex;\n    }\n  }\n\n  .mdc-data-table__pagination-button {\n    @include icon-button-theme.flip-icon-in-rtl($query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 4px);\n    }\n  }\n\n  .mdc-data-table__pagination-total {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(\n        margin,\n        $left-value: 14px,\n        $right-value: 36px\n      );\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 22px);\n\n      align-items: center;\n      display: inline-flex;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 12px);\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.variable-width($min-width: 80px, $query: $query);\n    @include menu-theme.min-width(80px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 8px 0;\n    }\n\n    // TODO(b/158196144): Set it to `-5` density scale using density mixin when\n    // select component supports it.\n    @include select-theme.outlined-height(\n      data-table-theme.$pagination-rows-per-page-select-height,\n      $query: $query\n    );\n    .mdc-list-item {\n      @include list-theme.one-line-item-height(\n        data-table-theme.$pagination-rows-per-page-select-height,\n        $query: $query\n      );\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/list/mixins' as list-mixins;\n@use '@material/list/evolution-mixins' as list-evolution-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/rtl/rtl';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/gss';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n@use '@material/typography/mixins' as typography-mixins;\n@use './select-icon-theme';\n\n$ripple-target: '.mdc-select__ripple';\n\n@function get-outlined-label-position-y($select-anchor-height) {\n  @return math.div($select-anchor-height, 2) +\n    math.div(notched-outline-variables.$label-box-height, 2);\n}\n\n$arrow-padding: 52px !default;\n$label-padding: 16px !default;\n$height: 56px !default;\n$minimum-height-for-filled-label: 52px !default;\n$filled-baseline-top: 40px !default;\n$selected-text-height: 28px !default;\n$anchor-padding-left: 16px !default;\n$anchor-padding-left-with-leading-icon: 0 !default;\n$anchor-padding-right: 0 !default;\n$outlined-stroke-width: 2px !default;\n$default-width: 200px !default;\n$shape-radius: small !default;\n\n$minimum-height: 40px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$ink-color: rgba(theme-variables.prop-value(on-surface), 0.87) !default;\n$dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.54\n) !default;\n$label-color: rgba(theme-variables.prop-value(on-surface), 0.6) !default;\n$focused-label-color: rgba(theme-variables.prop-value(primary), 0.87) !default;\n$bottom-line-idle-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.42\n) !default;\n$bottom-line-hover-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  4%\n) !default;\n\n// Disabled Styles\n$disabled-label-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-ink-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  2%\n) !default;\n$disabled-fill-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-bottom-line-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-outline-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n\n$outlined-idle-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$outlined-hover-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$label-position-y: 106% !default;\n$outline-label-offset: 16px !default;\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n\n$dropdown-transition-duration: 150ms !default;\n// Transition durartions to active state\n$icon-active-fade-out-duration: 0.33 * $dropdown-transition-duration !default;\n$icon-active-fade-in-duration: 0.67 * $dropdown-transition-duration !default;\n// Transition durartions to inactive state\n$icon-inactive-fade-out-duration: 0.5 * $dropdown-transition-duration !default;\n$icon-inactive-fade-in-duration: 0.5 * $dropdown-transition-duration !default;\n\n// Error colors\n$error-color: error !default;\n\n/// Sets the min-width of the select.\n/// @param {Number} $min-width - The desired min-width.\n/// @deprecated using this mixin is no longer required, and clients may set\n///             the attribute directly\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n/// Sets the select behavior to change width dynamically based on content.\n/// @param {Number} $min-width - The min-width of the select, which should be\n///     large enough to allow the label (if exists) to display in full.\n@mixin variable-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n      min-width: $min-width;\n    }\n  }\n}\n\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n  }\n\n  @include _if-disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin dropdown-icon-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _dropdown-icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _dropdown-icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _dropdown-icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _dropdown-icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-floating-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-floating-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-floating-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin bottom-line-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _bottom-line-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    // bottom line inactive/active are on different elements, does not need\n    // to check for :not() focused\n    &:hover {\n      @include _bottom-line-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _focused-line-ripple-color(\n      state.get-focus-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _bottom-line-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    @include _if-focused {\n      @include _label-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _label-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _outline-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    // stylelint-disable-next-line selector-combinator-space-after\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _hover-outline-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _focused-outline-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _outline-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified size.\n///\n@mixin dropdown-icon-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__dropdown-icon {\n    @include feature-targeting.targets($feat-structure) {\n      width: $size;\n      height: $size;\n    }\n  }\n}\n\n@mixin filled-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 2 {\n    @error \"mdc-select: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  .mdc-select__anchor {\n    @include shape-mixins.radius(\n      $masked-radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    .mdc-select__anchor {\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    + .mdc-select-helper-text {\n      @include _apply-outline-shape-padding(\n        margin-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          margin-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          margin-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    // Unlike textfield, select does not need to re-apply leading icon padding.\n    // This is because select only has one potential leading class, not two\n    // extra classes like textfield (leading + trailing). Textfield's two extra\n    // classes can cause specificity conflicts, requiring everything to be\n    // re-applied.\n  }\n}\n\n///\n/// Sets density scale for filled select variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for filled select variant with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-with-leading-icon-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-with-leading-icon-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select (Excluding outlined select with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n@mixin _list-density($density-scale, $query) {\n  @include list-mixins.deprecated-single-line-density(\n    $density-scale,\n    $query: $query\n  );\n  .mdc-select__one-line-option {\n    @include list-evolution-mixins.one-line-item-density(\n      $density-scale,\n      $exclude-variants: true,\n      $query: $query\n    );\n  }\n  .mdc-select__two-line-option {\n    @include list-evolution-mixins.two-line-item-density(\n      $density-scale,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets height of default select variant.\n///\n/// @param {Number} $new-height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n\n    // Filled variant is aligned to baseline...\n    @include typography-mixins.baseline(\n      $top: $filled-baseline-top,\n      $display: flex,\n      $query: $query\n    );\n    // ...unless it is too small to display a label\n    @if $new-height < $minimum-height-for-filled-label {\n      @include center-aligned($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        .mdc-floating-label {\n          display: none;\n        }\n      }\n    }\n  }\n\n  // No-label variants are always centered\n  &.mdc-select--no-label .mdc-select__anchor {\n    @include center-aligned($query: $query);\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of filled select variant with leading icon.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-with-leading-icon-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include filled-height(\n    $new-height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $filled-baseline-top: $filled-baseline-top,\n    $query: $query\n  );\n\n  @if $new-height < $height {\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    .mdc-select__anchor {\n      @include leading-icon-floating-label-position(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select variant (Excluding outlined select with leading icon).\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-height(\n  $new-height,\n  $keyframe-suffix: select-outlined-#{$new-height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: get-outlined-label-position-y($new-height);\n\n  .mdc-select__anchor {\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      $positionY,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        $positionY,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select with leading icon variant.\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-with-leading-icon-height(\n  $new-height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @if $new-height < $height {\n      @include dropdown-icon-size(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$dense-icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    } @else {\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n// $add-label-padding is copied from textfield's mixin, even though select\n// always sets it to true. This is to try and keep things aligned between select\n// and textfield for when these styles are refactored into shared styles.\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > notched-outline-variables.$leading-width) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @include gss.annotate(\n        (\n          alternate: $padding-is-custom-prop,\n        )\n      );\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      @supports (top: max(0%)) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the\n        // calculated custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{$anchor-padding-left}, #{$value});\n      }\n    }\n  }\n}\n\n// Removes filled baseline alignment\n@mixin center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__selected-text {\n    @include typography-mixins.zero-width-prefix($query: $query);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons \"controlling\" the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the \"largest\"\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n    //\n    // IE11 does not respect this, and makes the leading icon (if present)\n    // the baseline.\n    .mdc-select__selected-text-container {\n      height: 100%;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    &::before {\n      display: none;\n    }\n  }\n}\n\n///\n/// Sets the position of the floating label for a select with leading icon.\n/// @param {number} $icon-size - The size of the leading icon.\n///\n@mixin leading-icon-floating-label-position(\n  $icon-size: select-icon-theme.$icon-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-total-width);\n    }\n  }\n}\n\n///\n/// Sets the floating label position and animations for a given height for an\n/// outlined select with leaing icon.\n/// @param {number} $icon-size - The size of the leading icon.\n/// @param {string} $keyframe-suffix - The suffix for the newly generated keyframes.\n///\n@mixin outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $icon-size,\n  $keyframe-suffix: select-outlined-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n  $resting-position-x: $icon-total-width -\n    select-icon-theme.$icon-horizontal-margin;\n  $float-position-y: get-outlined-label-position-y($height);\n  $float-position-x: $icon-size + select-icon-theme.$icon-horizontal-margin -\n    notched-outline-variables.$notch-gutter-size;\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $resting-position-x);\n    }\n  }\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $float-position-y,\n    $float-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $float-position-y,\n      $float-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $float-position-y,\n      -($float-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the floating label according to sizes of the\n/// leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-floating-label-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin *\n      2 +\n      $leading-icon-size;\n  } @else {\n    $truncation: $truncation + $outline-label-offset;\n  }\n\n  .mdc-floating-label {\n    @include floating-label-mixins.max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n\n  .mdc-floating-label--float-above {\n    $scale: floating-label-variables.$float-scale;\n    @include floating-label-mixins.max-width(\n      calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the notched outline according to the sizes of\n/// the leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-notched-outline-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size + notched-outline-variables.$leading-width;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin +\n      $leading-icon-size;\n  }\n  .mdc-select__anchor {\n    @include notched-outline-mixins.notch-max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n}\n\n/// Selector for focused state\n/// @access private\n@mixin _if-focused {\n  &.mdc-select--focused {\n    @content;\n  }\n}\n\n/// Selector for enabled state\n/// @access private\n@mixin _if-enabled {\n  &:not(.mdc-select--disabled) {\n    @content;\n  }\n}\n\n/// Selector for disabled state\n/// @access private\n@mixin _if-disabled {\n  &.mdc-select--disabled {\n    @content;\n  }\n}\n\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__selected-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__anchor {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(background-color, $color);\n      }\n    }\n  }\n}\n\n@mixin _bottom-line-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.inactive-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-line-ripple-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.active-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin _hover-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.stroke-width(\n        $outlined-stroke-width,\n        $query: $query\n      );\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-floating-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label--float-above {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified color.\n/// @access private\n///\n@mixin _dropdown-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      .mdc-select__dropdown-icon {\n        @include theme-mixins.property(fill, $color);\n      }\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/rtl/rtl';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define floating-label\n  .mdc-floating-label {\n    @include typography.typography(\n      subtitle1,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      @include rtl.ignore-next-line();\n      left: 0;\n      @include rtl.ignore-next-line();\n      -webkit-transform-origin: left top;\n      @include rtl.ignore-next-line();\n      transform-origin: left top;\n      line-height: 1.15rem;\n      text-align: left;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: text;\n      overflow: hidden;\n\n      /* @alternate */\n      // Force the label into its own layer to prevent visible layer promotion adjustments\n      // when the ripple is activated behind it.\n      will-change: transform;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        right: 0;\n        @include rtl.ignore-next-line();\n        left: auto;\n        @include rtl.ignore-next-line();\n        -webkit-transform-origin: right top;\n        @include rtl.ignore-next-line();\n        transform-origin: right top;\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: transform variables.$transition-duration\n          animation-variables.$standard-curve-timing-function,\n        color variables.$transition-duration\n          animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: auto;\n    }\n  }\n\n  .mdc-floating-label--required {\n    &::after {\n      @include _required-content($query);\n    }\n\n    @include rtl.rtl {\n      &::after {\n        @include _required-content-rtl($query);\n      }\n    }\n  }\n\n  @at-root {\n    @include float-position(variables.$position-y, $query: $query);\n    @include shake-animation(standard, $query: $query);\n  }\n\n  @include shake-keyframes(standard, variables.$position-y, $query: $query);\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n// Used for textarea in case of scrolling\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shake-keyframes(\n  $modifier,\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-floating-label-shake-float-above-#{$modifier} {\n      0% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      33% {\n        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      66% {\n        animation-timing-function: cubic-bezier(\n          0.302435,\n          0.381352,\n          0.55,\n          0.956352\n        );\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(-4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      100% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n    }\n  }\n}\n\n@mixin float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      @if $positionX > 0 or $positionX < 0 {\n        @include rtl.ignore-next-line();\n        transform: translateY(-1 * $positionY)\n          translateX(-1 * $positionX)\n          scale($scale);\n\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          transform: translateY(-1 * $positionY) translateX($positionX)\n            scale($scale);\n        }\n      } @else {\n        transform: translateY(-1 * $positionY) scale($scale);\n      }\n    }\n  }\n}\n\n@mixin shake-animation($modifier, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-floating-label--shake {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-floating-label-shake-float-above-#{$modifier} 250ms 1;\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    max-width: $max-width;\n  }\n}\n\n///\n/// Sets the CSS transition for the floating animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin float-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: color $duration-ms $timing-function,\n      transform $duration-ms $timing-function;\n  }\n}\n\n@mixin _required-content($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 1px;\n    @include rtl.ignore-next-line();\n    margin-right: 0px;\n    content: '*';\n  }\n}\n\n// Need to specify LTR/RTL manually since rtl mixins will add ::after[dir=rtl]\n// selector and that breaks some browsers\n@mixin _required-content-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 0;\n    @include rtl.ignore-next-line();\n    margin-right: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n\n$icon-size: 24px !default;\n$dense-icon-size: 20px !default;\n$icon-horizontal-margin: 12px !default;\n\n$icon-color: rgba(theme-variables.prop-value(on-surface), 0.54) !default;\n$disabled-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n\n///\n/// Customizes the size (both width and height) of the icon.\n/// @param {Number} $size - the intended icon size.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-select__icon {\n      width: $size;\n      height: $size;\n      font-size: $size;\n    }\n  }\n}\n\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(.mdc-select--disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  &.mdc-select--disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin icon-horizontal-margins($left, $right, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-select__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left, $right);\n    }\n  }\n}\n\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n","// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/theme/theme';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme-color';\n@use './evolution-variables' as variables;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode($query);\n\n  .mdc-list {\n    @include list-base($query: $query);\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n\n    @include _one-line-item-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n    @include _three-line-item-density(\n      variables.$three-line-item-density-scale,\n      $query: $query\n    );\n\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before, // lint-disable-focus-psuedo-selector\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    // lint-disable-focus-psuedo-selector\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _two-line-item-end-baseline($top: 28px, $query: $query);\n    @include _three-line-item-end-baseline($top: 28px, $query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-list-group__subheader {\n    $mdc-list-subheader-virtual-height: 3rem;\n    $mdc-list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $mdc-list-subheader-margin: calc(\n      (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) /\n        2\n    );\n\n    @include typography.typography(subtitle1, $query);\n    @include feature-targeting.targets($feat-structure) {\n      margin: $mdc-list-subheader-margin variables.$side-padding;\n    }\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      height: 1px;\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n\n  .mdc-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n\n    #{variables.$ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include _item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        opacity: $opacity;\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin _item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n\n      @include feature-targeting.targets($feat-color) {\n        // Color ensures border is shown, but will be overridden by the browser.\n        @include theme.property(border-bottom-color, white);\n      }\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/shadow-dom';\n@use '@material/touch-target/touch-target';\n@use './checkbox-custom-properties';\n\n$baseline-theme-color: secondary !default;\n$mark-color: theme-color.prop-value(on-secondary) !default;\n$border-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$disabled-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$ripple-size: 40px !default;\n$icon-size: 18px !default;\n$mark-stroke-size: math.div(2, 15) * $icon-size !default;\n$border-width: 2px !default;\n$transition-duration: 90ms !default;\n$item-spacing: 4px !default;\n$focus-indicator-opacity: map.get(\n  ripple-theme.$dark-ink-opacities,\n  focus\n) !default;\n\n$minimum-size: 28px !default;\n$maximum-size: $ripple-size !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    minimum: $minimum-size,\n    default: $ripple-size,\n    maximum: $maximum-size,\n  ),\n) !default;\n\n$ripple-target: '.mdc-checkbox__ripple';\n$custom-property-prefix: 'checkbox';\n\n// TODO(b/188417756): State layer (ripple) size token is missing including\n//     `state-layer-size`.\n// TODO(b/187852988): `selected-checkmark-color` does not exist in tokens.\n$light-theme: (\n  disabled-selected-icon-color: $disabled-color,\n  disabled-selected-icon-opacity: null,\n  disabled-unselected-icon-color: $disabled-color,\n  disabled-unselected-icon-opacity: null,\n  selected-checkmark-color: $mark-color,\n  selected-focus-icon-color: $baseline-theme-color,\n  selected-focus-state-layer-color: theme-color.$on-surface,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-hover-icon-color: $baseline-theme-color,\n  selected-hover-state-layer-color: $baseline-theme-color,\n  selected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  selected-icon-color: $baseline-theme-color,\n  selected-pressed-icon-color: $baseline-theme-color,\n  selected-pressed-state-layer-color: theme-color.$on-surface,\n  selected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n  state-layer-size: $ripple-size,\n  unselected-focus-icon-color: $baseline-theme-color,\n  unselected-focus-state-layer-color: theme-color.$on-surface,\n  unselected-focus-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, focus),\n  unselected-hover-icon-color: $baseline-theme-color,\n  unselected-hover-state-layer-color: theme-color.$on-surface,\n  unselected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  unselected-icon-color: $border-color,\n  unselected-pressed-icon-color: $border-color,\n  unselected-pressed-state-layer-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include disabled-container-colors(\n    $unmarked-stroke-color: map.get($theme, disabled-unselected-icon-color),\n    $marked-fill-color: map.get($theme, disabled-selected-icon-color)\n  );\n\n  @include ink-color(map.get($theme, selected-checkmark-color));\n  @include disabled-ink-color(map.get($theme, selected-checkmark-color));\n\n  @include _icon-color(\n    map.get($theme, unselected-icon-color),\n    map.get($theme, selected-icon-color)\n  );\n\n  &:hover {\n    @include _icon-color(\n      map.get($theme, unselected-hover-icon-color),\n      map.get($theme, selected-hover-icon-color)\n    );\n  }\n\n  @include ripple-theme.focus() {\n    @include _icon-color(\n      map.get($theme, unselected-focus-icon-color),\n      map.get($theme, selected-focus-icon-color)\n    );\n  }\n\n  @include ripple-theme.active() {\n    @include _icon-color(\n      map.get($theme, unselected-pressed-icon-color),\n      map.get($theme, selected-pressed-icon-color)\n    );\n  }\n\n  @include ripple-color(\n    $color: map.get($theme, unselected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, unselected-hover-state-layer-opacity),\n      focus: map.get($theme, unselected-focus-state-layer-opacity),\n      press: map.get($theme, unselected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include focus-indicator-color(\n    $color: map.get($theme, selected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, selected-hover-state-layer-opacity),\n      focus: map.get($theme, selected-focus-state-layer-opacity),\n      press: map.get($theme, selected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include ripple-size(map.get($theme, state-layer-size));\n  // Set touch target to ripple size.\n  @include touch-target(\n    map.get($theme, state-layer-size),\n    map.get($theme, state-layer-size)\n  );\n}\n\n$light-theme-deprecated: (\n  density-scale: 0,\n  checkmark-color: $mark-color,\n  container-checked-color: $baseline-theme-color,\n  container-checked-hover-color: null,\n  container-disabled-color: $disabled-color,\n  outline-color: $border-color,\n  outline-hover-color: null,\n  ripple-color: theme-color.$on-surface,\n  ripple-opacity: ripple-theme.$dark-ink-opacities,\n  ripple-checked-color: $baseline-theme-color,\n  ripple-checked-opacity: ripple-theme.$dark-ink-opacities,\n);\n\n/// Sets theme to checkbox based on provided theme configuration.\n/// Only emits theme related styles.\n/// @param {Map} $theme - Theme configuration to use for theming checkbox.\n@mixin theme-deprecated($theme, $query: feature-targeting.all()) {\n  @include theme.validate-theme($light-theme-deprecated, $theme);\n\n  $ripple-color: map.get($theme, ripple-color);\n  $ripple-opacity: map.get($theme, ripple-opacity);\n  @if $ripple-opacity == null {\n    $ripple-opacity: ();\n  }\n  @if $ripple-color {\n    @include ripple-color(\n      $color: $ripple-color,\n      $opacity-map: $ripple-opacity,\n      $query: $query\n    );\n  }\n\n  $ripple-checked-color: map.get($theme, ripple-checked-color);\n  $ripple-checked-opacity: map.get($theme, ripple-checked-opacity);\n  @if $ripple-checked-opacity == null {\n    $ripple-checked-opacity: ();\n  }\n  @if $ripple-checked-color {\n    @include focus-indicator-color(\n      $color: $ripple-checked-color,\n      $opacity-map: $ripple-checked-opacity,\n      $query: $query\n    );\n  }\n\n  $density-scale: map.get($theme, density-scale);\n  @if $density-scale != null {\n    @include density($density-scale: $density-scale, $query: $query);\n  }\n\n  $outline-color: map.get($theme, outline-color);\n  $container-checked-color: map.get($theme, container-checked-color);\n  @if (\n    ($outline-color and not $container-checked-color) or\n      (not $outline-color and $container-checked-color)\n  ) {\n    @error 'Both `outline-color` and `container-checked-color` keys should be provided.';\n  }\n  @if ($outline-color and $container-checked-color) {\n    @include container-colors(\n      $unmarked-stroke-color: $outline-color,\n      $marked-stroke-color: $container-checked-color,\n      $marked-fill-color: $container-checked-color,\n      $query: $query\n    );\n  }\n\n  $outline-hover-color: map.get($theme, outline-hover-color);\n  $container-checked-hover-color: map.get(\n    $theme,\n    container-checked-hover-color\n  );\n  @if (\n    ($outline-hover-color and not $container-checked-hover-color) or\n      (not $outline-hover-color and $container-checked-hover-color)\n  ) {\n    @error 'Both `outline-hover-color` and `container-checked-hover-color` keys should be provided.';\n  }\n  @if ($outline-hover-color and $container-checked-hover-color) {\n    @include ripple-theme.states-selector() {\n      @include container-colors(\n        $unmarked-stroke-color: $outline-hover-color,\n        $marked-stroke-color: $container-checked-hover-color,\n        $marked-fill-color: $container-checked-hover-color,\n        $query: $query\n      );\n    }\n  }\n\n  $container-disabled-color: map.get($theme, container-disabled-color);\n  @if $container-disabled-color {\n    @include disabled-container-colors(\n      $unmarked-stroke-color: $container-disabled-color,\n      $marked-fill-color: $container-disabled-color,\n      $query: $query\n    );\n  }\n\n  $checkmark-color: map.get($theme, checkmark-color);\n  @if $checkmark-color {\n    @include ink-color($checkmark-color, $query: $query);\n    @include disabled-ink-color($checkmark-color, $query: $query);\n  }\n}\n\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values `-3`, `-2`, `-1`, `0`.\n/// @return Returns ripple size of checkbox for given density scale.\n///\n@function get-ripple-size($density-scale) {\n  @return density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size\n  );\n}\n\n///\n/// Sets density scale for checkbox.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values\n///     `-3`, `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: get-ripple-size($density-scale);\n\n  @include ripple-size($size, $query: $query);\n  @include touch-target($size, $ripple-size: $size, $query: $query);\n}\n\n/// Sets ripple size of checkbox and optionally set touch target size which can\n/// be more than the size of ripple.\n/// @param {Number} $ripple-size - Visual ripple size of checkbox.\n@mixin ripple-size($ripple-size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $ripple-size and not custom-properties.is-custom-prop($ripple-size) {\n    $ripple-size: custom-properties.create(\n      checkbox-custom-properties.$ripple-size,\n      $ripple-size\n    );\n  }\n  $checkbox-padding: 'calc((_ripple-size - _icon-size) / 2)';\n  $replace: (\n    _ripple-size: $ripple-size,\n    _icon-size: $icon-size,\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(padding, $checkbox-padding, $replace: $replace);\n  }\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(top, $checkbox-padding, $replace: $replace);\n      @include theme.property(left, $checkbox-padding, $replace: $replace);\n    }\n  }\n}\n\n/// Sets the touch target size and appropriate margin to accommodate the\n/// touch target.\n/// @param {Number} $touch-target-size Size of touch target (Native input) in `px`.\n/// @param {Number} $ripple-size Size of ripple in `px`.\n@mixin touch-target(\n  $touch-target-size,\n  $ripple-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $touch-target-size {\n    @if not custom-properties.is-custom-prop($touch-target-size) {\n      $touch-target-size: custom-properties.create(\n        checkbox-custom-properties.$touch-target-size,\n        $touch-target-size\n      );\n    }\n\n    $margin: 'calc((_touch-target-size - _ripple-size) / 2)';\n    $replace: (\n      _touch-target-size: $touch-target-size,\n      _ripple-size: $ripple-size,\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(margin, $margin, $replace: $replace);\n    }\n\n    $offset: 'calc((_ripple-size - _touch-target-size) / 2)';\n\n    @include feature-targeting.targets($feat-structure) {\n      .mdc-checkbox__native-control {\n        @include theme.property(top, $offset, $replace: $replace);\n        @include theme.property(right, $offset, $replace: $replace);\n        @include theme.property(left, $offset, $replace: $replace);\n        @include theme.property(width, $touch-target-size);\n        @include theme.property(height, $touch-target-size);\n      }\n    }\n  }\n}\n\n@mixin _icon-color($unselected-color, $selected-color) {\n  @if $unselected-color and $selected-color {\n    @include container-colors(\n      $unmarked-stroke-color: $unselected-color,\n      $marked-stroke-color: $selected-color,\n      $marked-fill-color: $selected-color\n    );\n  } @else if $unselected-color or $selected-color {\n    @error 'Both unselected and selected icon colors should be provided.';\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of enabled checkbox.\n/// Set $generate-keyframes to false to prevent the mixin from generating @keyframes\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n/// @param {Boolean} $generate-keyframes [true] - Whether animation keyframes should be generated\n///\n@mixin container-colors(\n  $unmarked-stroke-color: $border-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: $baseline-theme-color,\n  $marked-fill-color: $baseline-theme-color,\n  $generate-keyframes: true,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Unchecked colors\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$unchecked-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-enabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  // Checked colors\n  @if (\n    $marked-stroke-color and not\n      custom-properties.is-custom-prop($marked-stroke-color)\n  ) {\n    $marked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-stroke-color)\n      )\n    );\n  }\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-fill-color)\n      )\n    );\n  }\n\n  @include if-marked-enabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if $generate-keyframes and\n    $unmarked-stroke-color and\n    $marked-stroke-color and\n    $unmarked-fill-color and\n    $marked-fill-color\n  {\n    $uid: theme-color.color-hash($unmarked-stroke-color) +\n      theme-color.color-hash($marked-stroke-color) +\n      theme-color.color-hash($unmarked-fill-color) +\n      theme-color.color-hash($marked-fill-color);\n\n    $anim-selector: if(&, '&.mdc-checkbox--anim', '.mdc-checkbox--anim');\n\n    @include feature-targeting.targets($feat-animation, $feat-color) {\n      @include container-keyframes_(\n        $from-stroke-color: $unmarked-stroke-color,\n        $to-stroke-color: $marked-stroke-color,\n        $from-fill-color: $unmarked-fill-color,\n        $to-fill-color: $marked-fill-color,\n        $uid: #{$uid}\n      );\n    }\n\n    // stylelint-disable max-nesting-depth\n\n    #{$anim-selector} {\n      &-unchecked-checked,\n      &-unchecked-indeterminate {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-in-background-#{$uid};\n          }\n        }\n      }\n\n      &-checked-unchecked,\n      &-indeterminate-unchecked {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-out-background-#{$uid};\n          }\n        }\n      }\n    }\n\n    // stylelint-enable max-nesting-depth\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of disabled checkbox.\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n///\n@mixin disabled-container-colors(\n  $unmarked-stroke-color: $disabled-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: transparent,\n  $marked-fill-color: $disabled-color,\n  $query: feature-targeting.all()\n) {\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-disabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($marked-fill-color)\n    );\n  }\n\n  @include if-marked-disabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for an enabled checkbox\n/// @param {Color} $color - The desired ink color in enabled state\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a disabled checkbox\n/// @param {Color} $color - The desired ink color in disabled state\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n/// Sets ripple color when checkbox is not in checked state.\n@mixin ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n/// Sets focus indicator color when checkbox is in checked state.\n@mixin focus-indicator-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-checkbox--selected {\n    @include ripple-theme.states(\n      $color: $color,\n      $opacity-map: $opacity-map,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n\n  &.mdc-ripple-upgraded--background-focused.mdc-checkbox--selected {\n    @include ripple-theme.states-base-color(\n      $color: $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n//\n// Private\n//\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// enabled state.\n/// @access private\n///\n@mixin if-enabled_ {\n  .mdc-checkbox__native-control:enabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  .mdc-checkbox__native-control:disabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & enabled state.\n/// @access private\n///\n@mixin if-unmarked-enabled_ {\n  .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & disabled state.\n/// @access private\n///\n@mixin if-unmarked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & enabled state.\n/// @access private\n///\n@mixin if-marked-enabled_ {\n  .mdc-checkbox__native-control:enabled:checked,\n  .mdc-checkbox__native-control:enabled:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true']:enabled {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & disabled state.\n/// @access private\n///\n@mixin if-marked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:checked,\n  .mdc-checkbox__native-control[disabled]:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true'][disabled] {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Sets the stroke & fill colors for the checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked-enabled_`.\n/// @access private\n///\n@mixin container-colors_(\n  $stroke-color,\n  $fill-color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $stroke-color);\n      @include theme.property(background-color, $fill-color);\n    }\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(border-color, $color);\n      }\n    }\n  }\n}\n\n@mixin container-keyframes_(\n  $from-stroke-color,\n  $to-stroke-color,\n  $from-fill-color,\n  $to-fill-color,\n  $uid\n) {\n  @keyframes mdc-checkbox-fade-in-background-#{$uid} {\n    0% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n\n    50% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n  }\n\n  @keyframes mdc-checkbox-fade-out-background-#{$uid} {\n    0%,\n    80% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n\n    100% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// Internal styling for Dialog MDC component.\n\n@use 'sass:math';\n@use '@material/animation/functions' as animation-functions;\n@use '@material/button/button-theme';\n@use '@material/dom/dom';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/variables' as touch-target-variables;\n@use '@material/typography/typography';\n@use './dialog-custom-properties';\n@use '@material/icon-button/icon-button-theme';\n@use './variables';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // prettier-ignore\n  @include elevation-mixins.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define dialog\n\n  .mdc-dialog,\n  .mdc-dialog__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      position: fixed;\n      top: 0;\n      left: 0;\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  .mdc-dialog {\n    // Note: the top padding is only 20px for dialogs without titles; see below for override.\n    @include content-padding(20px, 24px, 20px, 24px, $query: $query);\n    @include min-width(variables.$min-width, $query: $query);\n    @include max-width(variables.$max-width, variables.$margin, $query: $query);\n    @include max-height(null, variables.$margin, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      // Use `display: none` instead of `visibility: hidden` to avoid recalculating layout when the dialog is closed.\n      display: none;\n      $z-index: custom-properties.create(\n        dialog-custom-properties.$z-index,\n        variables.$z-index\n      );\n      @include theme.property(z-index, $z-index);\n    }\n\n    &.mdc-dialog--fullscreen {\n      @include _fullscreen-dialog-size($query: $query);\n    }\n\n    &.mdc-dialog__scrim--hidden {\n      .mdc-dialog__scrim {\n        @include feature-targeting.targets($feat-structure) {\n          opacity: 0;\n        }\n      }\n    }\n  }\n\n  .mdc-dialog__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n      z-index: -1;\n    }\n  }\n\n  // This wrapper element is needed to make max-height work in IE 11.\n  // See https://github.com/philipwalton/flexbugs/issues/216\n  .mdc-dialog__container {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-direction: row; // IE 11\n      align-items: center;\n      justify-content: space-around; // Ensure Safari centers the dialog (because it treats the container's width oddly)\n      box-sizing: border-box;\n      height: 100%;\n      transform: scale(0.8);\n      opacity: 0;\n      // This element is necessary for IE 11 and needs to have `height: 100%`.\n      // Let clicks on element fall through to scrim element underneath.\n      pointer-events: none;\n    }\n  }\n\n  .mdc-dialog__surface {\n    @include elevation-mixins.overlay-surface-position($query: $query);\n    @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-direction: column;\n      flex-grow: 0; // IE 11\n      flex-shrink: 0; // IE 11\n      box-sizing: border-box;\n      max-width: 100%; // IE 11\n      max-height: 100%; // IE 11\n      pointer-events: auto; // Override from `.mdc-dialog__container`.\n      // IE 11: Otherwise, scrolling content in `mdc-dialog__content` overflows.\n      overflow-y: auto;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n\n      @include dom.forced-colors-mode {\n        // Colored outline is used for HCM instead of transparent border\n        // below to prevent scrolling content overflow.\n        outline: 2px solid windowText;\n      }\n    }\n\n    &::before {\n      @include dom.transparent-border($border-width: 2px, $query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        // Prevent IE11 from rendering this element, because it causes scrolling\n        // content to overflow.\n        @media screen and (-ms-high-contrast: active),\n          screen and (-ms-high-contrast: none) {\n          content: none;\n        }\n      }\n    }\n  }\n\n  .mdc-dialog__title {\n    @include typography.text-baseline(\n      $top: 40px,\n      $display: block,\n      $lineHeight: null,\n      $query: $query\n    );\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n      flex-shrink: 0;\n      box-sizing: border-box;\n      margin: 0 0 1px;\n      padding: 0 24px variables.$title-bottom-padding;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern\n  .mdc-dialog--scrollable .mdc-dialog__title {\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: 1px;\n      // Adjust bottom padding to make title height align to spec when divider is present.\n      // (Titles for alert dialogs w/o dividers align based on text baseline. All spec values are divisible by 4.)\n      padding-bottom: variables.$title-bottom-padding + 6px;\n    }\n  }\n\n  .mdc-dialog--fullscreen {\n    .mdc-dialog__header {\n      @include feature-targeting.targets($feat-structure) {\n        align-items: baseline;\n        border-bottom: 1px solid transparent;\n        display: inline-flex;\n        justify-content: space-between;\n        padding: 0 variables.$header-side-padding\n          variables.$title-bottom-padding;\n        z-index: 1;\n\n        @include _modal-header(\n          $close-icon-padding: variables.$close-icon-padding\n        );\n      }\n    }\n\n    .mdc-dialog__title {\n      @include feature-targeting.targets($feat-structure) {\n        margin-bottom: 0;\n        padding: 0;\n        border-bottom: 0;\n      }\n    }\n\n    &.mdc-dialog--scrollable .mdc-dialog__title {\n      @include feature-targeting.targets($feat-structure) {\n        border-bottom: 0;\n        margin-bottom: 0;\n      }\n    }\n\n    .mdc-dialog__close {\n      @include feature-targeting.targets($feat-structure) {\n        top: 5px;\n      }\n    }\n\n    &.mdc-dialog--scrollable .mdc-dialog__actions {\n      // If full-screen dialog is scrollable, the scroll divider over the action\n      // buttons (i.e. the \"footer\") should only be visible when the content is\n      // \"cut off\" by the footer. To toggle this divider, we override the\n      // styling set by the mdc-dialog--scrollable class, and instead rely on\n      // the mdc-dialog-scroll-divider-footer class to determine when the\n      // border-top should be visible.\n      @include feature-targeting.targets($feat-structure) {\n        border-top: 1px solid transparent;\n      }\n    }\n  }\n\n  .mdc-dialog__content {\n    @include feature-targeting.targets($feat-structure) {\n      flex-grow: 1;\n      box-sizing: border-box;\n      margin: 0;\n      overflow: auto;\n      -webkit-overflow-scrolling: touch;\n    }\n\n    // The content element already has top/bottom padding, so we need to suppress margins on its first/last children.\n    > :first-child {\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: 0;\n      }\n    }\n\n    // The content element already has top/bottom padding, so we need to suppress margins on its first/last children.\n    > :last-child {\n      @include feature-targeting.targets($feat-structure) {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern\n  .mdc-dialog__title + .mdc-dialog__content,\n  .mdc-dialog__header + .mdc-dialog__content {\n    @include feature-targeting.targets($feat-structure) {\n      // Eliminate padding to bring as close to spec as possible, relying on title padding.\n      // (Spec seems inconsistent RE title/body spacing on alert vs. simple variants.)\n      padding-top: 0;\n    }\n  }\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern\n  .mdc-dialog--scrollable .mdc-dialog__title + .mdc-dialog__content {\n    @include feature-targeting.targets($feat-structure) {\n      // Reduce and equalize vertical paddings when scrollable dividers are present\n      // (Note: this is intentionally after title + content to take precedence)\n      padding-top: 8px;\n      padding-bottom: 8px;\n    }\n  }\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern\n  .mdc-dialog__content .mdc-deprecated-list:first-child:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      // Override default .mdc-deprecated-list padding for content consisting exclusively of a MDC List\n      padding: 6px 0 0; // Top padding balances with title height\n    }\n  }\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern, selector-max-specificity\n  .mdc-dialog--scrollable\n    .mdc-dialog__content\n    .mdc-deprecated-list:first-child:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      // Override default .mdc-deprecated-list padding for content consisting exclusively of a MDC List\n      padding: 0;\n    }\n  }\n\n  .mdc-dialog__actions {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      position: relative;\n      flex-shrink: 0;\n      flex-wrap: wrap;\n      align-items: center;\n      justify-content: flex-end;\n      box-sizing: border-box;\n      min-height: 52px;\n      margin: 0;\n      padding: variables.$actions-padding;\n      border-top: 1px solid transparent;\n    }\n\n    .mdc-dialog--stacked & {\n      @include feature-targeting.targets($feat-structure) {\n        flex-direction: column;\n        align-items: flex-end;\n      }\n    }\n  }\n\n  .mdc-dialog__button {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 8px);\n    }\n\n    &:first-child {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, left, 0);\n      }\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      max-width: 100%; // Prevent long text from overflowing parent element in IE 11\n      @include rtl.ignore-next-line();\n      text-align: right;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n\n    .mdc-dialog--stacked &:not(:first-child) {\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: 12px;\n      }\n    }\n  }\n\n  .mdc-dialog--open,\n  .mdc-dialog--opening,\n  .mdc-dialog--closing {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n    }\n  }\n\n  .mdc-dialog--opening {\n    .mdc-dialog__scrim {\n      @include feature-targeting.targets($feat-animation) {\n        transition: opacity 150ms linear;\n      }\n    }\n\n    .mdc-dialog__container {\n      @include feature-targeting.targets($feat-animation) {\n        transition: opacity 75ms linear,\n          animation-functions.enter(transform, 150ms);\n      }\n    }\n  }\n\n  .mdc-dialog--closing {\n    .mdc-dialog__scrim,\n    .mdc-dialog__container {\n      @include feature-targeting.targets($feat-animation) {\n        transition: opacity 75ms linear;\n      }\n    }\n\n    .mdc-dialog__container {\n      @include feature-targeting.targets($feat-structure) {\n        // Dialog container scales up while opening, but should remain scaled up while closing\n        transform: none;\n      }\n    }\n  }\n\n  .mdc-dialog--open {\n    .mdc-dialog__scrim {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n\n    .mdc-dialog__container {\n      @include feature-targeting.targets($feat-structure) {\n        transform: none;\n        opacity: 1;\n      }\n    }\n\n    &.mdc-dialog__surface-scrim--shown {\n      .mdc-dialog__surface-scrim {\n        @include feature-targeting.targets($feat-structure) {\n          opacity: 1;\n          z-index: 1;\n        }\n      }\n    }\n\n    &.mdc-dialog__surface-scrim--hiding {\n      .mdc-dialog__surface-scrim {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity 75ms linear;\n        }\n      }\n    }\n\n    &.mdc-dialog__surface-scrim--showing {\n      .mdc-dialog__surface-scrim {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity 150ms linear;\n        }\n      }\n    }\n  }\n\n  .mdc-dialog__surface-scrim {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      opacity: 0;\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .mdc-dialog__surface-scrim--shown &,\n    .mdc-dialog__surface-scrim--showing &,\n    .mdc-dialog__surface-scrim--hiding & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n  }\n\n  // postcss-bem-linter: end\n\n  // Class applied to body while dialog is open, to prevent scrolling behind the dialog\n  .mdc-dialog-scroll-lock {\n    @include feature-targeting.targets($feat-structure) {\n      overflow: hidden;\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-dialog {\n    @include container-fill-color(surface, $query: $query);\n    @include scrim-color(variables.$scrim-color, $query: $query);\n    @include title-ink-color(variables.$title-ink-color, $query: $query);\n    @include content-ink-color(variables.$content-ink-color, $query: $query);\n    @include scroll-divider-color(\n      variables.$scroll-divider-color,\n      $query: $query\n    );\n    @include shape-radius(variables.$shape-radius, $query: $query);\n  }\n\n  .mdc-dialog__surface {\n    @include elevation-mixins.elevation(24, $query: $query);\n  }\n\n  .mdc-dialog__title {\n    @include typography.typography(headline6, $query: $query);\n  }\n\n  .mdc-dialog__content {\n    @include typography.typography(body1, $query: $query);\n  }\n\n  // For go/soy-checks/rewrite-css\n  .mdc-dialog__title-icon {\n    @include feature-targeting.targets($feat-structure) {\n      /** Hook for theming API. */\n    }\n  }\n\n  @include static-styles($query: $query);\n}\n\n@mixin container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-dialog__surface {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(background-color, $color);\n    }\n  }\n}\n\n@mixin scrim-color(\n  $color,\n  $opacity: variables.$scrim-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-dialog__scrim {\n    @include feature-targeting.targets($feat-color) {\n      background-color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n\n  .mdc-dialog__surface-scrim {\n    @include feature-targeting.targets($feat-color) {\n      background-color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n}\n\n@mixin title-ink-color(\n  $color,\n  $opacity: variables.$title-ink-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-dialog__title {\n    @include feature-targeting.targets($feat-color) {\n      color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n}\n\n@mixin content-ink-color(\n  $color,\n  $opacity: variables.$content-ink-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-dialog__content {\n    @include feature-targeting.targets($feat-color) {\n      color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n\n  .mdc-dialog__close {\n    @include icon-button-theme.ink_color($color: $color, $query: $query);\n  }\n}\n\n@mixin content-padding(\n  $padding-top,\n  $padding-right,\n  $padding-bottom,\n  $padding-left,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-dialog__content {\n    @include feature-targeting.targets($feat-structure) {\n      padding: $padding-top $padding-right $padding-bottom $padding-left;\n    }\n  }\n}\n\n@mixin scroll-divider-color(\n  $color,\n  $opacity: variables.$scroll-divider-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-dialog--scrollable .mdc-dialog__title,\n  &.mdc-dialog--scrollable .mdc-dialog__actions,\n  &.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer\n    .mdc-dialog__actions {\n    @include feature-targeting.targets($feat-color) {\n      border-color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n\n  &.mdc-dialog--scrollable .mdc-dialog__title {\n    @include feature-targeting.targets($feat-color) {\n      border-bottom: 1px solid rgba(theme-color.prop-value($color), $opacity);\n      margin-bottom: 0;\n    }\n  }\n\n  &.mdc-dialog-scroll-divider-header.mdc-dialog--fullscreen\n    .mdc-dialog__header {\n    @include elevation-mixins.elevation(2, $query: $query);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-dialog__surface {\n    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n  }\n}\n\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-dialog__surface {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: $min-width;\n    }\n  }\n}\n\n@mixin max-width($max-width, $margin, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $max-size-calc-expr: calc(100vw - #{$margin * 2});\n\n  .mdc-dialog__surface {\n    @include feature-targeting.targets($feat-structure) {\n      @if $max-width {\n        $max-width-breakpoint: $max-width + ($margin * 2);\n\n        // Fit snugly within the viewport at smaller screen sizes.\n        @media (max-width: $max-width-breakpoint) {\n          max-width: $max-size-calc-expr;\n        }\n\n        // Once the screen gets big enough, apply a fixed maximum width.\n        @media (min-width: $max-width-breakpoint) {\n          max-width: $max-width;\n        }\n      } @else {\n        max-width: $max-size-calc-expr;\n      }\n    }\n  }\n}\n\n@mixin max-height($max-height, $margin, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $max-size-calc-expr: calc(100% - #{$margin * 2});\n\n  .mdc-dialog__surface {\n    @include feature-targeting.targets($feat-structure) {\n      @if $max-height {\n        $max-height-breakpoint: $max-height + ($margin * 2);\n\n        // Fit snugly within the viewport at smaller screen sizes.\n        @media (max-height: $max-height-breakpoint) {\n          max-height: $max-size-calc-expr;\n        }\n\n        // Once the screen gets big enough, apply a fixed maximum height.\n        @media (min-height: $max-height-breakpoint) {\n          max-height: $max-height;\n        }\n      } @else {\n        max-height: $max-size-calc-expr;\n      }\n    }\n  }\n\n  // Target IE 11.\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    // On IE 11, if surface height is fixed and container height is 100%,\n    // scrolling content overflows. So, reset height if surface height\n    // is fixed.\n    .mdc-dialog__container {\n      @include feature-targeting.targets($feat-structure) {\n        /* stylelint-disable */\n        // Disable stylelint here, as nesting depth > 3 is required to\n        // work around IE 11.\n        @if $max-height {\n          $max-height-breakpoint: $max-height + ($margin * 2);\n\n          @media (min-height: $max-height-breakpoint) {\n            align-items: stretch;\n            height: auto;\n          }\n        }\n        /* stylelint-enable*/\n      }\n    }\n  }\n}\n\n// Applied to dialogs that have buttons with an increased touch target.\n@mixin with-touch-target($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $touch-target-margin: math.div(\n    touch-target-variables.$height - button-theme.$height,\n    2\n  );\n  $vertical-padding: math.max(\n    0,\n    variables.$actions-padding - $touch-target-margin\n  );\n\n  // Buttons with an increased touch target have added vertical margin, so\n  // decrease the actions element padding to compensate.\n  .mdc-dialog__actions {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $vertical-padding;\n      padding-bottom: $vertical-padding;\n\n      // The below styles override the default button touch target values,\n      // which otherwise cause `mdc-dialog__surface` to scroll unnnecessarily\n      // in IE 11.\n      .mdc-button__touch {\n        top: -$touch-target-margin; // IE 11\n        transform: none; // IE 11\n      }\n    }\n  }\n}\n\n@mixin _fullscreen-dialog-size($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-dialog__surface {\n    @include feature-targeting.targets($feat-structure) {\n      // Reset the max-width so the default dialog sizing doesn't interfere with\n      // the full-screen dialog sizing.\n      max-width: none;\n    }\n\n    // Medium screens\n    @media (max-width: 960px) {\n      @include feature-targeting.targets($feat-structure) {\n        max-height: 560px;\n        width: 560px;\n        @include _modal-header(\n          $close-icon-padding: variables.$close-icon-padding\n        );\n      }\n    }\n\n    // Small screens\n    @media (max-width: 720px) {\n      @include feature-targeting.targets($feat-structure) {\n        $max-small-height: 560px;\n        $max-small-width: 560px;\n        $min-horizontal-small-margin: 56px;\n        $min-vertical-small-margin: 80px;\n        @include _fluid-size-calc(\n          $vertical-margin: $min-vertical-small-margin,\n          $max-height: $max-small-height,\n          $horizontal-margin: $min-horizontal-small-margin,\n          $max-width: $max-small-width\n        );\n        @include _modal-header(\n          $close-icon-padding: variables.$close-icon-padding\n        );\n      }\n    }\n\n    // X-Small Screens (horizontal)\n    @media (max-width: 720px) and (max-height: 400px) {\n      @include feature-targeting.targets($feat-structure) {\n        // Use 100% instead of vw/vh so the url bar is taken into account on\n        // mobile.\n        height: 100%;\n        max-height: 100vh;\n        max-width: 100vw;\n        width: 100vw;\n        @include _fullscreen-header(\n          $close-icon-padding: variables.$close-icon-padding,\n          $title-side-padding: variables.$title-side-padding\n        );\n      }\n      @include shape-mixins.radius(0, $query: $query);\n    }\n\n    // X-Small Screens\n    @media (max-width: 600px) {\n      @include feature-targeting.targets($feat-structure) {\n        // Use 100% instead of vw/vh so the url bar is taken into account on\n        // mobile.\n        height: 100%;\n        max-height: 100vh;\n        max-width: 100vw;\n        width: 100vw;\n        @include _fullscreen-header(\n          $close-icon-padding: variables.$close-icon-padding,\n          $title-side-padding: variables.$title-side-padding\n        );\n      }\n      @include shape-mixins.radius(0, $query: $query);\n    }\n\n    // Large to X-Large screens\n    @media (min-width: 960px) {\n      @include feature-targeting.targets($feat-structure) {\n        $min-horizontal-margin: 200px;\n        width: calc(100vw - #{$min-horizontal-margin * 2});\n        @include _modal-header(\n          $close-icon-padding: variables.$close-icon-padding\n        );\n      }\n    }\n  }\n}\n\n/// Defines styling to specify a fluid dialog size while maintaining a specific\n/// vertical and horizontal margin.\n/// @param  {Number} $vertical-margin\n/// @param  {Number} $max-height\n/// @param  {Number} $horizontal-margin\n/// @param  {Number} $max-width\n@mixin _fluid-size-calc(\n  $vertical-margin,\n  $max-height,\n  $horizontal-margin,\n  $max-width\n) {\n  $max-width-calc-expr: calc(100vw - #{$horizontal-margin * 2});\n  $max-width-breakpoint: $max-width + ($horizontal-margin * 2);\n\n  @media (max-width: $max-width-breakpoint) {\n    width: $max-width-calc-expr;\n  }\n  @media (min-width: $max-width-breakpoint) {\n    width: $max-width;\n  }\n\n  $max-height-calc-expr: calc(100vh - #{$vertical-margin * 2});\n  $max-height-breakpoint: $max-height + ($vertical-margin * 2);\n\n  @media (max-height: $max-height-breakpoint) {\n    max-height: $max-height-calc-expr;\n  }\n  @media (min-height: $max-height-breakpoint) {\n    max-height: $max-height;\n  }\n}\n\n/// Defines styles for the header bar when a dialog takes up the full screen.\n/// @param  {Number} $close-icon-padding - Padding on close icon button.\n/// @param  {Number} $title-side-padding - Space between the edge of the close\n///   icon button and edge of the title.\n@mixin _fullscreen-header($close-icon-padding, $title-side-padding) {\n  .mdc-dialog__close {\n    order: -1;\n    @include theme.property(left, -#{$close-icon-padding});\n  }\n  .mdc-dialog__header {\n    padding: 0 variables.$fullscreen-header-side-padding\n      variables.$title-bottom-padding;\n    justify-content: flex-start;\n  }\n  .mdc-dialog__title {\n    @include theme.property(\n      margin-left,\n      'calc(title - 2 * close)',\n      $replace: (title: $title-side-padding, close: $close-icon-padding)\n    );\n  }\n}\n\n/// Defines styles for the header bar when a dialog is modal.\n/// @param  {Number} $close-icon-padding - Padding on close icon button.\n@mixin _modal-header($close-icon-padding) {\n  .mdc-dialog__close {\n    @include theme.property(right, -#{$close-icon-padding});\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$scrim-color: on-surface !default;\n$title-ink-color: on-surface !default;\n$content-ink-color: on-surface !default;\n$scroll-divider-color: on-surface !default;\n\n$scrim-opacity: 0.32 !default;\n$title-ink-opacity: 0.87 !default;\n$content-ink-opacity: 0.6 !default;\n$scroll-divider-opacity: 0.12 !default;\n\n$min-width: 280px !default;\n$max-width: 560px !default;\n$margin: 16px !default;\n$shape-radius: medium !default;\n$title-bottom-padding: 9px !default;\n$actions-padding: 8px !default;\n$header-side-padding: 24px !default;\n\n$close-icon-padding: 12px !default;\n$title-side-padding: 16px !default;\n$fullscreen-header-side-padding: 16px !default;\n\n$z-index: 7 !default;\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/list/mixins' as list-mixins;\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use './variables';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define drawer\n  .mdc-drawer {\n    @include title-ink-color(variables.$title-ink-color, $query: $query);\n    @include subtitle-ink-color(variables.$subtitle-ink-color, $query: $query);\n    @include border-color(variables.$divider-color, $query: $query);\n    @include surface-fill-color(variables.$surface-fill-color, $query: $query);\n    @include item-icon-ink-color(\n      variables.$item-inactive-ink-color,\n      $query: $query\n    );\n    @include item-text-ink-color(\n      variables.$item-inactive-ink-color,\n      $query: $query\n    );\n    @include item-activated-icon-ink-color(\n      variables.$item-activated-ink-color,\n      $query: $query\n    );\n    @include item-activated-text-ink-color(\n      variables.$item-activated-ink-color,\n      $query: $query\n    );\n    @include shape-radius(variables.$shape-radius, $query: $query);\n    @include item-shape-radius(variables.$item-shape-radius, $query: $query);\n    @include z-index(variables.$z-index, $query: $query);\n    @include width(variables.$width, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-direction: column;\n      flex-shrink: 0;\n      box-sizing: border-box;\n      height: 100%;\n      @include rtl.ignore-next-line();\n      border-right-width: 1px;\n      @include rtl.ignore-next-line();\n      border-right-style: solid;\n      overflow: hidden;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        border-right-width: 0;\n        @include rtl.ignore-next-line();\n        border-left-width: 1px;\n        @include rtl.ignore-next-line();\n        border-right-style: none;\n        @include rtl.ignore-next-line();\n        border-left-style: solid;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-property: transform;\n      transition-timing-function: animation-variables.$standard-curve-timing-function;\n    }\n\n    @include list-item_($query);\n  }\n\n  .mdc-drawer--animate {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(-100%);\n\n      @include rtl.rtl {\n        transform: translateX(100%);\n      }\n    }\n  }\n\n  .mdc-drawer--opening {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(0);\n\n      // Required to level the specificity with animate class.\n      @include rtl.rtl {\n        transform: translateX(0);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: variables.$animation-enter;\n    }\n  }\n\n  .mdc-drawer--closing {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(-100%);\n\n      @include rtl.rtl {\n        transform: translateX(100%);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: variables.$animation-exit;\n    }\n  }\n\n  .mdc-drawer__header {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      box-sizing: border-box;\n      min-height: 64px; // same as $mdc-top-app-bar-row-height\n      padding: 0 variables.$surface-padding 4px;\n    }\n  }\n\n  .mdc-drawer__title {\n    @include typography.typography(headline6, $query: $query);\n    @include typography.text-baseline(\n      $top: 36px,\n      $bottom: 20px,\n      $query: $query\n    );\n  }\n\n  .mdc-drawer__subtitle {\n    @include typography.typography(body2, $query: $query);\n    @include typography.text-baseline($top: 20px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: 0;\n    }\n  }\n\n  .mdc-drawer__content {\n    @include feature-targeting.targets($feat-structure) {\n      height: 100%;\n      overflow-y: auto;\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n@mixin dismissible-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-drawer--dismissible {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, 0);\n\n      display: none;\n      position: absolute;\n\n      &.mdc-drawer--open {\n        display: flex;\n      }\n    }\n  }\n\n  .mdc-drawer-app-content {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 0);\n\n      position: relative;\n    }\n  }\n}\n\n@mixin modal-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-drawer--modal {\n    @include scrim-fill-color(variables.$modal-scrim-color, $query: $query);\n    @include elevation-mixins.elevation(\n      variables.$modal-elevation,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, 0);\n\n      display: none;\n      position: fixed;\n    }\n\n    &.mdc-drawer--open {\n      @include feature-targeting.targets($feat-structure) {\n        display: flex;\n      }\n    }\n  }\n\n  .mdc-drawer-scrim {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: variables.$z-index - 1;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-property: opacity;\n      transition-timing-function: animation-variables.$standard-curve-timing-function;\n    }\n\n    .mdc-drawer--open + & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n\n    .mdc-drawer--animate + & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n\n    .mdc-drawer--opening + & {\n      @include feature-targeting.targets($feat-animation) {\n        transition-duration: variables.$animation-enter;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n\n    .mdc-drawer--closing + & {\n      @include feature-targeting.targets($feat-animation) {\n        transition-duration: variables.$animation-exit;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n  }\n}\n\n@mixin activated-overlay-color($color, $query: feature-targeting.all()) {\n  :not(.mdc-deprecated-list--non-interactive) > .mdc-deprecated-list-item {\n    @include ripple-theme.states-activated($color, $query: $query);\n  }\n}\n\n@mixin border-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$divider-opacity);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(border-color, $value);\n  }\n}\n\n@mixin item-shape-radius(\n  $radius,\n  $rtl-reflexive: true,\n  $query: feature-targeting.all()\n) {\n  @include list-mixins.deprecated-single-line-shape-radius(\n    $radius,\n    $rtl-reflexive,\n    $query: $query\n  );\n}\n\n@mixin shape-radius($radius, $query: feature-targeting.all()) {\n  // Check type since $radius may be a custom property Map\n  $is-list: meta.type-of($radius) == 'list';\n  @if $is-list and list.length($radius) > 2 {\n    @error \"Invalid radius: '#{$radius}' component doesn't allow customizing all corners\";\n  } @else if $is-list and list.length($radius) == 2 {\n    $radius: 0 list.nth($radius, 1) list.nth($radius, 2) 0;\n  } @else {\n    $radius: 0 $radius $radius 0;\n  }\n\n  @include shape-mixins.radius($radius, $rtl-reflexive: true, $query: $query);\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $value: rgba(theme-color.prop-value($color), variables.$divider-opacity);\n\n  @include list-mixins.deprecated-divider-color($value, $query: $query);\n}\n\n@mixin title-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$title-ink-opacity);\n\n  .mdc-drawer__title {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $value);\n    }\n  }\n}\n\n@mixin subtitle-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$subtitle-ink-opacity);\n\n  @include list-mixins.deprecated-group-subheader-ink-color(\n    $value,\n    $query: $query\n  );\n\n  .mdc-drawer__subtitle {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $value);\n    }\n  }\n}\n\n@mixin fill-color-accessible($color, $query: feature-targeting.all()) {\n  $accessibleColor: theme-color.accessible-ink-color($color);\n\n  @include title-ink-color($accessibleColor, $query: $query);\n  @include subtitle-ink-color($accessibleColor, $query: $query);\n  @include item-text-ink-color($accessibleColor, $query: $query);\n  @include item-icon-ink-color($accessibleColor, $query: $query);\n  @include surface-fill-color($color, $query: $query);\n}\n\n@mixin item-icon-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-inactive-icon-ink-opacity\n  );\n\n  @include list-mixins.deprecated-item-graphic-ink-color(\n    $value,\n    $query: $query\n  );\n}\n\n@mixin item-activated-icon-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-active-icon-ink-opacity\n  );\n\n  .mdc-deprecated-list-item--activated {\n    @include list-mixins.deprecated-item-graphic-ink-color(\n      $value,\n      $query: $query\n    );\n  }\n}\n\n@mixin item-activated-text-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-active-text-ink-opacity\n  );\n\n  .mdc-deprecated-list-item--activated {\n    @include list-mixins.deprecated-item-primary-text-ink-color(\n      $value,\n      $query: $query\n    );\n  }\n}\n\n@mixin item-text-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-inactive-text-ink-opacity\n  );\n\n  .mdc-deprecated-list-item {\n    @include list-mixins.deprecated-item-primary-text-ink-color(\n      $value,\n      $query: $query\n    );\n  }\n}\n\n@mixin surface-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin scrim-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$modal-scrim-opacity);\n\n  + .mdc-drawer-scrim {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $value);\n    }\n  }\n}\n\n@mixin z-index($value, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    z-index: $value;\n  }\n}\n\n@mixin width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(width, $width);\n  }\n\n  &.mdc-drawer--open:not(.mdc-drawer--closing) + .mdc-drawer-app-content {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, $width);\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin list-item_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      height: calc(48px - 2 * #{variables.$list-item-spacing});\n      // To accomodate margin conflict.\n      margin: (variables.$list-item-spacing * 2) 8px;\n      padding: 0 math.div(variables.$surface-padding, 2);\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item:nth-child(1) {\n    @include feature-targeting.targets($feat-structure) {\n      margin-top: 2px;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item:nth-last-child(1) {\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-group__subheader {\n    @include typography.typography(body2, $query: $query);\n    @include typography.text-baseline($top: 24px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 0;\n      padding: 0 variables.$surface-padding;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      margin: 3px 0 4px;\n    }\n  }\n\n  // Prevents list item children from being included in the click target.\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item__text,\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      pointer-events: none;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/theme/theme-color';\n\n// Colors\n$title-ink-color: theme-color.prop-value(on-surface) !default;\n$subtitle-ink-color: theme-color.prop-value(on-surface) !default;\n$item-inactive-ink-color: theme-color.prop-value(on-surface) !default;\n$item-activated-ink-color: theme-color.prop-value(primary) !default;\n$divider-color: theme-color.prop-value(on-surface) !default;\n$surface-fill-color: surface !default;\n\n// Opacity\n$title-ink-opacity: theme-color.text-emphasis(high) !default;\n$subtitle-ink-opacity: theme-color.text-emphasis(medium) !default;\n$item-inactive-icon-ink-opacity: theme-color.text-emphasis(medium) !default;\n$item-inactive-text-ink-opacity: theme-color.text-emphasis(high) !default;\n$item-active-icon-ink-opacity: 1 !default;\n$item-active-text-ink-opacity: theme-color.text-emphasis(high) !default;\n$divider-opacity: 0.12 !default;\n\n// Widths\n$width: 256px !default;\n$list-item-spacing: 4px !default;\n$surface-padding: 16px !default;\n$shape-radius: large !default;\n$item-shape-radius: small !default;\n\n// Animations\n$animation-enter: 250ms !default;\n$animation-exit: 200ms !default;\n\n// Scrim\n$modal-scrim-color: theme-color.prop-value(on-surface) !default;\n$modal-scrim-opacity: 0.32 !default;\n\n$z-index: 6 !default;\n$modal-elevation: 16 !default;\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n@use '@material/theme/theme-color';\n@use './evolution-mixins';\n\n@mixin deprecated-core-styles($query: feature-targeting.all()) {\n  @include deprecated-without-ripple($query);\n  @include deprecated-ripple($query);\n}\n\n// This API is intended for use by frameworks that may want to separate the\n// ripple-related styles from the other list styles. It is recommended that most\n// users use `mdc-deprecated-list-core-styles` instead.\n@mixin deprecated-without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$deprecated-divider-color-on-dark-bg,\n    variables.$deprecated-divider-color-on-light-bg\n  );\n\n  .mdc-deprecated-list {\n    @include deprecated-base_($query);\n  }\n\n  @include deprecated-single-line-density(\n    variables.$deprecated-single-line-density-scale,\n    $query: $query\n  );\n  @include deprecated-item-secondary-text-ink-color(\n    text-secondary-on-background,\n    $query\n  );\n  @include deprecated-item-graphic-fill-color(transparent, $query);\n  @include deprecated-item-graphic-ink-color(text-icon-on-background, $query);\n  @include deprecated-item-meta-ink-color(text-hint-on-background, $query);\n  @include deprecated-group-subheader-ink-color(\n    text-primary-on-background,\n    $query\n  );\n  @include deprecated-item-disabled-text-opacity(\n    variables.$deprecated-text-disabled-opacity,\n    $query\n  );\n  @include deprecated-item-disabled-text-color(\n    variables.$deprecated-text-disabled-color,\n    $query\n  );\n  @include deprecated-item-selected-text-color(\n    variables.$deprecated-text-selected-color,\n    $query\n  );\n\n  .mdc-deprecated-list--dense {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: 4px;\n      padding-bottom: 4px;\n      font-size: 0.812rem;\n    }\n  }\n\n  .mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      @include deprecated-item-base_;\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-deprecated-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-deprecated-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    @include deprecated-list-item-padding-variant(\n      variables.$deprecated-textual-variant-config,\n      $query\n    );\n    @include deprecated-list-item-height-variant(\n      variables.$deprecated-textual-variant-config,\n      $query\n    );\n\n    .mdc-deprecated-list--icon-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-icon-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-icon-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--avatar-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-avatar-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-avatar-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--thumbnail-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-thumbnail-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-thumbnail-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--image-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-image-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-image-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--video-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-video-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-video-variant-config,\n        $query\n      );\n    }\n  }\n\n  // This is included here to preserve expected specificity behavior (avatar\n  // graphic styles must take priority).\n  // TODO(b/157038316): regroup this with density styles when nesting is fixed.\n  .mdc-deprecated-list--dense .mdc-deprecated-list-item__graphic {\n    @include deprecated-graphic-size-dense_(20px, $query);\n  }\n\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      align-items: center;\n      justify-content: center;\n      fill: currentColor;\n      object-fit: cover;\n    }\n\n    // TODO(b/156624966): this retains legacy spacing but should be updated.\n    @include deprecated-graphic-size-variant(\n      variables.$deprecated-deprecated-graphic-config,\n      $query\n    );\n\n    .mdc-deprecated-list--icon-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-icon-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--avatar-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-avatar-variant-config,\n        $query\n      );\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n\n    .mdc-deprecated-list--thumbnail-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-thumbnail-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--image-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-image-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--video-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-video-variant-config,\n        $query\n      );\n    }\n  }\n\n  // Extra specificity is to override .material-icons display style if used in\n  // conjunction with mdc-deprecated-list-item__graphic\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-deprecated-list .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n\n  .mdc-deprecated-list-item__meta {\n    &:not(.material-icons) {\n      @include typography.typography(caption, $query);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      margin-left: auto;\n      @include rtl.ignore-next-line();\n      margin-right: 0;\n\n      @at-root {\n        .mdc-deprecated-list-item[dir='rtl'] &,\n        [dir='rtl'] .mdc-deprecated-list-item & {\n          @include rtl.ignore-next-line();\n          margin-left: 0;\n          @include rtl.ignore-next-line();\n          margin-right: auto;\n        }\n      }\n    }\n  }\n\n  .mdc-deprecated-list-item__text {\n    @include typography.overflow-ellipsis($query);\n  }\n\n  // Disable interaction on label elements that may automatically\n  // toggle corresponding checkbox / radio input.\n  .mdc-deprecated-list-item__text[for] {\n    @include feature-targeting.targets($feat-structure) {\n      pointer-events: none;\n    }\n  }\n\n  .mdc-deprecated-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: variables.$deprecated-item-primary-text-baseline-height,\n      $bottom: variables.$deprecated-item-secondary-text-baseline-height,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-deprecated-list--video-list &,\n    .mdc-deprecated-list--image-list &,\n    .mdc-deprecated-list--thumbnail-list &,\n    .mdc-deprecated-list--avatar-list &,\n    .mdc-deprecated-list--icon-list & {\n      @include typography.text-baseline(\n        $top:\n          variables.$deprecated-item-primary-text-baseline-height-with-graphic,\n        $bottom: variables.$deprecated-item-secondary-text-baseline-height,\n        $query: $query\n      );\n    }\n\n    // stylelint-disable plugin/selector-bem-pattern\n    .mdc-deprecated-list--dense & {\n      @include typography.text-baseline(\n        $top: variables.$deprecated-dense-item-primary-text-baseline-height,\n        $bottom: variables.$deprecated-item-secondary-text-baseline-height,\n        $query: $query\n      );\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n  }\n\n  .mdc-deprecated-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: variables.$deprecated-item-secondary-text-baseline-height,\n      $display: block,\n      $query: $query\n    );\n\n    // stylelint-disable plugin/selector-bem-pattern\n    .mdc-deprecated-list--dense & {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: inherit;\n      }\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-deprecated-list--dense .mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      height: 40px;\n    }\n  }\n\n  .mdc-deprecated-list--two-line .mdc-deprecated-list-item__text {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-start;\n    }\n  }\n\n  .mdc-deprecated-list--two-line {\n    .mdc-deprecated-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        height: variables.$deprecated-two-line-height;\n      }\n    }\n\n    &.mdc-deprecated-list--video-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--image-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--thumbnail-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--avatar-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--icon-list .mdc-deprecated-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        height: variables.$deprecated-two-line-graphic-height;\n      }\n    }\n\n    // Icons in multiline lists are the only graphic that isn't centered.\n    &.mdc-deprecated-list--icon-list .mdc-deprecated-list-item__graphic {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: flex-start;\n        margin-top: variables.$deprecated-two-line-icon-top-margin;\n      }\n    }\n  }\n\n  .mdc-deprecated-list--two-line.mdc-deprecated-list--dense\n    .mdc-deprecated-list-item,\n  .mdc-deprecated-list--avatar-list.mdc-deprecated-list--dense\n    .mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      height: 60px;\n    }\n  }\n\n  .mdc-deprecated-list--avatar-list.mdc-deprecated-list--dense\n    .mdc-deprecated-list-item__graphic {\n    @include deprecated-graphic-size-dense_(36px, $query);\n  }\n\n  // Only change mouse cursor for list items which are not disabled.\n  :not(.mdc-deprecated-list-item--disabled).mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-deprecated-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      height: 0;\n      margin: 0;\n      border: none;\n      border-bottom-width: 1px;\n      border-bottom-style: solid;\n    }\n  }\n\n  // Note: ideally we'd be able to hoist this to the top-level `$feat-color`,\n  // but doing so will cause the `border` declaration on\n  // `.mdc-deprecated-list-divider` above to override it.\n  @include deprecated-divider-color($divider-color, $query);\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Items are fully inset using padding.\n  .mdc-deprecated-list-divider--padded {\n    @include deprecated-divider-inset-variant(\n      variables.$deprecated-textual-variant-config,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Items's leading, but not trailing, edge is inset to account for *avatar*\n  // width.\n  .mdc-deprecated-list-divider--inset {\n    @include deprecated-divider-inset-variant(\n      variables.$deprecated-avatar-variant-config,\n      $trailing: false,\n      $query: $query\n    );\n  }\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Item's leading and trailing edges are inset to account for *avatar* width.\n  .mdc-deprecated-list-divider--inset.mdc-deprecated-list-divider--padded {\n    @include deprecated-divider-inset-variant(\n      variables.$deprecated-avatar-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-textual-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--icon-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-icon-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--avatar-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-avatar-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--thumbnail-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-thumbnail-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--image-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-image-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--video-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-video-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-deprecated-list-group__subheader {\n    $list-subheader-virtual-height: 3rem;\n    $list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $list-subheader-margin: calc(\n      (#{$list-subheader-virtual-height} - #{$list-subheader-leading}) / 2\n    );\n\n    @include typography.typography(subtitle1, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: $list-subheader-margin variables.$deprecated-side-padding;\n    }\n  }\n\n  @include evolution-mixins.without-ripple($query: $query);\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// list styles. It is recommended that most users use `mdc-deprecated-list-core-styles` instead.\n@mixin deprecated-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // List items should support states by default, but it should be possible to opt out.\n  :not(.mdc-deprecated-list-item--disabled).mdc-deprecated-list-item {\n    @include deprecated-item-interactive-ripple_($query);\n  }\n\n  // Set styles only for focus state on disabled list item.\n  .mdc-deprecated-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple.surface(\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n\n    #{variables.$deprecated-ripple-target},\n    #{variables.$deprecated-temporary-ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n\n  @include evolution-mixins.with-ripple($query: $query);\n}\n\n///\n/// Sets ripple color for a list item.\n///\n@mixin deprecated-ripple-states($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states(\n    $color: $color,\n    $query: $query,\n    $ripple-target: variables.$deprecated-ripple-target\n  );\n  @include ripple-theme.states(\n    $color: $color,\n    $query: $query,\n    $ripple-target: variables.$deprecated-temporary-ripple-target\n  );\n}\n\n/// Sets the text color of the list item in selected or activated state.\n/// @param {color} $color - The desired text color.\n@mixin deprecated-item-selected-text-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  // \"Selected\" is ephemeral and likely to change soon. E.g., selecting one or more photos to share in Google Photos.\n  // \"Activated\" is more permanent. E.g., the currently highlighted navigation destination in a drawer.\n  .mdc-deprecated-list-item--selected,\n  .mdc-deprecated-list-item--activated {\n    @include deprecated-item-primary-text-ink-color($color, $query: $query);\n    @include deprecated-item-graphic-ink-color($color, $query: $query);\n  }\n}\n\n@mixin deprecated-item-primary-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.prop(color, $color);\n  }\n}\n\n@mixin deprecated-item-secondary-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-graphic-fill-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(background-color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-graphic-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-meta-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__meta {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin deprecated-single-line-shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$deprecated-single-line-density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$deprecated-single-line-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-deprecated-list-item {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin deprecated-divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(border-bottom-color, $color);\n    }\n  }\n}\n\n@mixin deprecated-group-subheader-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-disabled-text-opacity(\n  $opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item--disabled .mdc-deprecated-list-item__text {\n    @include feature-targeting.targets($feat-color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin deprecated-item-disabled-text-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item--disabled {\n    .mdc-deprecated-list-item__text,\n    .mdc-deprecated-list-item__primary-text,\n    .mdc-deprecated-list-item__secondary-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.prop(color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Establishes each list item's padding using a variant config.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin deprecated-list-item-padding-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  @include deprecated-list-item-padding($leading-padding, $query);\n}\n\n///\n/// Establishes each list item's padding.\n///\n/// @param {Number} $leading-padding The item's leading padding.\n///\n/// @access public\n///\n@mixin deprecated-list-item-padding(\n  $leading-padding,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(\n      padding,\n      $leading-padding,\n      variables.$deprecated-trailing-padding\n    );\n  }\n}\n\n///\n/// Establishes each list item's single line height using a variant config.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin deprecated-list-item-height-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $single-line-height: map.get($variant-config, single-line-height);\n  @include deprecated-list-item-height($single-line-height, $query);\n}\n\n///\n/// Establishes each list item's height.\n///\n/// @param {Number} $height The item's height.\n///\n/// @access public\n///\n@mixin deprecated-list-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets the trailing margin used by icons.\n///\n/// @param {Number} $margin The trailing margin applied to icons.\n///\n/// @access public\n///\n@mixin deprecated-icon-margin($margin, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-deprecated-list-item__graphic {\n      @include rtl.reflexive-box(margin, right, $margin);\n    }\n  }\n}\n\n///\n/// Sets divider inset sizes for each list variant.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin deprecated-divider-insets-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n  @include deprecated-divider-insets($leading-padding, $text-offset, $query);\n}\n\n///\n/// Sets divider inset sizes for each list variant.\n///\n/// @param {Number} $leading-padding The item's leading padding.\n/// @param {Number} $text-offset The item's text offset.\n///\n/// @access public\n///\n@mixin deprecated-divider-insets(\n  $leading-padding,\n  $text-offset,\n  $query: feature-targeting.all()\n) {\n  .mdc-deprecated-list-divider--inset-leading {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $trailing: false,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-trailing {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $leading: false,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-leading.mdc-deprecated-list-divider--inset-trailing {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-leading.mdc-deprecated-list-divider--padding {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $trailing: false,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-leading.mdc-deprecated-list-divider--inset-trailing.mdc-deprecated-list-divider--inset-padding {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n}\n\n// Sets the width and height of the graphic element using a variant config.\n@mixin deprecated-graphic-size-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n  $width: map.get(map.get($variant-config, graphic-size), width);\n  $height: map.get(map.get($variant-config, graphic-size), height);\n\n  @include deprecated-graphic-size(\n    $leading-padding,\n    $text-offset,\n    $width,\n    $height,\n    $query\n  );\n}\n\n// Sets the width and height of the graphic element, as well as calculates the\n// trailing margin for the graphic element such that the text is always offset\n// from the item's leading edge by 72px, which is defined within the spec. If\n// height isn't specified, the graphic is assumed to be square.\n// TODO(b/155397992): restructure to use symmetric margins.\n@mixin deprecated-graphic-size(\n  $leading-padding,\n  $text-offset,\n  $width,\n  $height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $margin-value: max(\n    $text-offset - $leading-padding - $width,\n    $leading-padding\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(margin, right, $margin-value);\n    width: $width;\n    height: $height;\n  }\n}\n\n// Deprecated. Supports legacy density styles.\n@mixin deprecated-graphic-size-dense_($size, $query: feature-targeting.all()) {\n  @include deprecated-graphic-size(\n    $leading-padding: 16px,\n    $text-offset: 16px,\n    $width: $size,\n    $height: $size,\n    $query: $query\n  );\n}\n\n///\n/// Computes the appropriate leading inset for a divider based on list type.\n///\n/// @param {String}  $variant-config The list variant configuration.\n/// @param {Boolean} $leading Whether to apply the leading inset.\n/// @param {Boolean} $trailing Whether to apply the trailing inset.\n/// @param {Boolean} $use-padding Whether to align with padding vs. text offset.\n///\n/// @access private\n///\n@mixin deprecated-divider-inset-variant(\n  $variant-config,\n  $leading: true,\n  $trailing: true,\n  $use-padding: false,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n\n  @include deprecated-divider-inset(\n    $leading-padding,\n    $text-offset,\n    $leading,\n    $trailing,\n    $use-padding,\n    $query\n  );\n}\n\n@mixin deprecated-divider-inset(\n  $leading-padding,\n  $text-offset,\n  $leading: true,\n  $trailing: true,\n  $use-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $trailing-inset: if($trailing, variables.$deprecated-trailing-padding, 0);\n  $leading-inset: if(\n    $leading,\n    if($use-padding, $leading-padding, $text-offset),\n    0\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @if $leading {\n      @include rtl.reflexive-box(margin, left, $leading-inset);\n    }\n    width: calc(100% - #{$leading-inset + $trailing-inset});\n  }\n}\n\n///\n/// Sets density scale to single line list variant.\n///\n/// @param {Number} $density-scale Density scale for list. Supported density scales are `-4`, `-3`, `-2`, `-1` and  `0`.\n///\n/// @access public\n///\n@mixin deprecated-single-line-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$deprecated-single-line-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-deprecated-list-item {\n    @include deprecated-single-line-height($height, $query: $query);\n  }\n}\n\n///\n/// Sets height to single line list variant.\n///\n/// @param {Number} $height Height value in `px`.\n///\n/// @access public\n///\n@mixin deprecated-single-line-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n//\n// Private\n//\n\n@mixin deprecated-base_($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  @include deprecated-item-primary-text-ink-color(\n    text-primary-on-background,\n    $query\n  );\n}\n\n@mixin deprecated-item-base_ {\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: flex-start;\n  overflow: hidden;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n// Ripple styles for an interactive list item (one that is enabled and inside an interactive list).\n@mixin deprecated-item-interactive-ripple_($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple.surface(\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n\n  #{variables.$deprecated-ripple-target},\n  #{variables.$deprecated-temporary-ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use './icon-button-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define icon-button\n  .mdc-icon-button {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      position: relative;\n      box-sizing: border-box;\n      border: none;\n      outline: none;\n      background-color: transparent;\n      fill: currentColor;\n      color: inherit;\n      text-decoration: none;\n      cursor: pointer;\n      user-select: none;\n      overflow: visible; // Added to fix IE11 touch target tests.\n    }\n\n    .mdc-icon-button__touch {\n      @include touch-target-mixins.touch-target(\n        $set-width: true,\n        $query: $query\n      );\n    }\n\n    @include if-disabled_ {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: default;\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-icon-button--display-flex {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: inline-flex;\n      justify-content: center;\n    }\n  }\n\n  .mdc-icon-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n    }\n\n    // stylelint-disable-next-line plugin/selector-bem-pattern\n    &.mdc-icon-button__icon--on {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n\n  .mdc-icon-button--touch {\n    @include touch-target-mixins.margin(\n      $component-height: icon-button-theme.$size,\n      $query: $query\n    );\n  }\n\n  .mdc-icon-button--on {\n    .mdc-icon-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n\n      // stylelint-disable-next-line plugin/selector-bem-pattern\n      &.mdc-icon-button__icon--on {\n        @include feature-targeting.targets($feat-structure) {\n          display: inline-block;\n        }\n      }\n    }\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-icon-button {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: icon-button-theme.$icon-size;\n    }\n\n    @include icon-button-theme.density(0, $query: $query);\n\n    @include icon-button-theme.disabled-ink-color(\n      text-disabled-on-light,\n      $query: $query\n    );\n\n    svg,\n    img {\n      @include feature-targeting.targets($feat-structure) {\n        width: icon-button-theme.$icon-size;\n        height: icon-button-theme.$icon-size;\n      }\n    }\n  }\n\n  @include static-styles($query: $query);\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-icon-button {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: icon-button-theme.$ripple-target\n    );\n    @include ripple.radius-unbounded(\n      $query: $query,\n      $ripple-target: icon-button-theme.$ripple-target\n    );\n    @include ripple-theme.states(\n      $query: $query,\n      $ripple-target: icon-button-theme.$ripple-target\n    );\n\n    .mdc-icon-button__ripple {\n      $feat-structure: feature-targeting.create-target($query, structure);\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n        z-index: 1;\n      }\n    }\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use 'sass:list';\n@use 'sass:map';\n@use './variables';\n@use './mixins';\n\n:root {\n  @each $size in map.keys(variables.$columns) {\n    --mdc-layout-grid-margin-#{$size}: #{map.get(\n        variables.$default-margin,\n        $size\n      )};\n    --mdc-layout-grid-gutter-#{$size}: #{map.get(\n        variables.$default-gutter,\n        $size\n      )};\n    --mdc-layout-grid-column-width-#{$size}: #{map.get(\n        variables.$column-width,\n        $size\n      )};\n  }\n}\n\n// postcss-bem-linter: define layout-grid\n.mdc-layout-grid {\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $margin: map.get(variables.$default-margin, $size);\n\n      @include mixins.layout-grid($size, $margin, variables.$max-width);\n    }\n  }\n}\n\n.mdc-layout-grid__inner {\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $margin: map.get(variables.$default-margin, $size);\n      $gutter: map.get(variables.$default-gutter, $size);\n\n      @include mixins.inner($size, $margin, $gutter);\n    }\n  }\n}\n\n.mdc-layout-grid__cell {\n  // select the upper breakpoint\n  $upper-breakpoint: list.nth(map.keys(variables.$columns), 1);\n\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $gutter: map.get(variables.$default-gutter, $size);\n\n      @include mixins.cell($size, variables.$default-column-span, $gutter);\n\n      @for $span from 1 through map.get(variables.$columns, $upper-breakpoint) {\n        // Span classes.\n        // stylelint-disable max-nesting-depth\n        @at-root .mdc-layout-grid__cell--span-#{$span},\n          .mdc-layout-grid__cell--span-#{$span}-#{$size} {\n          @include mixins.cell-span_($size, $span, $gutter);\n        }\n        // stylelint-enable max-nesting-depth\n      }\n    }\n  }\n\n  // Order override classes.\n  @for $i from 1 through map.get(variables.$columns, $upper-breakpoint) {\n    &--order-#{$i} {\n      @include mixins.cell-order($i);\n    }\n  }\n\n  // Alignment classes.\n  &--align-top {\n    @include mixins.cell-align(top);\n  }\n\n  &--align-middle {\n    @include mixins.cell-align(middle);\n  }\n\n  &--align-bottom {\n    @include mixins.cell-align(bottom);\n  }\n}\n\n.mdc-layout-grid--fixed-column-width {\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $margin: map.get(variables.$default-margin, $size);\n      $gutter: map.get(variables.$default-gutter, $size);\n      $column-width: map.get(variables.$column-width, $size);\n\n      @include mixins.fixed-column-width(\n        $size,\n        $margin,\n        $gutter,\n        $column-width\n      );\n    }\n  }\n}\n\n.mdc-layout-grid--align-left {\n  margin-right: auto;\n  margin-left: 0;\n}\n\n.mdc-layout-grid--align-right {\n  margin-right: 0;\n  margin-left: auto;\n}\n// postcss-bem-linter: end\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use './variables';\n\n// returns the lower grid boundary or null if the smallest grid is selected\n@function breakpoint-min($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n  $min: map.get(variables.$breakpoints, $size);\n\n  @return if($min > 0, $min, null);\n}\n\n// returns the upper grid boundary or null if the largest grid is selected\n@function breakpoint-max($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n  $names: map.keys(variables.$columns);\n  $n: list.index($names, $size);\n  $prev: if($n > 1, list.nth($names, $n - 1), null);\n\n  @return if($prev, (breakpoint-min($prev) - 1px), null);\n}\n\n// Private mixins, meant for internal use.\n@mixin media-query_($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $min: breakpoint-min($size);\n  $max: breakpoint-max($size);\n\n  @if $min == null and $max != null {\n    // Phone\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else if $min != null and $max != null {\n    // Tablet\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $min != null and $max == null {\n    // Desktop\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    // Fallback - no breakpoints defined\n    @content;\n  }\n}\n\n@mixin cell-span_($size, $span, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $percent: math.percentage(\n    math.div($span, map.get(variables.$columns, $size))\n  );\n\n  @if $percent > 100% {\n    $percent: 100%;\n  }\n\n  width: calc(#{$percent} - #{$gutter});\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  width: calc(#{$percent} - var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}));\n\n  @supports (display: grid) {\n    width: auto;\n    grid-column-end: span math.min($span, map.get(variables.$columns, $size));\n  }\n}\n\n// Public mixins, meant for developer usage.\n@mixin layout-grid($size, $margin, $max-width: null) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  box-sizing: border-box;\n  margin: 0 auto;\n  padding: $margin;\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  padding: var(--mdc-layout-grid-margin-#{$size}, #{$margin});\n\n  @if $max-width {\n    max-width: $max-width;\n  }\n}\n\n@mixin inner($size, $margin, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  display: flex;\n  flex-flow: row wrap;\n  align-items: stretch;\n  margin: math.div(-$gutter, 2);\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  margin: calc(var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) / 2 * -1);\n\n  @supports (display: grid) {\n    display: grid;\n    margin: 0;\n    grid-gap: $gutter;\n    // stylelint-disable-next-line declaration-block-no-duplicate-properties\n    grid-gap: var(--mdc-layout-grid-gutter-#{$size}, $gutter);\n    grid-template-columns: repeat(\n      map.get(variables.$columns, $size),\n      minmax(0, 1fr)\n    );\n  }\n}\n\n@mixin cell($size, $default-span, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  @include cell-span_($size, $default-span, $gutter);\n\n  box-sizing: border-box;\n  margin: math.div($gutter, 2);\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  margin: calc(var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) / 2);\n\n  @supports (display: grid) {\n    margin: 0;\n  }\n}\n\n@mixin cell-order($order) {\n  order: $order;\n}\n\n@mixin cell-align($position) {\n  @if $position == 'top' {\n    align-self: flex-start;\n\n    @supports (display: grid) {\n      align-self: start;\n    }\n  }\n\n  @if $position == 'middle' {\n    align-self: center;\n  }\n\n  @if $position == 'bottom' {\n    align-self: flex-end;\n\n    @supports (display: grid) {\n      align-self: end;\n    }\n  }\n\n  @if $position == 'stretch' {\n    align-self: stretch;\n  }\n}\n\n@mixin fixed-column-width($size, $margin, $gutter, $column-width) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $columnCount: map.get(variables.$columns, $size);\n  $gutter-number: $columnCount - 1;\n  $margin-number: 2;\n\n  width: $column-width * $columnCount + $gutter * $gutter-number + $margin *\n    $margin-number;\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  width: calc(\n    var(--mdc-layout-grid-column-width-#{$size}, #{$column-width}) * #{$columnCount} +\n      var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) * #{$gutter-number} +\n      var(--mdc-layout-grid-margin-#{$size}, #{$margin}) * #{$margin-number}\n  );\n}\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/density/variables' as density-variables;\n@use '@material/theme/theme-color';\n\n$deprecated-ripple-target: '.mdc-deprecated-list-item__ripple';\n$deprecated-temporary-ripple-target: '.mdc-list-item__ripple';\n\n$deprecated-divider-color-on-light-bg: rgba(0, 0, 0, 0.12) !default;\n$deprecated-divider-color-on-dark-bg: rgba(255, 255, 255, 0.2) !default;\n$deprecated-side-padding: 16px !default;\n$deprecated-trailing-padding: 16px !default;\n$deprecated-text-offset: 72px !default;\n$deprecated-text-disabled-opacity: theme-color.text-emphasis(disabled) !default;\n$deprecated-text-disabled-color: on-surface !default;\n$deprecated-text-selected-color: primary !default;\n\n$deprecated-single-line-height: 48px !default;\n$deprecated-single-line-minimum-height: 24px !default;\n$deprecated-single-line-maximum-height: $deprecated-single-line-height !default;\n$deprecated-single-line-density-scale: density-variables.$default-scale !default;\n$deprecated-single-line-density-config: (\n  height: (\n    default: $deprecated-single-line-height,\n    maximum: $deprecated-single-line-maximum-height,\n    minimum: $deprecated-single-line-minimum-height,\n  ),\n) !default;\n\n$deprecated-item-primary-text-baseline-height: 28px !default;\n$deprecated-item-primary-text-baseline-height-with-graphic: 32px !default;\n$deprecated-item-secondary-text-baseline-height: 20px !default;\n$deprecated-dense-item-primary-text-baseline-height: 24px !default;\n\n$deprecated-two-line-height: 64px !default;\n$deprecated-two-line-graphic-height: 72px !default;\n$deprecated-two-line-icon-top-margin: 16px !default;\n\n// TODO(b/156624966): this is used to support legacy usage of embedded graphics.\n$deprecated-deprecated-graphic-config: (\n  graphic-size: (\n    width: 24px,\n    height: 24px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$deprecated-textual-variant-config: (\n  single-line-height: $deprecated-single-line-height,\n  graphic-size: (\n    width: 24px,\n    height: 24px,\n  ),\n  leading-padding: 16px,\n  text-offset: 16px,\n) !default;\n\n$deprecated-icon-variant-config: (\n  single-line-height: 56px,\n  graphic-size: (\n    width: 24px,\n    height: 24px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$deprecated-avatar-variant-config: (\n  single-line-height: 56px,\n  graphic-size: (\n    width: 40px,\n    height: 40px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$deprecated-thumbnail-variant-config: (\n  single-line-height: 56px,\n  graphic-size: (\n    width: 40px,\n    height: 40px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$deprecated-image-variant-config: (\n  single-line-height: 72px,\n  graphic-size: (\n    width: 56px,\n    height: 56px,\n  ),\n  leading-padding: 16px,\n  text-offset: 88px,\n) !default;\n\n$deprecated-video-variant-config: (\n  single-line-height: 72px,\n  graphic-size: (\n    width: 100px,\n    height: 56px,\n  ),\n  leading-padding: 0px,\n  text-offset: 116px,\n) !default;\n","@use '@material/theme/theme-color';\n@use '@material/density/variables' as density-variables;\n\n$ripple-target: '.mdc-list-item__ripple';\n$divider-color-on-light-bg: rgba(0, 0, 0, 0.12) !default;\n$divider-color-on-dark-bg: rgba(255, 255, 255, 0.2) !default;\n$content-disabled-opacity: theme-color.text-emphasis(disabled) !default;\n$content-disabled-color: on-surface !default;\n$content-selected-color: primary !default;\n$side-padding: 16px !default;\n\n$one-line-item-density-scale: density-variables.$default-scale !default;\n$two-line-item-density-scale: density-variables.$default-scale !default;\n$three-line-item-density-scale: density-variables.$default-scale !default;\n$one-line-item-density-config: (\n  height: (\n    default: 48px,\n    maximum: 48px,\n    minimum: 24px,\n  ),\n) !default;\n$one-line-item-tall-density-config: (\n  height: (\n    default: 56px,\n    maximum: 56px,\n    minimum: 40px,\n  ),\n) !default;\n$one-line-item-taller-density-config: (\n  height: (\n    default: 72px,\n    maximum: 72px,\n    minimum: 56px,\n  ),\n) !default;\n$two-line-item-density-config: (\n  height: (\n    default: 64px,\n    maximum: 64px,\n    minimum: 48px,\n  ),\n) !default;\n$two-line-item-tall-density-config: (\n  height: (\n    default: 72px,\n    maximum: 72px,\n    minimum: 56px,\n  ),\n) !default;\n$three-line-item-density-config: (\n  height: (\n    default: 88px,\n    maximum: 88px,\n    minimum: 56px,\n  ),\n) !default;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/custom-properties';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/rtl/rtl';\n@use './variables';\n@use './menu-surface-custom-properties';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define menu-surface\n  .mdc-menu-surface {\n    @include base_($query);\n    @include elevation-mixins.elevation($z-value: 8, $query: $query);\n    @include fill-color(surface, $query);\n    @include ink-color(on-surface, $query);\n    @include shape-radius(variables.$shape-radius, false, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(transform-origin, top left, top right);\n    }\n  }\n\n  .mdc-menu-surface--anchor {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n      overflow: visible;\n    }\n  }\n\n  .mdc-menu-surface--fixed {\n    @include feature-targeting.targets($feat-structure) {\n      position: fixed;\n    }\n  }\n\n  .mdc-menu-surface--fullwidth {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n    }\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n}\n\n// Used by filled variants of GM components to conditionally flatten the top\n// corners of the menu.\n@mixin flatten-top-when-opened-below($query: feature-targeting.all()) {\n  .mdc-menu-surface--is-open-below {\n    $feat-structure: feature-targeting.create-target($query, structure);\n\n    @include feature-targeting.targets($feat-structure) {\n      border-top-left-radius: 0px;\n      border-top-right-radius: 0px;\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: none;\n    position: absolute;\n    box-sizing: border-box;\n\n    $max-width: custom-properties.create(\n      menu-surface-custom-properties.$max-width,\n      calc(100vw - #{variables.$min-distance-from-edge})\n    );\n    @include theme.property(max-width, $max-width);\n    $max-height: custom-properties.create(\n      menu-surface-custom-properties.$max-height,\n      calc(100vh - #{variables.$min-distance-from-edge})\n    );\n    @include theme.property(max-height, $max-height);\n    margin: 0;\n    padding: 0;\n    transform: scale(1);\n    transform-origin: top left;\n    opacity: 0;\n    overflow: auto;\n    will-change: transform, opacity;\n    z-index: variables.$z-index;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: opacity variables.$fade-in-duration linear,\n      transform variables.$scale-duration\n        animation-variables.$deceleration-curve-timing-function,\n      height 250ms animation-variables.$deceleration-curve-timing-function;\n  }\n\n  &:focus {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &--animating-open {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      transform: scale(0.8);\n      opacity: 0;\n    }\n  }\n\n  // Render this after `--animating-open` to override `opacity` & `transform`\n  // CSS properties.\n  &--open {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n\n  &--animating-closed {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      opacity: 0;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: opacity variables.$fade-out-duration linear;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$fade-in-duration: 0.03s !default;\n$fade-out-duration: 0.075s !default;\n$scale-duration: 0.12s !default;\n$min-distance-from-edge: 32px !default;\n$z-index: 8 !default; // One above mdc-dialog\n$shape-radius: medium !default;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/list/mixins' as list-mixins;\n@use '@material/list/variables' as list-variables;\n@use '@material/ripple/ripple';\n@use '@material/theme/theme';\n@use '@material/theme/custom-properties';\n@use './menu-custom-properties';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation-mixins.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // Customize the menu-surface and contained list to match the mdc-menu styles.\n  .mdc-menu {\n    @include list-mixins.deprecated-item-meta-ink-color(\n      variables.$ink-color,\n      $query\n    );\n    @include list-mixins.deprecated-item-graphic-ink-color(\n      variables.$ink-color,\n      $query\n    );\n    @include min-width(variables.$min-width, $query: $query);\n    // Include mdc-deprecated-list selector to ensure list-inside-menu overrides default list styles\n    .mdc-deprecated-list {\n      @include list-mixins.deprecated-item-primary-text-ink-color(\n        variables.$ink-color,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list,\n    .mdc-list {\n      @include elevation-mixins.overlay-surface-position($query: $query);\n      @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n    }\n\n    .mdc-deprecated-list-divider {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 8px 0;\n      }\n    }\n\n    .mdc-deprecated-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        user-select: none;\n      }\n    }\n\n    .mdc-deprecated-list-item--disabled {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    //stylelint-disable selector-no-qualifying-type\n    a.mdc-deprecated-list-item .mdc-deprecated-list-item__text,\n    a.mdc-deprecated-list-item .mdc-deprecated-list-item__graphic {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n    // stylelint-enable selector-no-qualifying-type\n  }\n\n  // postcss-bem-linter: define menu\n  .mdc-menu__selection-group {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      fill: currentColor;\n    }\n\n    .mdc-deprecated-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          padding,\n          56px,\n          list-variables.$deprecated-side-padding\n        );\n      }\n    }\n\n    // Extra specificity required to override `display` property on `mdc-deprecated-list-item__graphic`.\n    .mdc-menu__selection-group-icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-position(left, 16px);\n\n        display: none;\n        position: absolute;\n        // IE11 requires the icon to be vertically centered due to its absolute positioning\n        top: 50%;\n        transform: translateY(-50%);\n      }\n    }\n  }\n  // postcss-bem-linter: end\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern\n  .mdc-menu-item--selected .mdc-menu__selection-group-icon {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline;\n    }\n  }\n}\n\n@mixin width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @if math.is-unitless($width) {\n      width: $width * variables.$width-base;\n    } @else {\n      width: $width;\n    }\n  }\n}\n\n/// Sets the min-width of the menu.\n/// @param {Number} $min-width - the desired min-width.\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    $min-width-custom-property: custom-properties.create(\n      menu-custom-properties.$min-width,\n      $min-width\n    );\n    @include theme.property(min-width, $min-width-custom-property);\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/functions' as animation-functions;\n@use '@material/button/button-theme';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/typography/typography';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define snackbar\n  .mdc-snackbar {\n    @include z-index(variables.$z-index, $query: $query);\n    @include viewport-margin(variables.$viewport-margin-narrow, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: fixed;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n\n      // Ignore mouse events on the root layout element.\n      pointer-events: none;\n\n      // For some reason, iOS Safari displays a tap highlight on the entire snackbar element.\n      // Mobile Safari only supports `rgba` values for this property; named values like\n      // `transparent` are ignored. From Apple's docs:\n      // > This property obeys the alpha value, if specified.\n      // > If you don’t specify an alpha value, Safari on iOS applies a default alpha value to the color.\n      // > To disable tap highlighting, set the alpha value to 0 (invisible).\n      // > If you set the alpha value to 1.0 (opaque), the element is not visible when tapped.\n      // See https://github.com/ben-eb/postcss-colormin/issues/1\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    }\n  }\n\n  @include fill-color(variables.$fill-color, $query: $query);\n  @include label-ink-color(variables.$label-ink-color, $query: $query);\n  @include min-width(variables.$min-width, $query: $query);\n  @include max-width(variables.$max-width, $query: $query);\n  @include elevation(variables.$elevation, $query: $query);\n  @include shape-radius(variables.$shape-radius, $query: $query);\n\n  .mdc-snackbar--opening,\n  .mdc-snackbar--open,\n  .mdc-snackbar--closing {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n    }\n  }\n\n  .mdc-snackbar--open .mdc-snackbar__label,\n  .mdc-snackbar--open .mdc-snackbar__actions {\n    @include feature-targeting.targets($feat-structure) {\n      visibility: visible;\n    }\n  }\n\n  .mdc-snackbar--leading {\n    @include position-leading($query: $query);\n  }\n\n  .mdc-snackbar--stacked {\n    @include layout-stacked($query: $query);\n  }\n\n  .mdc-snackbar__surface {\n    // 1px border around the snackbar surface for high contrast mode.\n    &::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, 0, variables.$padding);\n\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      box-sizing: border-box;\n      transform: scale(0.8);\n      opacity: 0;\n    }\n\n    .mdc-snackbar--open & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1);\n        opacity: 1;\n        pointer-events: auto; // Allow mouse events on surface element while snackbar is open\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: animation-functions.enter(\n            opacity,\n            variables.$enter-duration\n          ),\n          animation-functions.enter(transform, variables.$enter-duration);\n      }\n    }\n\n    .mdc-snackbar--closing & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1);\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: animation-functions.exit-permanent(\n          opacity,\n          variables.$exit-duration\n        );\n      }\n    }\n  }\n\n  .mdc-snackbar__label {\n    @include typography.typography(variables.$label-type-scale, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, 16px, variables.$padding);\n\n      width: 100%;\n      flex-grow: 1;\n      box-sizing: border-box;\n      margin: 0;\n      visibility: hidden;\n\n      // 14px top/bottom padding needed to make the height 48px.\n      padding-top: 14px;\n      padding-bottom: 14px;\n    }\n  }\n\n  // Used to prevent visual jank when announcing label text to screen readers.\n  // See the `announce()` function in util.js for details.\n  .mdc-snackbar__label::before {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline;\n      content: attr(data-mdc-snackbar-label-text);\n    }\n  }\n\n  .mdc-snackbar__actions {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-shrink: 0;\n      align-items: center;\n      box-sizing: border-box;\n      visibility: hidden;\n    }\n  }\n\n  .mdc-snackbar__action {\n    @include button-theme.ink-color(\n      variables.$action-ink-color,\n      $query: $query\n    );\n    @include ripple-theme.states(variables.$action-ink-color, $query: $query);\n  }\n\n  .mdc-snackbar__dismiss {\n    @include icon-button-theme.ink-color(\n      variables.$dismiss-ink-color,\n      $query: $query\n    );\n  }\n\n  // Two selectors are needed to increase specificity above `.material-icons`.\n  // stylelint-disable-next-line selector-class-pattern\n  .mdc-snackbar__dismiss.mdc-snackbar__dismiss {\n    @include icon-button-theme.size(\n      variables.$dismiss-button-size,\n      $query: $query\n    );\n    @include feature-targeting.targets($feat-structure) {\n      font-size: variables.$dismiss-icon-size;\n    }\n  }\n\n  .mdc-snackbar__action + .mdc-snackbar__dismiss {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, variables.$padding, 0);\n    }\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-snackbar__surface {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin label-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-snackbar__label {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  .mdc-snackbar__surface {\n    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n  }\n}\n\n@mixin min-width(\n  $min-width,\n  $mobile-breakpoint: variables.$mobile-breakpoint,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-snackbar__surface {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: $min-width;\n\n      // The first media query ensures that snackbars are always 100% width on mobile devices, as required by the spec.\n      // The second media query prevents snackbars from being wider than the viewport for large min-width values.\n      @media (max-width: $mobile-breakpoint), (max-width: $min-width) {\n        min-width: 100%;\n      }\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-snackbar__surface {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n@mixin elevation($z-index, $query: feature-targeting.all()) {\n  .mdc-snackbar__surface {\n    @include elevation-mixins.elevation($z-index, $query: $query);\n  }\n}\n\n@mixin viewport-margin($margin, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $margin;\n  }\n}\n\n@mixin z-index($z-index, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    z-index: $z-index;\n  }\n}\n\n@mixin position-leading($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    justify-content: flex-start;\n  }\n}\n\n@mixin layout-stacked($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-snackbar__label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, 16px, 8px);\n      padding-bottom: 12px;\n    }\n  }\n\n  .mdc-snackbar__surface {\n    @include feature-targeting.targets($feat-structure) {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n  }\n\n  .mdc-snackbar__actions {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-end;\n      margin-bottom: variables.$padding;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:color';\n@use '@material/theme/theme-color';\n\n$fill-color: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  80%\n) !default;\n$label-ink-color: rgba(\n  theme-color.prop-value(surface),\n  theme-color.text-emphasis(high)\n) !default;\n$action-ink-color: #bb86fc !default;\n$dismiss-ink-color: rgba(\n  theme-color.prop-value(surface),\n  theme-color.text-emphasis(high)\n) !default;\n\n$label-type-scale: body2 !default;\n$dismiss-icon-size: 18px !default;\n$dismiss-button-size: 36px !default;\n$min-width: 344px !default;\n$max-width: 672px !default;\n$mobile-breakpoint: 480px !default;\n$viewport-margin-narrow: 8px !default;\n$viewport-margin-wide: 24px !default;\n$padding: 8px !default;\n\n$elevation: 6 !default;\n$shape-radius: small !default; // Key from shape.$category-keywords or CSS length value (e.g., 4px)\n$z-index: 8 !default; // One above mdc-dialog\n\n// These variables need to be kept in sync with the values in constants.js.\n$enter-duration: 150ms !default;\n$exit-duration: 75ms !default;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use './functions';\n\n// Public\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define line-ripple\n  .mdc-line-ripple {\n    @include feature-targeting.targets($feat-structure) {\n      &::before,\n      &::after {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        border-bottom-style: solid;\n        content: '';\n      }\n\n      &::before {\n        border-bottom-width: 1px;\n        z-index: 1;\n      }\n\n      &::after {\n        transform: scaleX(0);\n        border-bottom-width: 2px;\n        opacity: 0;\n        z-index: 2;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      &::after {\n        transition: functions.transition-value(transform),\n          functions.transition-value(opacity);\n      }\n    }\n  }\n\n  .mdc-line-ripple--active::after {\n    @include feature-targeting.targets($feat-structure) {\n      transform: scaleX(1);\n      opacity: 1;\n    }\n  }\n\n  .mdc-line-ripple--deactivating::after {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n  }\n}\n\n@mixin active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &::after {\n      @include theme.property(border-bottom-color, $color);\n    }\n  }\n}\n\n@mixin inactive-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &::before {\n      @include theme.property(border-bottom-color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Keep this in sync with constants.numbers.MIN_LEADING_STROKE_EDGE_POSITION\n$min-leading-stroke-edge-position: 12px !default;\n// The gap between the stroke end and floating label\n// Keep this in sync with constants.numbers.NOTCH_GUTTER_SIZE\n$notch-gutter-size: 4px !default;\n$border-width: 1px !default;\n$leading-width: 12px !default;\n$padding: 4px !default;\n// This variable keeps the before/after JS label centered in the notch when the font-size is changed.\n$label-adjust: 14% !default;\n\n/// Label box height when it is floating above for notched upgraded. This value is used to put the label vertically in\n/// the middle when it is notched.\n$label-box-height: 13.5px !default;\n\n/// Label adjust offset applied to floating label when it is notched. Since notch without upgraded has different font\n/// size we add additional offset value.\n$label-adjust-absolute: 2.5px !default;\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// TODO: document why this disable is neccessary\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/animation';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/dom';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use 'helper-text/mixins' as helper-text-mixins;\n@use 'character-counter/mixins' as character-counter-mixins;\n@use 'icon/mixins' as icon-mixins;\n@use 'icon/variables' as icon-variables;\n@use './variables';\n@use '@material/rtl/rtl';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include ripple($query);\n  @include without-ripple($query);\n  @include helper-text-mixins.helper-text-core-styles($query);\n  @include character-counter-mixins.character-counter-core-styles($query);\n  @include icon-mixins.icon-core-styles($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Baseline\n  // postcss-bem-linter: define text-field\n  .mdc-text-field {\n    @include _base($query);\n  }\n\n  .mdc-text-field__input {\n    @include _input($query);\n\n    @include placeholder-selector_ {\n      @include _input-placeholder($query);\n    }\n\n    // Always show placeholder for text fields that has no\n    // label and show only on focused state when label is present.\n    .mdc-text-field--no-label &,\n    .mdc-text-field--focused & {\n      @include placeholder-selector_ {\n        @include _input-placeholder-visible($query);\n      }\n    }\n  }\n\n  .mdc-text-field__affix {\n    @include _affix($query: $query);\n\n    .mdc-text-field--label-floating &,\n    .mdc-text-field--no-label & {\n      @include _affix-visible($query: $query);\n    }\n\n    // Safari only\n    @supports (-webkit-hyphens: none) {\n      .mdc-text-field--outlined & {\n        @include _centered-affix-safari-support($query: $query);\n      }\n    }\n  }\n\n  .mdc-text-field__affix--prefix {\n    @include _prefix($query: $query);\n\n    .mdc-text-field--end-aligned & {\n      @include _prefix-end-aligned($query: $query);\n    }\n  }\n\n  .mdc-text-field__affix--suffix {\n    @include _suffix($query: $query);\n\n    .mdc-text-field--end-aligned & {\n      @include _suffix-end-aligned($query: $query);\n    }\n  }\n\n  // Variants\n\n  .mdc-text-field--filled {\n    @include _filled($query);\n\n    &.mdc-text-field--no-label {\n      @include _filled-no-label($query);\n    }\n  }\n\n  .mdc-text-field--outlined {\n    @include outlined_($query);\n\n    .mdc-notched-outline {\n      @include _outlined-notched-outline($query);\n    }\n  }\n\n  // Other Variations\n\n  .mdc-text-field--textarea {\n    @include textarea_($query);\n\n    .mdc-text-field__input {\n      @include _textarea-input($query);\n    }\n\n    &.mdc-text-field--filled {\n      @include _textarea-filled($query);\n\n      .mdc-text-field__input {\n        @include _textarea-filled-input($query);\n      }\n\n      &.mdc-text-field--no-label {\n        .mdc-text-field__input {\n          @include _textarea-filled-no-label-input($query);\n        }\n      }\n    }\n\n    &.mdc-text-field--outlined {\n      @include _textarea-outlined($query);\n\n      .mdc-text-field__input {\n        @include _textarea-outlined-input($query);\n      }\n\n      .mdc-floating-label {\n        @include _textarea-outlined-floating-label($query);\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        @include _textarea-input-with-internal-counter($query);\n      }\n\n      .mdc-text-field-character-counter {\n        @include _textarea-internal-counter($query);\n      }\n    }\n  }\n\n  // Resizer element does not need to be under mdc-text-field--textarea, that\n  // just adds specificity\n  .mdc-text-field__resizer {\n    @include _textarea-resizer($query);\n\n    .mdc-text-field--filled & {\n      @include _textarea-filled-resizer($query);\n\n      .mdc-text-field__input,\n      .mdc-text-field-character-counter {\n        @include _textarea-filled-resizer-children($query);\n      }\n    }\n\n    .mdc-text-field--outlined & {\n      @include _textarea-outlined-resizer($query);\n\n      .mdc-text-field__input,\n      .mdc-text-field-character-counter {\n        @include _textarea-outlined-resizer-children($query);\n      }\n    }\n  }\n\n  .mdc-text-field--with-leading-icon {\n    @include _padding-horizontal-with-leading-icon($query);\n\n    &.mdc-text-field--filled {\n      @include with-leading-icon_($query);\n    }\n\n    &.mdc-text-field--outlined {\n      @include outlined-with-leading-icon_($query);\n    }\n  }\n\n  .mdc-text-field--with-trailing-icon {\n    @include _padding-horizontal-with-trailing-icon($query);\n\n    &.mdc-text-field--filled {\n      @include _with-trailing-icon($query);\n    }\n\n    &.mdc-text-field--outlined {\n      @include _outlined-with-trailing-icon($query);\n    }\n  }\n\n  .mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n    @include _padding-horizontal-with-both-icons($query);\n\n    &.mdc-text-field--filled {\n      @include _with-leading-and-trailing-icon($query);\n    }\n  }\n\n  // postcss-bem-linter: define text-field-helper-text\n  // stylelint-disable plugin/selector-bem-pattern --\n  // TODO: document why this disable is neccessary\n  .mdc-text-field-helper-line {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      justify-content: space-between;\n      box-sizing: border-box;\n    }\n\n    .mdc-text-field + & {\n      @include feature-targeting.targets($feat-structure) {\n        padding-right: variables.$helper-line-padding;\n        padding-left: variables.$helper-line-padding;\n      }\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n  // postcss-bem-linter: end\n\n  // mdc-form-field tweaks to align text field label correctly\n  // stylelint-disable selector-max-type --\n  // TODO: document why this disable is neccessary\n  .mdc-form-field > .mdc-text-field + label {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-start;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  // States\n  .mdc-text-field--focused {\n    @include focused_($query);\n\n    &.mdc-text-field--outlined {\n      @include _focused-outlined($query);\n\n      &.mdc-text-field--textarea {\n        @include _focused-outlined-textarea($query);\n      }\n    }\n  }\n\n  .mdc-text-field--invalid {\n    @include invalid_($query);\n  }\n\n  .mdc-text-field--disabled {\n    @include disabled_($query);\n\n    &.mdc-text-field--filled {\n      @include _disabled-filled($query);\n    }\n\n    .mdc-text-field__input {\n      @include _disabled-input($query);\n    }\n  }\n\n  .mdc-text-field--end-aligned {\n    @include end-aligned_($query);\n  }\n\n  .mdc-text-field--ltr-text {\n    @include _ltr-text($query);\n\n    &.mdc-text-field--end-aligned {\n      @include _ltr-text-end-aligned($query);\n    }\n  }\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other text field styles. It is recommended that most users use `mdc-text-field-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-text-field--filled {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n  }\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n///\n/// Sets density scale for default text field variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled textfields at which to allow floating labels.\n///\n@mixin density(\n  $density-scale,\n  $minimum-height-for-filled-label: variables.$minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for outlined text field (Excluding outlined text field with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for outlined text field with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for filled textarea.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin filled-textarea-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $textfield-height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n  $no-label-margin-top: density-functions.prop-value(\n    $density-config: variables.$textarea-filled-no-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-top,\n  );\n  $no-label-margin-bottom: density-functions.prop-value(\n    $density-config: variables.$textarea-filled-no-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-bottom,\n  );\n\n  // Textarea mixins require two modifier classes since two are used internally\n  // for styles (textarea and filled). An extra class is added for the public\n  // mixin so that only a single public class is needed for specificity.\n  &.mdc-text-field--filled {\n    .mdc-text-field__resizer {\n      @include feature-targeting.targets($feat-structure) {\n        min-height: $textfield-height;\n      }\n    }\n\n    @if $density-scale >= -1 {\n      $keyframe-suffix: text-field-filled-#{$density-scale};\n      $label-top: density-functions.prop-value(\n        $density-config: variables.$textarea-filled-label-density-config,\n        $density-scale: math.div($density-scale, 2),\n        $property-name: top,\n      );\n\n      // Adjust the floating position and animation/keyframes of the floating\n      // label by the new position of the resting label\n      $label-top-difference: variables.$textarea-outlined-label-top -\n        $label-top;\n\n      // Floating label position\n      @include floating-label-mixins.float-position(\n        variables.$textarea-filled-label-position-y - $label-top-difference,\n        $query: $query\n      );\n\n      // Floating label animation\n      @include floating-label-mixins.shake-animation(\n        $keyframe-suffix,\n        $query: $query\n      );\n      @at-root {\n        @include floating-label-mixins.shake-keyframes(\n          $keyframe-suffix,\n          variables.$textarea-filled-label-position-y - $label-top-difference,\n          0%,\n          $query: $query\n        );\n      }\n\n      // Resting label position\n      .mdc-floating-label {\n        @include feature-targeting.targets($feat-structure) {\n          top: $label-top;\n        }\n      }\n\n      $margin-bottom: density-functions.prop-value(\n        $density-config: variables.$textarea-filled-density-config,\n        $density-scale: $density-scale,\n        $property-name: margin-bottom,\n      );\n\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-bottom: $margin-bottom;\n        }\n      }\n    } @else {\n      // The textarea is too dense to show a floating label\n      .mdc-floating-label {\n        @include feature-targeting.targets($feat-structure) {\n          display: none;\n        }\n      }\n\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: $no-label-margin-top;\n          margin-bottom: $no-label-margin-bottom;\n        }\n      }\n    }\n\n    &.mdc-text-field--no-label {\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: $no-label-margin-top;\n          margin-bottom: $no-label-margin-bottom;\n        }\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        // Space between textarea and internal counter should not be affected\n        @include _textarea-input-with-internal-counter($query);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for outlined textarea.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-textarea-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $keyframe-suffix: text-field-outlined-#{$density-scale};\n  $label-top: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: top,\n  );\n  $textfield-height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n  $margin-top: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-top,\n  );\n  $margin-bottom: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-bottom,\n  );\n\n  // Textarea mixins require two modifier classes since two are used internally\n  // for styles (textarea and outlined). An extra class is added for the public\n  // mixin so that only a single public class is needed for specificity.\n  &.mdc-text-field--outlined {\n    // Adjust the floating position and animation/keyframes of the floating\n    // label by the new position of the resting label\n    $label-top-difference: variables.$textarea-outlined-label-top - $label-top;\n\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      variables.$textarea-outlined-label-position-y - $label-top-difference,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        variables.$textarea-outlined-label-position-y - $label-top-difference,\n        0%,\n        $query: $query\n      );\n    }\n\n    // Resting label position\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        top: $label-top;\n      }\n    }\n\n    .mdc-text-field__resizer {\n      @include feature-targeting.targets($feat-structure) {\n        min-height: $textfield-height;\n      }\n    }\n\n    .mdc-text-field__input {\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: $margin-top;\n        margin-bottom: $margin-bottom;\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        // Space between textarea and internal counter should not be affected\n        @include _textarea-input-with-internal-counter($query);\n      }\n    }\n  }\n}\n\n///\n/// Sets the minimum number of rows for a textarea a textarea may be resized to.\n///\n/// For IE11 this mixin can be used instead of the rows attribute.\n///\n/// @param {Number} $rows - The minimum number of rows for a textarea.\n/// @param {Number} $line-height - The line-height of the textarea.\n///\n@mixin textarea-min-rows(\n  $rows,\n  $line-height: variables.$textarea-line-height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $rows * $line-height;\n    }\n  }\n}\n\n///\n/// Sets height of default text field variant.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled textfields at which to allow floating labels.\n/// @access public\n///\n@mixin height(\n  $height,\n  $minimum-height-for-filled-label: variables.$minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n\n  @if $height < $minimum-height-for-filled-label {\n    @include _filled-no-label($query: $query);\n  }\n}\n\n///\n/// Sets height of outlined text field variant (Excluding outlined text field with leading icon).\n///\n/// @param {Number} $height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n/// @access public\n///\n@mixin outlined-height(\n  $height,\n  $keyframe-suffix: text-field-outlined-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: variables.get-outlined-label-position-y($height);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $positionY,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $positionY,\n      $query: $query\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets height of outlined text field with leading icon variant.\n///\n/// @param {Number} $height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n/// @access public\n///\n@mixin outlined-with-leading-icon-height(\n  $height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // This extra specificity is needed because textfield applies the below mixin\n  // already to two selectors (outlined + with-leading-icon). To override\n  // them with a new label position and animation, another selector is needed.\n  &.mdc-text-field--outlined {\n    @include _outlined-with-leading-icon-floating-label-position-animation(\n      $height,\n      $keyframe-suffix,\n      $query\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n// Mixin that sets the floating label position and animations for a given height.\n// This mixin is separate to allow outlined-with-leading-icon-height() to\n// provide greater specificity over the default mixin that adds styles for\n// outlined with leading icons.\n@mixin _outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $keyframe-suffix: text-field-outlined-with-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $positionY: variables.get-outlined-label-position-y($height);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $positionY,\n    variables.$outlined-with-leading-icon-label-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $positionY,\n      variables.$outlined-with-leading-icon-label-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $positionY,\n      -(variables.$outlined-with-leading-icon-label-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets shape radius of default text field variant.\n///\n/// @param {Number} $radius Shape radius value in `px` or in percentage.\n/// @param {Number} $text-field-height Height of default text field variant. Required only when `$radius` is in\n///     percentage unit and if text field has custom height. Defaults to `variables.$height`.\n/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.\n///\n@mixin shape-radius(\n  $radius,\n  $density-scale: variables.$density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 2 {\n    @error \"mdc-textfield: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  @include shape-mixins.radius(\n    $masked-radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n}\n\n@mixin textarea-shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include notched-outline-mixins.shape-radius(\n    $radius,\n    $rtl-reflexive,\n    $query: $query\n  );\n}\n\n///\n/// Customizes the color of the text entered into an enabled text field.\n/// @param {Color} $color - The desired input text color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the entered text in a disabled text field.\n/// @param {Color} $color - The desired input text color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the placeholder in an enabled text field.\n/// @param {Color} $color - The desired placeholder text color.\n///\n@mixin placeholder-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include placeholder-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the placeholder in a disabled text field.\n/// @param {Color} $color - The desired placeholder text color.\n///\n@mixin disabled-placeholder-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include placeholder-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the background color of the text field or textarea when enabled.\n/// @param {Color} $color - The desired background color.\n///\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the background color of the text field or textarea when disabled.\n/// @param {Color} $color - The desired background color.\n///\n@mixin disabled-fill-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the disabled text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin disabled-bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the hover text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin hover-bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include hover-bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the default line ripple of the text field.\n/// @param {Color} $color - The desired line ripple color.\n///\n@mixin line-ripple-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include line-ripple-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text color of the label in an enabled text field.\n/// @param {Color} $color - The desired label text color.\n///\n@mixin label-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include label-ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text color of the label in a disabled text field.\n/// @param {Color} $color - The desired label text color.\n///\n@mixin disabled-label-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include label-ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the border color of the outlined text field or textarea.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is hovered.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin hover-outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include hover-outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is focused.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin focused-outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include focused-outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is disabled.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin disabled-outline-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the caret color of the text field or textarea.\n/// @param {Color} $color - The desired caret color.\n///\n@mixin caret-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(caret-color, $color);\n    }\n  }\n}\n\n///\n/// Customizes the color of the prefix text for an enabled text field.\n/// @param {Color} $color - The desired prefix text color.\n///\n@mixin prefix-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include _prefix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the prefix text for a disabled text field.\n/// @param {Color} $color - The desired prefix text color.\n///\n@mixin disabled-prefix-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _prefix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the suffix text for an enabled text field.\n/// @param {Color} $color - The desired suffix text color.\n///\n@mixin suffix-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include _suffix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the suffix text for a disabled text field.\n/// @param {Color} $color - The desired suffix text color.\n///\n@mixin disabled-suffix-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _suffix-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets shape radius of outlined text field variant.\n///\n/// @param {Number} $radius Shape radius value in `px` or in percentage.\n/// @param {Number} $text-field-height Height of outlined text field variant. Required only when `$radius` is in\n///     percentage unit and if text field has custom height. Defaults to `variables.$height`.\n/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.\n///\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: variables.$density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n  $top-right-radius: list.nth($unpacked-radius, 2);\n  $top-right-is-custom-prop: custom-properties.is-custom-prop(\n    $top-right-radius\n  );\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-right-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    // The horizontal padding only needs to be overriden from the base padding\n    // if the radius is a custom property, or if the top-left radius is a value\n    // that is large than that default notched outline's leading width.\n    @include _outline-shape-radius-horizontal-padding(\n      $top-left-radius,\n      $top-right-radius,\n      $query: $query\n    );\n\n    + .mdc-text-field-helper-line {\n      @include _outline-shape-radius-horizontal-padding(\n        $top-left-radius,\n        $top-right-radius,\n        $query: $query\n      );\n    }\n\n    // Ensure that leading/trailing icon padding is overriden. Even if the\n    // top left/right isn't a custom property or the leading isn't larger, we\n    // still need to override. The above left/right padding rules have more\n    // specificty than the original leading/trailing icon rules, so we need to\n    // re-apply them.\n    // Additionally, if the top left/right radii _are_ custom properties, we\n    // should use those instead.\n\n    &.mdc-text-field--with-leading-icon {\n      @if ($top-right-is-custom-prop) {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-right-radius,\n          $query: $query\n        );\n\n        @include rtl.rtl {\n          @include _apply-outline-shape-padding(\n            padding-left,\n            $top-right-radius,\n            $query: $query\n          );\n          @include feature-targeting.targets($feat-structure) {\n            @include rtl.ignore-next-line();\n            padding-right: 0;\n          }\n        }\n      } @else {\n        @include _padding-horizontal-with-leading-icon($query);\n      }\n    }\n\n    &.mdc-text-field--with-trailing-icon {\n      @if (\n        $top-left-is-custom-prop or\n          $top-left-radius-px >\n          notched-outline-variables.$leading-width\n      ) {\n        @include _apply-outline-shape-padding(\n          padding-left,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-right: 0;\n        }\n\n        @include rtl.rtl {\n          @include feature-targeting.targets($feat-structure) {\n            @include rtl.ignore-next-line();\n            padding-left: 0;\n          }\n          @include _apply-outline-shape-padding(\n            padding-right,\n            $top-left-radius,\n            $add-label-padding: true,\n            $query: $query\n          );\n        }\n      } @else {\n        @include _padding-horizontal-with-trailing-icon($query);\n      }\n    }\n\n    &.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n      @include _padding-horizontal-with-both-icons($query);\n    }\n  }\n}\n\n@mixin _outline-shape-radius-horizontal-padding(\n  $top-left-radius,\n  $top-right-radius,\n  $query: feature-targeting.all()\n) {\n  @include _apply-outline-shape-padding(\n    padding-left,\n    $top-left-radius,\n    $add-label-padding: true,\n    $query: $query\n  );\n  @include _apply-outline-shape-padding(\n    padding-right,\n    $top-right-radius,\n    $query: $query\n  );\n\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n  $top-right-is-custom-prop: custom-properties.is-custom-prop(\n    $top-right-radius\n  );\n  $top-right-radius-px: $top-right-radius;\n  @if ($top-right-is-custom-prop) {\n    $top-right-radius-px: custom-properties.get-fallback($top-right-radius);\n  }\n\n  @if (\n    (\n        $top-left-is-custom-prop and\n          $top-right-is-custom-prop and not\n          custom-properties.are-equal($top-left-radius, $top-right-radius)\n      ) or\n      $top-left-radius-px !=\n      $top-right-radius-px\n  ) {\n    // Normally base horizontal padding doesn't need RTL, but if the values\n    // are different or they are two different custom properties, they need to\n    // be reversed.\n    @include rtl.rtl {\n      @include _apply-outline-shape-padding(\n        padding-right,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-right-radius,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > variables.$padding-horizontal) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @if ($padding-is-custom-prop) {\n        // Add an alternate GSS tag b/c this was an IE11 fallback and we're\n        // going to add another property with the var() value\n        /* @alternate */\n      }\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      @supports (top: max(0%)) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the calculated\n        // custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{variables.$padding-horizontal}, #{$value});\n      }\n    }\n  }\n}\n\n///\n/// Sets the CSS transition for the floating label's 'float' animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin floating-label-float-transition(\n  $duration-ms,\n  $timing-function: null,\n  $query: feature-targeting.all()\n) {\n  .mdc-floating-label {\n    @include floating-label-mixins.float-transition(\n      $duration-ms,\n      $timing-function,\n      $query: $query\n    );\n  }\n}\n\n// Private mixins\n\n// Base shared styles\n@mixin _base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Shape\n  @include shape-radius(variables.$shape-radius, $query: $query);\n\n  // Colors\n  @include label-color(variables.$label, $query: $query);\n  @include ink-color(variables.$ink-color, $query: $query);\n  @include placeholder-color(variables.$placeholder-ink-color, $query: $query);\n  @include caret-color(primary, $query: $query);\n  @include helper-text-mixins.helper-text-color(\n    variables.$helper-text-color,\n    $query: $query\n  );\n  @include character-counter-mixins.character-counter-color(\n    variables.$helper-text-color,\n    $query: $query\n  );\n  @include icon-mixins.leading-icon-color(\n    variables.$icon-color,\n    $query: $query\n  );\n  @include icon-mixins.trailing-icon-color(\n    variables.$icon-color,\n    $query: $query\n  );\n  @include prefix-color(variables.$affix-color, $query: $query);\n  @include suffix-color(variables.$affix-color, $query: $query);\n\n  // Floating Label\n  @include floating-label_($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    // display and align-items are necessary to make the text field participate\n    // in baseline alignment, even though some variants are 'centered'. Those\n    // variants should use the _baseline-center-aligned() mixin\n    display: inline-flex;\n    align-items: baseline;\n    padding: 0 variables.$padding-horizontal;\n    position: relative;\n    box-sizing: border-box;\n    overflow: hidden;\n    /* @alternate */\n    will-change: opacity, transform, color;\n  }\n}\n\n// This mixin adds styles to visually center the text within the text field.\n// Sibling text will align to the baseline and appear centered next to the\n// text field.\n@mixin _baseline-center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons 'controlling' the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the 'largest'\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n\n    // IE11 does not respect this, and makes the leading icon (if present) the\n    // baseline. This is a gap with IE11 that we have accepted.\n    .mdc-text-field__input {\n      height: 100%;\n    }\n  }\n}\n\n@mixin _padding-horizontal-with-leading-icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, 0, variables.$padding-horizontal);\n  }\n}\n\n@mixin _padding-horizontal-with-trailing-icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, variables.$padding-horizontal, 0);\n  }\n}\n\n@mixin _padding-horizontal-with-both-icons($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    padding-left: 0;\n    @include rtl.ignore-next-line();\n    padding-right: 0;\n  }\n}\n\n@mixin floating-label_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: 50%;\n      transform: translateY(-50%);\n      pointer-events: none;\n    }\n  }\n}\n\n// Filled\n\n@mixin _filled($query: feature-targeting.all()) {\n  // Text Field intentionally omits press ripple, so each state needs to be specified individually.\n  @include ripple-theme.states-base-color(\n    variables.$ink-color,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include ripple-theme.states-hover-opacity(\n    ripple-theme.states-opacity(variables.$ink-color, hover),\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include ripple-theme.states-focus-opacity(\n    ripple-theme.states-opacity(variables.$ink-color, focus),\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n\n  @include height(variables.$height, $query: $query);\n  @include typography.baseline-top(\n    variables.$filled-baseline-top,\n    $query: $query\n  );\n  @include fill-color(variables.$background, $query: $query);\n  @include bottom-line-color(variables.$bottom-line-idle, $query: $query);\n  @include hover-bottom-line-color(\n    variables.$bottom-line-hover,\n    $query: $query\n  );\n  @include line-ripple-color_(primary, $query: $query);\n  @include _filled-floating-label($query);\n}\n\n@mixin _filled-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, variables.$label-offset);\n    }\n  }\n\n  @include floating-label-mixins.float-position(\n    variables.$label-position-y,\n    $query: $query\n  );\n}\n\n// Filled variant with no label. This variant centers the text elements and\n// hides the label and is used with there is explicitly no label provided or\n// when the height of the text field is too small for a label to be allowed.\n@mixin _filled-no-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _baseline-center-aligned($query);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-floating-label {\n      display: none;\n    }\n\n    &::before {\n      // Remove baseline-top strut\n      display: none;\n    }\n  }\n\n  // Safari only\n  @supports (-webkit-hyphens: none) {\n    .mdc-text-field__affix {\n      @include _centered-affix-safari-support($query: $query);\n    }\n  }\n}\n\n// Outlined\n\n@mixin outlined_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include outlined-height(\n    $height: variables.$height,\n    $keyframe-suffix: text-field-outlined,\n    $query: $query\n  );\n  @include _baseline-center-aligned($query: $query);\n  @include outline-color(variables.$outlined-idle-border, $query: $query);\n  @include hover-outline-color(\n    variables.$outlined-hover-border,\n    $query: $query\n  );\n  @include focused-outline-color(primary, $query: $query);\n  @include outline-shape-radius(variables.$shape-radius, $query: $query);\n  @include notched-outline-mixins.notch-offset(\n    notched-outline-variables.$border-width,\n    $query: $query\n  );\n  @include ripple-theme.states-base-color(\n    transparent,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include _outlined-floating-label($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      // TODO(b/154349735): Investigate the neccessity of these styles\n      display: flex;\n      border: none !important; // FF adds unwanted border in HC mode on windows.\n      background-color: transparent;\n    }\n  }\n}\n\n@mixin _outlined-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, notched-outline-variables.$padding);\n    }\n  }\n}\n\n@mixin _outlined-notched-outline($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Force the outline to appear \"above\" the textfield elements, even though\n    // it is absolutely positioned and comes before the input in the DOM. This\n    // is primarily for the textarea scrollbar and resize elements, which may\n    // clip with with outline border.\n    z-index: 1;\n  }\n}\n\n// States\n\n@mixin disabled_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ink-color_(variables.$disabled-ink-color, $query: $query);\n  @include placeholder-color_(\n    variables.$disabled-placeholder-ink-color,\n    $query: $query\n  );\n  @include label-ink-color_(variables.$disabled-label-color, $query: $query);\n  @include helper-text-mixins.helper-text-color_(\n    variables.$disabled-helper-text-color,\n    $query: $query\n  );\n  @include character-counter-mixins.character-counter-color_(\n    variables.$disabled-helper-text-color,\n    $query: $query\n  );\n  @include icon-mixins.leading-icon-color_(\n    variables.$disabled-icon,\n    $query: $query\n  );\n  @include icon-mixins.trailing-icon-color_(\n    variables.$disabled-icon,\n    $query: $query\n  );\n  @include _prefix-color(variables.$disabled-affix-color, $query: $query);\n  @include _suffix-color(variables.$disabled-affix-color, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include bottom-line-color_(variables.$disabled-border, $query: $query);\n  @include notched-outline-mixins.color(\n    variables.$outlined-disabled-border,\n    $query: $query\n  );\n\n  @include dom.forced-colors-mode {\n    @include placeholder-color_(GrayText, $query: $query);\n    @include label-ink-color_(GrayText, $query: $query);\n    @include helper-text-mixins.helper-text-color_(GrayText, $query: $query);\n    @include character-counter-mixins.character-counter-color_(\n      GrayText,\n      $query: $query\n    );\n    @include icon-mixins.leading-icon-color_(GrayText, $query: $query);\n    @include icon-mixins.trailing-icon-color_(GrayText, $query: $query);\n    @include _prefix-color(GrayText, $query: $query);\n    @include _suffix-color(GrayText, $query: $query);\n\n    // Mixins that are ok to include since they target variant-specific elements\n    @include bottom-line-color_(GrayText, $query: $query);\n    @include notched-outline-mixins.color(GrayText, $query: $query);\n  }\n\n  @include dom.forced-colors-mode($exclude-ie11: true) {\n    .mdc-text-field__input {\n      @include feature-targeting.targets($feat-structure) {\n        background-color: Window;\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        z-index: 1;\n      }\n    }\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    pointer-events: none;\n  }\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n    }\n  }\n}\n\n@mixin _disabled-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // disabled inputs should still allow users to interact with them to select\n    // text and scroll for textareas\n    pointer-events: auto;\n  }\n}\n\n@mixin _disabled-filled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include fill-color_(variables.$disabled-background, $query: $query);\n\n  #{variables.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      // prevent ripple from displaying on hover when some interactible\n      // elements like input and resize handles are hovered\n      display: none;\n    }\n  }\n}\n\n@mixin invalid_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include hover-bottom-line-color(variables.$error, $query: $query);\n  @include line-ripple-color(variables.$error, $query: $query);\n  @include label-color(variables.$error, $query: $query);\n  @include helper-text-mixins.helper-text-validation-color(\n    variables.$error,\n    $query: $query\n  );\n  @include caret-color(variables.$error, $query: $query);\n  @include icon-mixins.trailing-icon-color(variables.$error, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include bottom-line-color(variables.$error, $query: $query);\n  @include outline-color(variables.$error, $query: $query);\n  @include hover-outline-color(variables.$error, $query: $query);\n  @include focused-outline-color(variables.$error, $query: $query);\n\n  + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin focused_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include label-color(variables.$focused-label-color, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include notched-outline-mixins.stroke-width(\n    variables.$outlined-stroke-width,\n    $query: $query\n  );\n\n  + .mdc-text-field-helper-line\n    .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg) {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin _focused-outlined($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(\n    variables.$outlined-stroke-width,\n    $query: $query\n  );\n}\n\n@mixin _focused-outlined-textarea($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(0, $query: $query);\n}\n\n// Icons\n\n@mixin with-leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-padding: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($icon-padding, $query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-padding);\n    }\n  }\n\n  $truncation: $icon-padding + variables.$padding-horizontal;\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin _with-trailing-icon($query: feature-targeting.all()) {\n  $truncation: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right +\n    variables.$label-offset;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($truncation, $query: $query);\n  }\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin _with-leading-and-trailing-icon($query: feature-targeting.all()) {\n  $leading-icon: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n  $trailing-icon: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right;\n  $truncation: $leading-icon + $trailing-icon;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($truncation, $query: $query);\n  }\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin outlined-with-leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Resting label position\n  $icon-padding: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n  $left-spacing: $icon-padding - notched-outline-variables.$leading-width;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $left-spacing);\n    }\n  }\n\n  // Notch width\n  $notch-truncation: $icon-padding + notched-outline-variables.$leading-width;\n  @include _truncate-notched-outline-max-width(\n    $notch-truncation,\n    $query: $query\n  );\n\n  // Floating label position and animation\n  @include _outlined-with-leading-icon-floating-label-position-animation(\n    $height: variables.$height,\n    $keyframe-suffix: text-field-outlined-leading-icon,\n    $query: $query\n  );\n}\n\n///\n/// Applied to the outlined text field with a trailing icon\n///\n@mixin _outlined-with-trailing-icon($query: feature-targeting.all()) {\n  // Resting label position\n  $icon-padding: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right;\n  // Notch width\n  $notch-truncation: $icon-padding + notched-outline-variables.$leading-width;\n\n  @include _truncate-notched-outline-max-width(\n    $notch-truncation,\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the notched outline by the given amount\n///\n/// @param {Number} $truncation - Amount to truncate the notched outline max-width\n///\n@mixin _truncate-notched-outline-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  @include notched-outline-mixins.notch-max-width(\n    calc(100% - #{$truncation}),\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the floating label by the given amount\n///\n/// @param {Number} $truncation - Amount to truncate the floating label max-width\n///\n@mixin _truncate-floating-label-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  @include floating-label-mixins.max-width(\n    calc(100% - #{$truncation}),\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the floating label by the given amount while scaling by the given scale value\n///\n/// @param {Number} $truncation - Amount to truncate the floating label max-width\n///\n@mixin _truncate-floating-label-floated-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  $scale: floating-label-variables.$float-scale;\n  @include floating-label-mixins.max-width(\n    calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n    $query: $query\n  );\n}\n\n// Textarea\n\n@mixin textarea_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include _textarea-floating-label($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex-direction: column;\n    align-items: center;\n    width: auto;\n    height: auto;\n    padding: 0; // see below for explanation\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: none;\n  }\n}\n\n@mixin _textarea-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-self: stretch;\n    display: inline-flex;\n    flex-direction: column;\n    flex-grow: 1;\n    max-height: 100%;\n    max-width: 100%;\n    min-height: variables.$height;\n    // stylelint-disable declaration-block-no-duplicate-properties --\n    // TODO: document why this disable is neccessary\n\n    // 'stretch' is the preferred rule here. It will allow the textarea to grow\n    // to the min/max width of the container, but if an explicit width is set,\n    // it cannot be resized horizontally.\n    // Stretch is still a working draft. Chrome and Firefox have it implemented\n    // with 'available' prefixes. fit-content is another good target for\n    // Safari since it works in almost all use cases except when an explicit\n    // width is set (the user can make the textarea smaller than the container).\n    // None of this matters for IE11, which doesn't support resize.\n    min-width: fit-content;\n    /* @alternate */\n    min-width: -moz-available;\n    /* @alternate */\n    min-width: -webkit-fill-available;\n    // stylelint-enable declaration-block-no-duplicate-properties\n    overflow: hidden;\n    resize: both;\n  }\n}\n\n@mixin _textarea-filled-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Shift the resizer element up by a margin amount to make space for the\n  // resize handle. For filled elements, the resize handle directly touches\n  // the bottom line and is hard to see.\n  // Using a margin affects the width and positioning of the overall component\n  // and underlying textarea, which is why a transform is used instead.\n  $y: -1 * variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateY($y);\n  }\n}\n\n@mixin _textarea-filled-resizer-children($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // See above. After shifting the resize wrapper element, all of its children\n  // should be shifted in the opposite direction (down) to compensate.\n  $y: variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateY($y);\n  }\n}\n\n@mixin _textarea-outlined-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Shift the resizer element left/up by a margin amount to make space for the\n  // resize handle. For outlined elements, the resize handle directly touches\n  // the outline and is hard to see.\n  // Using a margin affects the width and positioning of the overall component\n  // and underlying textarea, which is why a transform is used instead.\n  $x: -1 * variables.$textarea-input-handle-margin;\n  $y: -1 * variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    transform: translateX($x) translateY($y);\n\n    @include rtl.rtl {\n      // Flip the horizontal shifting direction for RTL\n      @include rtl.ignore-next-line();\n      transform: translateX(-1 * $x) translateY($y);\n    }\n  }\n}\n\n@mixin _textarea-outlined-resizer-children($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // See above. After shifting the resize wrapper element, all of its children\n  // should be shifted in the opposite direction (right and down) to compensate.\n  $x: variables.$textarea-input-handle-margin;\n  $y: variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    transform: translateX($x) translateY($y);\n\n    @include rtl.rtl {\n      // Flip the horizontal shifting direction for RTL\n      @include rtl.ignore-next-line();\n      transform: translateX(-1 * $x) translateY($y);\n    }\n  }\n}\n\n@mixin _textarea-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: variables.$textarea-label-top;\n    }\n\n    // Resets center aligning the floating label.\n    &:not(.mdc-floating-label--float-above) {\n      @include feature-targeting.targets($feat-structure) {\n        transform: none;\n      }\n    }\n  }\n}\n\n@mixin _textarea-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex-grow: 1;\n    height: auto;\n    min-height: variables.$textarea-line-height;\n    overflow-x: hidden; // https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    overflow-y: auto;\n    box-sizing: border-box;\n    resize: none;\n    // Textarea has horizontal padding instead of the container. This allows the\n    // resize handle to extend to the edge of the container.\n    padding: 0 variables.$padding-horizontal;\n  }\n\n  @include feature-targeting.targets($feat-typography) {\n    line-height: variables.$textarea-line-height;\n  }\n}\n\n@mixin _textarea-internal-counter($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include typography.baseline-bottom(\n    variables.$textarea-internal-counter-baseline-bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    align-self: flex-end;\n    // Needed since padding is on the textarea and not the container\n    padding: 0 variables.$padding-horizontal;\n\n    &::before {\n      // Remove baseline-top\n      display: none;\n    }\n  }\n}\n\n@mixin _textarea-input-with-internal-counter($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-bottom: variables.$textarea-internal-counter-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-filled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    &::before {\n      // <textarea> does not align to baseline when it does not have a value,\n      // unlike <input>, so we have to use padding to fake it instead\n      display: none;\n    }\n  }\n\n  // Floating label position\n  @include floating-label-mixins.float-position(\n    variables.$textarea-filled-label-position-y,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    textarea-filled,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      textarea-filled,\n      variables.$textarea-filled-label-position-y,\n      0%,\n      $query: $query\n    );\n  }\n}\n\n@mixin _textarea-filled-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-filled-input-margin-top;\n    margin-bottom: variables.$textarea-filled-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-filled-no-label-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-filled-no-label-input-margin-top;\n    margin-bottom: variables.$textarea-filled-no-label-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-outlined($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(0, $query: $query);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    variables.$textarea-outlined-label-position-y,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    textarea-outlined,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      textarea-outlined,\n      variables.$textarea-outlined-label-position-y,\n      0%,\n      $query: $query\n    );\n  }\n}\n\n@mixin _textarea-outlined-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    top: variables.$textarea-outlined-label-top;\n  }\n}\n\n@mixin _textarea-outlined-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-outlined-input-margin-top;\n    margin-bottom: variables.$textarea-outlined-input-margin-bottom;\n  }\n}\n\n// Text, Prefix and Suffix\n\n// Common styles for the text of the text field, including the prefix, suffix,\n// and input.\n@mixin _text($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Exclude setting line-height to keep caret (text cursor) same height as the input text in iOS browser.\n  @include typography.typography(\n    subtitle1,\n    $exclude-props: (line-height),\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    height: variables.$input-height;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation.standard(opacity, 150ms);\n  }\n}\n\n@mixin _input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _text($query: $query);\n  @include feature-targeting.targets($feat-structure) {\n    width: 100%;\n    min-width: 0; // Fixes flex issues on Firefox\n    border: none;\n    border-radius: 0;\n    background: none;\n    appearance: none;\n    padding: 0;\n\n    // Remove built-in trailing clear icon on IE11. IE vendor prefixes cannot\n    // be combined with other vendor prefixes like the webkit one below.\n    &::-ms-clear {\n      display: none;\n    }\n\n    // Remove built-in datepicker icon on Chrome\n    &::-webkit-calendar-picker-indicator {\n      display: none;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    // Remove red outline on firefox\n    &:invalid {\n      box-shadow: none;\n    }\n  }\n}\n\n@mixin _input-placeholder($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation.standard(opacity, 67ms);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 0;\n  }\n}\n\n@mixin _input-placeholder-visible($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition-delay: 40ms;\n    transition-duration: 110ms;\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin _affix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _text($query: $query);\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 0;\n    white-space: nowrap;\n  }\n}\n\n// TODO(b/155467610): Remove when Safari supports baseline alignment\n// https://github.com/material-components/material-components-web/issues/5879\n@mixin _centered-affix-safari-support($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-items: center;\n    align-self: center;\n    display: inline-flex;\n    height: 100%;\n  }\n}\n\n@mixin _affix-visible($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin _prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(padding, right, variables.$prefix-padding);\n  }\n}\n\n@mixin _prefix-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(\n      padding,\n      right,\n      variables.$prefix-end-aligned-padding\n    );\n  }\n}\n\n@mixin _suffix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(padding, left, variables.$suffix-padding);\n  }\n}\n\n@mixin _suffix-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(\n      padding,\n      left,\n      variables.$suffix-end-aligned-padding\n    );\n  }\n}\n\n// End aligned\n@mixin end-aligned_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      // IE11 does not support text-align: end\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n}\n\n// Forces input, prefix, and suffix to be LTR when in an RTL environment. Other\n// elements such as labels and icons will remain RTL.\n@mixin _ltr-text($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.rtl {\n      .mdc-text-field__input,\n      .mdc-text-field__affix {\n        @include rtl.ignore-next-line();\n        direction: ltr;\n      }\n\n      .mdc-text-field__affix--prefix {\n        @include rtl.ignore-next-line();\n        padding-left: 0;\n        @include rtl.ignore-next-line();\n        padding-right: variables.$prefix-padding;\n      }\n\n      .mdc-text-field__affix--suffix {\n        @include rtl.ignore-next-line();\n        padding-left: variables.$suffix-padding;\n        @include rtl.ignore-next-line();\n        padding-right: 0;\n      }\n\n      // Need to specify an order for all elements since icons maintain their\n      // original positions. We can't just reverse the container.\n      .mdc-text-field__icon--leading {\n        order: 1;\n      }\n\n      .mdc-text-field__affix--suffix {\n        order: 2;\n      }\n\n      .mdc-text-field__input {\n        order: 3;\n      }\n\n      .mdc-text-field__affix--prefix {\n        order: 4;\n      }\n\n      .mdc-text-field__icon--trailing {\n        order: 5;\n      }\n    }\n  }\n}\n\n// Forces input, prefix, and suffix that are already forced to LTR to also be\n// end-aligned. This mixin should be used alongside the styles provided in\n// _ltr-text().\n@mixin _ltr-text-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.rtl {\n      .mdc-text-field__input {\n        // IE11 does not support text-align: end, so we need to duplicate\n        // the LTR end-aligned style here.\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n\n      .mdc-text-field__affix--prefix {\n        // padding-left: 0 provided by _ltr-text mixin\n        @include rtl.ignore-next-line();\n        padding-right: variables.$prefix-end-aligned-padding;\n      }\n\n      .mdc-text-field__affix--suffix {\n        @include rtl.ignore-next-line();\n        padding-left: variables.$suffix-end-aligned-padding;\n        // padding-right: 0 provided by _ltr-text mixin\n      }\n    }\n  }\n}\n\n// Customization\n\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin placeholder-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__input {\n      @include placeholder-selector_ {\n        @include theme.prop(color, $color);\n      }\n    }\n  }\n}\n\n@mixin fill-color_(\n  $color,\n  $query: feature-targeting.all(),\n  $addAlternate: false\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if ($addAlternate) {\n      /* @alternate */\n    }\n    @include theme.prop(background-color, $color);\n  }\n}\n\n@mixin bottom-line-color_($color, $query: feature-targeting.all()) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.inactive-color($color, $query: $query);\n  }\n}\n\n@mixin hover-bottom-line-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &:hover .mdc-line-ripple {\n    @include line-ripple-mixins.inactive-color($color, $query: $query);\n  }\n}\n\n@mixin line-ripple-color_($color, $query: feature-targeting.all()) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.active-color($color, $query: $query);\n  }\n}\n\n@mixin hover-outline-color_($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--focused):hover {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin focused-outline-color_($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--focused {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin label-ink-color_($color, $query: feature-targeting.all()) {\n  .mdc-floating-label {\n    @include floating-label-mixins.ink-color($color, $query: $query);\n  }\n}\n\n@mixin _prefix-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__affix--prefix {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin _suffix-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__affix--suffix {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n// Selectors\n\n@mixin placeholder-selector_ {\n  // GSS will combine selectors with the same content, and some browsers have a\n  // CSS quirk where it drops a rule if it does not recognize one of the\n  // selectors.\n  // To avoid GSS combining the ::placeholder and :-ms-input-placeholder\n  // selectors, we wrap them in `@media all`.\n  // TODO(b/142329051)\n  @media all {\n    // ::placeholder needs to be wrapped because IE11 will drop other selectors\n    // with the same content\n    &::placeholder {\n      @content;\n    }\n  }\n\n  @media all {\n    // :-ms-input-placeholder needs to be wrapped because Firefox will drop\n    // other selectors with the same content\n    &:-ms-input-placeholder {\n      @content;\n    }\n  }\n}\n\n// State qualifiers\n\n///\n/// Helps style the text-field only when it's enabled.\n/// @access private\n///\n@mixin if-enabled_ {\n  &:not(.mdc-text-field--disabled) {\n    @content;\n  }\n}\n\n///\n/// Helps style the text-field only when it's disabled.\n/// @access private\n///\n@mixin if-disabled_ {\n  &.mdc-text-field--disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/animation/animation';\n@use '@material/animation/variables';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n\n// Public mixins\n\n@mixin helper-text-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define text-field-helper-text\n\n  .mdc-text-field-helper-text {\n    @include typography.typography(caption, $query: $query);\n    @include typography.text-baseline($top: 16px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 0;\n      opacity: 0;\n      will-change: opacity;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation.standard(opacity, 150ms);\n    }\n  }\n\n  .mdc-text-field-helper-text--persistent {\n    @include feature-targeting.targets($feat-animation) {\n      transition: none;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n      will-change: initial;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n///\n/// Customizes the color of the helper text following an enabled text-field.\n/// @param {Color} $color - The desired helper text color.\n///\n@mixin helper-text-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include helper-text-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color of the helper text following a disabled text-field.\n/// @param {Color} $color - The desired helper text color.\n///\n@mixin disabled-helper-text-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include helper-text-color_($color, $query);\n  }\n}\n\n@mixin helper-text-validation-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include helper-text-validation-color_($color, $query);\n  }\n}\n\n// Private mixins\n\n@mixin helper-text-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin helper-text-validation-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-text-field--invalid\n    + .mdc-text-field-helper-line\n    .mdc-text-field-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/theme/theme';\n@use '@material/rtl/rtl';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n\n// Public mixins\n\n@mixin character-counter-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define text-field-character-counter\n\n  .mdc-text-field-character-counter {\n    @include typography.typography(caption, $query: $query);\n    @include typography.text-baseline($top: 16px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      // Keep flex item align to trailing side on absence of helper text.\n      @include rtl.reflexive-box(margin, left, auto);\n      @include rtl.reflexive-box(padding, left, 16px);\n\n      white-space: nowrap;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n///\n/// Customizes the color of the character counter associated with an enabled text field.\n/// @param {Color} $color - The desired character counter color.\n///\n@mixin character-counter-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include character-counter-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color of the character counter associated with a disabled text field.\n/// @param {Color} $color - The desired character counter color.\n///\n@mixin disabled-character-counter-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  &.mdc-text-field--disabled {\n    @include character-counter-color_($color, $query);\n  }\n}\n\n@mixin character-counter-position(\n  $xOffset,\n  $yOffset,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field-character-counter {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(right, $xOffset);\n      position: absolute;\n      bottom: $yOffset;\n    }\n  }\n}\n\n// Private mixins\n\n@mixin character-counter-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Character counter is placed inside mdc-textfield element (for textarea variant) or\n  // inside helper line which is sibling to mdc-textfield.\n  .mdc-text-field-character-counter,\n  + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n\n// Public mixins\n\n@mixin icon-core-styles($query: feature-targeting.all()) {\n  .mdc-text-field__icon {\n    @include icon_($query: $query);\n\n    svg {\n      @include _icon-svg($query: $query);\n    }\n  }\n\n  .mdc-text-field__icon--leading {\n    @include leading-icon_($query: $query);\n  }\n\n  .mdc-text-field__icon--trailing {\n    @include trailing-icon_($query: $query);\n  }\n}\n\n///\n/// Customizes the color for the leading icon in an enabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin leading-icon-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include leading-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the trailing icon in an enabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin trailing-icon-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include trailing-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the leading/trailing icons in a disabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin disabled-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include leading-icon-color_($color, $query);\n    @include trailing-icon-color_($color, $query);\n  }\n}\n\n/// Sets the size of the leading and trailing icons.\n///\n/// @param {Number} $size - the size of the icon in px\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-text-field__icon {\n      font-size: $size;\n    }\n  }\n}\n\n// Private mixins\n\n@mixin icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-self: center;\n    cursor: pointer;\n  }\n\n  &:not([tabindex]),\n  &[tabindex='-1'] {\n    @include feature-targeting.targets($feat-color) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin _icon-svg($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // SVG children can cause misalignment when displayed as inline since\n    // line-height will be inherited and cause additional vertical space.\n    // Setting the display to block prevents this.\n    display: block;\n  }\n}\n\n@mixin leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(\n      margin,\n      variables.$leading-icon-padding-left,\n      variables.$leading-icon-padding-right\n    );\n  }\n}\n\n@mixin trailing-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    $padding: math.div(variables.$touch-target-size - variables.$icon-size, 2);\n    $left-margin: variables.$trailing-icon-padding-left - $padding;\n    $right-margin: variables.$trailing-icon-padding-right - $padding;\n\n    padding: $padding;\n    @include rtl.reflexive-property(margin, $left-margin, $right-margin);\n  }\n}\n\n@mixin leading-icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__icon--leading {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin trailing-icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__icon--trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:color';\n@use '@material/density/variables' as density-variables;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/theme/theme-color';\n\n///\n/// Returns outlined text field floating label position for given height.\n///\n/// @todo Instead of adjusting `$positionY` with label box height that might change based on floating label font size\n///     wrap label in a child element to apply `transitionY(-50%)` to automatically offset based on box height.\n///\n@function get-outlined-label-position-y($text-field-height) {\n  @return math.div($text-field-height, 2) +\n    math.div(notched-outline-variables.$label-box-height, 2);\n}\n\n$error: error !default;\n$disabled-border: rgba(theme-color.prop-value(on-surface), 0.06) !default;\n$disabled-icon: rgba(theme-color.prop-value(on-surface), 0.3) !default;\n$bottom-line-hover: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$bottom-line-idle: rgba(theme-color.prop-value(on-surface), 0.42) !default;\n$label: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$ink-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$helper-text-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$icon-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$focused-label-color: rgba(theme-color.prop-value(primary), 0.87) !default;\n$placeholder-ink-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$affix-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$disabled-label-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-ink-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-placeholder-ink-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-helper-text-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-affix-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$background: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  4%\n) !default;\n$disabled-background: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  2%\n) !default;\n$secondary-text: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$outlined-idle-border: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$outlined-disabled-border: rgba(\n  theme-color.prop-value(on-surface),\n  0.06\n) !default;\n$outlined-hover-border: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$textarea-border: rgba(theme-color.prop-value(on-surface), 0.73) !default;\n$textarea-background: rgba(theme-color.prop-value(surface), 1) !default;\n$textarea-disabled-border-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.26\n) !default;\n// cannot be transparent because multiline textarea input\n// will make text unreadable\n$textarea-disabled-background: rgba(249, 249, 249, 1) !default;\n\n$ripple-target: '.mdc-text-field__ripple';\n$outlined-stroke-width: 2px !default;\n$height: 56px !default;\n$minimum-height: 40px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$padding-horizontal: 16px !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n$shape-radius: small !default;\n$label-position-y: floating-label-variables.$position-y !default;\n$label-offset: 16px !default;\n// TODO(b/154350788): Remove this variable, it's not used internally but it is\n// externally in Angular\n/// @deprecated this variable will be removed in the future.\n/// Use get-outlined-label-position-y($height) instead\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n$textarea-outlined-label-position-y: 24.75px !default; // visually ~4dp from top to baseline\n$textarea-filled-label-position-y: 10.25px !default; // visually ~20dp from top to label baseline\n$helper-line-padding: 16px !default;\n$filled-baseline-top: 40px !default;\n$input-height: 28px !default;\n$textarea-label-top: 19px !default; // visually ~32dp from top to label baseline\n$textarea-outlined-label-top: $textarea-label-top -\n  notched-outline-variables.$border-width !default;\n$textarea-line-height: 1.5rem !default; // 24dp from baseline to baseline\n$textarea-input-handle-margin: 1px !default;\n// Outlined textarea's first line should be placed at the same position as\n// outlined textfield, and should look identical if it is 1 row. Since textfield\n// is centered and font metrics vary for where the baseline is, the best way to\n// ensure textarea and textfield align is with padding. At 56px height with a\n// 24px line-height, a centered textfield has 16px of top and bottom padding.\n// Textarea should use this to position itself.\n$textarea-outlined-input-margin-top: 16px !default;\n$textarea-outlined-input-margin-bottom: 16px !default;\n$textarea-outlined-density-config: (\n  margin-top: (\n    default: $textarea-outlined-input-margin-top,\n    maximum: $textarea-outlined-input-margin-top,\n    minimum: $textarea-outlined-input-margin-top - 8,\n  ),\n  margin-bottom: (\n    default: $textarea-outlined-input-margin-bottom,\n    maximum: $textarea-outlined-input-margin-bottom,\n    minimum: $textarea-outlined-input-margin-bottom - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-outlined-label-density-config: (\n  top: (\n    default: $textarea-outlined-label-top,\n    maximum: $textarea-outlined-label-top,\n    minimum: $textarea-outlined-label-top - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-filled-input-margin-top: 23px !default; // visually ~40dp from top to baseline\n$textarea-filled-input-margin-bottom: 9px !default; // visually ~16dp from baseline to bottom\n$textarea-filled-density-config: (\n  margin-bottom: (\n    default: $textarea-filled-input-margin-bottom,\n    maximum: $textarea-filled-input-margin-bottom,\n    minimum: $textarea-filled-input-margin-bottom - 4,\n  ),\n) !default; // scale to -1 for minimum\n$textarea-filled-label-density-config: (\n  top: (\n    default: $textarea-label-top,\n    maximum: $textarea-label-top,\n    minimum: $textarea-label-top - 2,\n  ),\n) !default; // remove 1/2 of scale to -1 for minimm\n$textarea-filled-no-label-input-margin-top: 16px !default; // see above explanation for outlined textarea margin\n$textarea-filled-no-label-input-margin-bottom: 16px !default; // see above explanation for outlined textarea margin\n$textarea-filled-no-label-density-config: (\n  margin-top: (\n    default: $textarea-filled-no-label-input-margin-top,\n    maximum: $textarea-filled-no-label-input-margin-top,\n    minimum: $textarea-filled-no-label-input-margin-top - 8,\n  ),\n  margin-bottom: (\n    default: $textarea-filled-no-label-input-margin-bottom,\n    maximum: $textarea-filled-no-label-input-margin-bottom,\n    minimum: $textarea-filled-no-label-input-margin-bottom - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-internal-counter-input-margin-bottom: 2px !default; // visually ~20dp from baseline to counter baseline\n$textarea-internal-counter-baseline-bottom: 16px !default;\n// Note that the scale factor is an eyeballed approximation of what's shown in the mocks.\n\n$prefix-padding: 2px !default;\n$prefix-end-aligned-padding: 12px !default;\n$suffix-padding: 12px !default;\n$suffix-end-aligned-padding: 2px !default;\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// Internal styling for Tooltip MDC component.\n\n@use '@material/animation/functions' as animation-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/custom-properties';\n@use '@material/theme/css';\n@use '@material/theme/theme-color';\n\n$background-color: rgba(black, theme-color.text-emphasis(medium));\n$border-radius: small;\n$label-color: text-primary-on-dark;\n\n$enter-duration: 150ms;\n$exit-duration: 75ms;\n\n// Rich Tooltip variables\n$rich-background-color: theme-color.prop-value(surface);\n$rich-title-text-color: text-primary-on-light;\n$rich-content-text-color: rgba(black, theme-color.text-emphasis(medium));\n$rich-content-link-color: primary;\n\n// Use a custom property so IE11 does not use \"normal\" and instead uses provided\n// fall-back value.\n$word-break-custom-prop: custom-properties.create(\n  --mdc-tooltip-word-break,\n  normal\n);\n$word-break-default: custom-properties.create-var($word-break-custom-prop);\n$word-break-ie11-fallback: break-all;\n$z-index: 9;\n\n// Sets the border-radius for the tooltip element.\n// @param {Number | String} $radius Desired border radius value, accepts either\n//   a shape category or number value. $radius can be a singel value, or a\n//   list of up to 4 values.\n// @param {Boolean} $rtl-reflexive [false] If a rule should be created for a\n//    flipped $radius for a RTL layout.\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  .mdc-tooltip__surface {\n    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n  }\n\n  .mdc-tooltip__caret-surface-top,\n  .mdc-tooltip__caret-surface-bottom {\n    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n  }\n}\n\n// Sets the word-break property for the tooltip label. Users of IE11 can\n// overwrite the fallback if their tooltip labels will never contain long\n// strings without spaces or hyphens.\n// @param {String} $value\n// @param {String} $fallbackValue A fallback value to be set for word-break.\n//    This can be used to cover IE11 which does not support\n//    \"overflow-wrap: anywhere\".\n@mixin word-break(\n  $value,\n  $fallbackValue: $word-break-ie11-fallback,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-tooltip__surface {\n      @include css.declaration(\n        word-break,\n        $value,\n        $fallback-value: $fallbackValue\n      );\n      overflow-wrap: anywhere;\n    }\n  }\n}\n\n// Sets the color of the tooltip label.\n// @param {Color | String} $color\n@mixin label-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  @include feature-targeting.targets($feat-color) {\n    .mdc-tooltip__surface {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n// Sets the color of the text for the content inside a rich tooltip.\n// @param {Color | String} $title-color The color for the title of rich\n//   tooltips.\n// @param {Color | String} $content-color The color for the text in the content\n//   of rich tooltips.\n// @param {Color | String} $content-link-color The color for a link in the\n//   content of rich tooltips.\n@mixin rich-text-ink-color(\n  $title-color,\n  $content-color,\n  $content-link-color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  @include feature-targeting.targets($feat-color) {\n    .mdc-tooltip__title {\n      @include theme.property(color, $title-color);\n    }\n\n    .mdc-tooltip__content {\n      @include theme.property(color, $content-color);\n    }\n\n    .mdc-tooltip__content-link {\n      @include theme.property(color, $content-link-color);\n    }\n  }\n}\n\n// Sets the fill/surface color of the tooltip.\n// @param {Color | String} $color\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-tooltip__surface {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n// Sets the fill/surface color of the rich tooltip.\n// @param {Color | String} $color\n@mixin rich-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  &.mdc-tooltip--rich {\n    .mdc-tooltip__surface {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n\n    .mdc-tooltip__caret-surface-top,\n    .mdc-tooltip__caret-surface-bottom {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n// Sets the max-height of the rich tooltip.\n// @param {Number} $max-height\n@mixin rich-max-height($max-height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &.mdc-tooltip--rich {\n    .mdc-tooltip__surface {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(max-height, $max-height);\n      }\n    }\n  }\n}\n\n// Sets the z-index of the tooltip.\n// @param {Number} $z-index\n@mixin z-index($z-index, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-tooltip {\n      z-index: $z-index;\n    }\n  }\n}\n\n// Sets the duration for the animation that shows the tooltip.\n// @param {Number} $enter-duration\n@mixin show-transition($enter-duration, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    .mdc-tooltip--showing-transition .mdc-tooltip__surface-animation {\n      transition: animation-functions.enter(opacity, $enter-duration),\n        animation-functions.enter(transform, $enter-duration);\n    }\n  }\n}\n\n// Sets the duration for the animation that hides the tooltip.\n// @param {Number} $exit-duration\n@mixin hide-transition($exit-duration, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    .mdc-tooltip--hide-transition .mdc-tooltip__surface-animation {\n      transition: animation-functions.exit-permanent(opacity, $exit-duration);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// Internal styling for Tooltip MDC component.\n\n@use 'sass:math';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl' as rtl;\n@use '@material/dom/mixins' as dom-mixins;\n@use './tooltip-theme';\n@use '@material/typography/typography';\n\n$_padding-y: 4px;\n$_padding-x: 8px;\n$_min-width: 40px;\n$_max-height: 40vh;\n//LINT.IfChange(tooltip-dimensions)\n$_max-width: 200px;\n$_min-height: 24px;\n// LINT.ThenChange(constants.ts:tooltip-dimensions)\n$_label-type-scale: caption;\n$_line-height: 16px;\n// LINT.IfChange(tooltip-anim-scale)\n$_animation-scale: 0.8;\n// LINT.ThenChange(constants.ts:tooltip-anim-scale);\n\n// Rich Tooltip variables\n$_rich_corner_radius: 4px;\n$_rich_line-height: 20px;\n$_rich_title_baseline: 28px;\n$_rich_max-width: 320px;\n$_content-margin: 8px;\n$_content-type-scale: body2;\n$_title-type-scale: subtitle2;\n$_caret-size: 24px;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include tooltip-theme.shape-radius(\n    tooltip-theme.$border-radius,\n    $query: $query\n  );\n  @include tooltip-theme.label-ink-color(\n    tooltip-theme.$label-color,\n    $query: $query\n  );\n  @include tooltip-theme.fill-color(\n    tooltip-theme.$background-color,\n    $query: $query\n  );\n  @include tooltip-theme.word-break(\n    tooltip-theme.$word-break-default,\n    tooltip-theme.$word-break-ie11-fallback,\n    $query: $query\n  );\n  @include tooltip-theme.z-index(tooltip-theme.$z-index, $query: $query);\n  @include tooltip-theme.show-transition(\n    tooltip-theme.$enter-duration,\n    $query: $query\n  );\n  @include tooltip-theme.hide-transition(\n    tooltip-theme.$exit-duration,\n    $query: $query\n  );\n  @include tooltip-theme.rich-text-ink-color(\n    tooltip-theme.$rich-title-text-color,\n    tooltip-theme.$rich-content-text-color,\n    tooltip-theme.$rich-content-link-color,\n    $query: $query\n  );\n\n  .mdc-tooltip {\n    @include feature-targeting.targets($feat-structure) {\n      position: fixed;\n      display: none;\n    }\n    @include tooltip-theme.rich-fill-color(\n      tooltip-theme.$rich-background-color,\n      $query: $query\n    );\n  }\n\n  .mdc-tooltip-wrapper--rich {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n    }\n  }\n\n  .mdc-tooltip--shown,\n  .mdc-tooltip--showing,\n  .mdc-tooltip--hide {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n    }\n\n    &.mdc-tooltip--rich {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        // Moves the rich tooltip out of the viewport/parent element initially\n        // so that the initial width is not affected and a 'correct' width can\n        // be used to calculate the position of the tooltip.\n        @include rtl.ignore-next-line();\n        left: -$_rich_max_width;\n        position: absolute;\n      }\n    }\n  }\n\n  .mdc-tooltip__surface {\n    &::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    @include typography.typography(\n      $_label-type-scale,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      line-height: $_line-height;\n      padding: $_padding-y $_padding-x;\n      min-width: $_min-width;\n      max-width: $_max-width;\n      min-height: $_min-height;\n      max-height: $_max-height;\n      box-sizing: border-box;\n      overflow: hidden;\n      text-align: center;\n    }\n\n    .mdc-tooltip--rich & {\n      @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n      @include elevation-mixins.elevation(2, $query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        align-items: flex-start;\n        border-radius: $_rich_corner_radius;\n        display: flex;\n        flex-direction: column;\n        line-height: $_rich_line-height;\n        min-height: $_min-height;\n        min-width: $_min-width;\n        max-width: $_rich_max-width;\n        position: relative;\n      }\n    }\n\n    .mdc-tooltip--multiline & {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        text-align: left;\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          text-align: right;\n        }\n      }\n    }\n\n    .mdc-tooltip__title {\n      @include typography.text-baseline(\n        $top: $_rich_title_baseline - $_padding-y,\n        $lineHeight: $_rich_line-height,\n        $query: $query\n      );\n      @include typography.typography($_title-type-scale, $query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0 $_content-margin;\n      }\n    }\n\n    .mdc-tooltip__content {\n      @include typography.typography($_content-type-scale, $query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% - 2 * #{$_content-margin});\n        margin: $_content-margin;\n        @include rtl.ignore-next-line();\n        text-align: left;\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          text-align: right;\n        }\n      }\n    }\n\n    .mdc-tooltip__content-link {\n      @include feature-targeting.targets($feat-structure) {\n        text-decoration: none;\n      }\n    }\n  }\n\n  .mdc-tooltip--rich-actions {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 1;\n    }\n  }\n\n  .mdc-tooltip__surface-animation {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n      transform: scale($_animation-scale);\n      will-change: transform, opacity;\n    }\n\n    .mdc-tooltip--shown & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1);\n        opacity: 1;\n      }\n    }\n\n    .mdc-tooltip--hide & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1);\n      }\n    }\n  }\n\n  .mdc-tooltip__caret-surface-top,\n  .mdc-tooltip__caret-surface-bottom {\n    @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      height: $_caret-size;\n      width: $_caret-size;\n      // We override this transform in MDCTooltipFoundation, however these\n      // styles must be present before the override happens in order to\n      // calculate the correct boundingClientRect (with the transforms applied).\n      transform: rotate(35deg) skewY(20deg) scaleX(math.cos(20deg));\n    }\n  }\n\n  .mdc-tooltip__caret-surface-bottom {\n    @include elevation-mixins.elevation(2, $query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      outline: 1px solid transparent;\n      z-index: -1;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use './mixins';\n@use './variables';\n\n// postcss-bem-linter: define top-app-bar\n.mdc-top-app-bar {\n  @include mixins.fill-color-accessible(primary);\n  @include mixins.icon-ink-color(on-primary);\n\n  display: flex;\n  position: fixed;\n  flex-direction: column;\n  justify-content: space-between;\n  box-sizing: border-box;\n  width: 100%;\n  z-index: 4;\n\n  &__row {\n    display: flex;\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    height: variables.$row-height;\n  }\n\n  &__section {\n    display: inline-flex;\n    flex: 1 1 auto;\n    align-items: center;\n    min-width: 0;\n    padding: variables.$section-vertical-padding\n      variables.$section-horizontal-padding;\n    z-index: 1;\n\n    &--align-start {\n      justify-content: flex-start;\n      order: -1;\n    }\n\n    &--align-end {\n      justify-content: flex-end;\n      order: 1;\n    }\n  }\n\n  &__title {\n    @include typography.typography(headline6);\n    @include rtl.reflexive-box(padding, left, variables.$title-left-padding);\n\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    z-index: 1;\n  }\n}\n\n@at-root {\n  @include mixins.short-shape-radius(24px);\n}\n\n.mdc-top-app-bar--short {\n  top: 0;\n  @include rtl.ignore-next-line();\n  right: auto;\n  @include rtl.ignore-next-line();\n  left: 0;\n  width: 100%;\n  transition: width 250ms animation-variables.$standard-curve-timing-function;\n\n  @include rtl.rtl {\n    @include rtl.ignore-next-line();\n    right: 0;\n    @include rtl.ignore-next-line();\n    left: auto;\n  }\n\n  .mdc-top-app-bar__row {\n    height: variables.$mobile-row-height;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: variables.$mobile-section-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    transition: opacity 200ms\n      animation-variables.$standard-curve-timing-function;\n    opacity: 1;\n  }\n}\n\n.mdc-top-app-bar--short-collapsed {\n  @include elevation-mixins.elevation(4);\n\n  width: variables.$short-collapsed-width;\n  transition: width 300ms animation-variables.$standard-curve-timing-function;\n\n  .mdc-top-app-bar__title {\n    display: none;\n  }\n\n  .mdc-top-app-bar__action-item {\n    transition: padding 150ms\n      animation-variables.$standard-curve-timing-function;\n  }\n}\n\n// stylelint-disable-next-line plugin/selector-bem-pattern\n.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item {\n  width: variables.$short-collapsed-width * 2;\n\n  .mdc-top-app-bar__section--align-end {\n    @include rtl.reflexive-box(padding, right, 12px);\n  }\n}\n\n.mdc-top-app-bar--dense {\n  .mdc-top-app-bar__row {\n    height: variables.$dense-row-height;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: 0 variables.$dense-section-horizontal-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    @include rtl.reflexive-box(\n      padding,\n      left,\n      variables.$dense-title-left-padding\n    );\n  }\n}\n\n.mdc-top-app-bar--prominent {\n  .mdc-top-app-bar__row {\n    height: variables.$prominent-row-height;\n  }\n\n  .mdc-top-app-bar__title {\n    align-self: flex-end;\n    padding-bottom: variables.$prominent-title-bottom-padding;\n  }\n\n  .mdc-top-app-bar__action-item,\n  .mdc-top-app-bar__navigation-icon {\n    align-self: flex-start;\n  }\n}\n\n// stylelint-disable-next-line plugin/selector-bem-pattern\n.mdc-top-app-bar--fixed {\n  transition: box-shadow 200ms linear;\n}\n\n.mdc-top-app-bar--fixed-scrolled {\n  @include elevation-mixins.elevation(4);\n\n  transition: box-shadow 200ms linear;\n}\n\n// Specific styles for dense and prominent styled top app bar\n// stylelint-disable plugin/selector-bem-pattern\n.mdc-top-app-bar--dense.mdc-top-app-bar--prominent {\n  .mdc-top-app-bar__row {\n    height: variables.$dense-row-height * 2;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: 0 variables.$section-horizontal-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    @include rtl.reflexive-box(padding, left, variables.$title-left-padding);\n\n    padding-bottom: variables.$dense-prominent-title-bottom-padding;\n  }\n}\n// stylelint-enable plugin/selector-bem-pattern\n\n.mdc-top-app-bar--fixed-adjust {\n  padding-top: variables.$row-height;\n}\n\n.mdc-top-app-bar--dense-fixed-adjust {\n  padding-top: variables.$dense-row-height;\n}\n\n.mdc-top-app-bar--short-fixed-adjust {\n  padding-top: variables.$mobile-row-height;\n}\n\n.mdc-top-app-bar--prominent-fixed-adjust {\n  padding-top: variables.$prominent-row-height;\n}\n\n.mdc-top-app-bar--dense-prominent-fixed-adjust {\n  padding-top: variables.$dense-row-height * 2;\n}\n\n// Mobile Styles\n@include mixins.mobile-breakpoint_;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions';\n@use './variables';\n@use '@material/rtl/rtl';\n\n//\n// Public\n//\n\n@mixin ink-color($color) {\n  @include theme.property(color, $color);\n}\n\n@mixin fill-color($color) {\n  @include theme.property(background-color, $color);\n}\n\n@mixin fill-color-accessible($color) {\n  @include fill-color($color);\n  @include ink-color(theme-color.accessible-ink-color($color));\n}\n\n@mixin icon-ink-color($color) {\n  .mdc-top-app-bar__action-item,\n  .mdc-top-app-bar__navigation-icon {\n    @include theme.property(color, $color);\n    @include ripple-theme.states($color);\n  }\n}\n\n@mixin short-shape-radius($radius, $rtl-reflexive: true) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 1 {\n    @error \"Invalid radius: '#{$radius}' component doesn't allow customizing all corners\";\n  }\n\n  $radius: 0 0 $radius 0;\n\n  $selector: if(\n    &,\n    '&.mdc-top-app-bar--short-collapsed',\n    '.mdc-top-app-bar--short-collapsed'\n  );\n\n  #{$selector} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: variables.$dense-row-height\n    );\n  }\n}\n\n//\n// Private\n//\n\n@mixin mobile-breakpoint_($mobile-breakpoint: variables.$mobile-breakpoint) {\n  @media (max-width: $mobile-breakpoint) {\n    .mdc-top-app-bar__row {\n      height: variables.$mobile-row-height;\n    }\n\n    .mdc-top-app-bar__section {\n      padding: variables.$mobile-section-padding;\n    }\n\n    .mdc-top-app-bar--short {\n      transition: width 200ms\n        animation-variables.$standard-curve-timing-function;\n    }\n\n    .mdc-top-app-bar--short-collapsed {\n      transition: width 250ms\n        animation-variables.$standard-curve-timing-function;\n\n      .mdc-top-app-bar__section--align-end {\n        @include rtl.reflexive-box(\n          padding,\n          right,\n          variables.$short-collapsed-right-icon-padding\n        );\n      }\n    }\n\n    .mdc-top-app-bar--prominent {\n      .mdc-top-app-bar__title {\n        padding-bottom: variables.$prominent-mobile-title-bottom-padding;\n      }\n    }\n\n    .mdc-top-app-bar--fixed-adjust {\n      padding-top: variables.$mobile-row-height;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Default styles\n$row-height: 64px !default;\n$title-left-padding: 20px !default;\n$section-vertical-padding: 8px !default;\n$section-horizontal-padding: 12px !default;\n\n$mobile-breakpoint: 599px !default;\n\n// Default mobile styles\n$mobile-row-height: 56px !default;\n$mobile-section-padding: 4px !default;\n\n// Short top app bar\n$short-collapsed-border-radius: 4px !default;\n$short-collapsed-width: 56px !default;\n$short-collapsed-right-icon-padding: 12px !default;\n\n// Prominent styles\n$prominent-row-height: 128px !default;\n$prominent-title-bottom-padding: 2px !default;\n\n// Prominent mobile styles\n$prominent-mobile-title-bottom-padding: 6px !default;\n\n// Dense styles\n$dense-row-height: 48px !default;\n$dense-section-horizontal-padding: 4px !default;\n$dense-title-left-padding: 12px !default;\n\n// Dense & Prominent styles\n$dense-prominent-title-bottom-padding: 9px !default;\n","// Portion of file below is from https://github.com/squidfunk/mkdocs-material/blob/4e87641c3247b3397a1a5eae3658abb7eb1e13a4/src/assets/stylesheets/extensions/_codehilite.scss#L27-L207\n// Operators\n$codehilite-operator: inherit;\n$codehilite-operator-word: inherit;\n\n// Generics\n$codehilite-generic-emph: #000000;\n$codehilite-generic-error: #AA0000;\n$codehilite-generic-heading: #999999;\n$codehilite-generic-output: #888888;\n$codehilite-generic-prompt: #555555;\n$codehilite-generic-strong: inherit;\n$codehilite-generic-subheading: #AAAAAA;\n$codehilite-generic-traceback: #AA0000;\n\n// Diffs\n$codehilite-diff-deleted: #FFDDDD;\n$codehilite-diff-inserted: #DDFFDD;\n\n// Keywords\n$codehilite-keyword: #3B78E7;\n$codehilite-keyword-constant: #A71D5D;\n$codehilite-keyword-declaration: #3B78E7;\n$codehilite-keyword-namespace: #3B78E7;\n$codehilite-keyword-pseudo: #A71D5D;\n$codehilite-keyword-reserved: #3E61A2;\n$codehilite-keyword-type: #3E61A2;\n\n// Comments\n$codehilite-comment: #999999;\n$codehilite-comment-multiline: #999999;\n$codehilite-comment-preproc: #666666;\n$codehilite-comment-single: #999999;\n$codehilite-comment-shebang: #999999;\n$codehilite-comment-special: #999999;\n\n// Names\n$codehilite-name-attribute: #C2185B;\n$codehilite-name-builtin: #C2185B;\n$codehilite-name-builtin-pseudo: #3E61A2;\n$codehilite-name-class: #C2185B;\n$codehilite-name-constant: #3E61A2;\n$codehilite-name-decorator: #666666;\n$codehilite-name-entity: #666666;\n$codehilite-name-exception: #C2185B;\n$codehilite-name-function: #C2185B;\n$codehilite-name-label: #3B5179;\n$codehilite-name-namespace: #EC407A;\n$codehilite-name-tag: #3B78E7;\n$codehilite-name-variable: #3E61A2;\n$codehilite-name-variable-class: #3E61A2;\n$codehilite-name-variable-instance: #3E61A2;\n$codehilite-name-variable-global: #3E61A2;\n$codehilite-name-extension: #EC407A;\n\n// Numbers\n$codehilite-literal-number: #E74C3C;\n$codehilite-literal-number-float: #E74C3C;\n$codehilite-literal-number-hex: #E74C3C;\n$codehilite-literal-number-integer: #E74C3C;\n$codehilite-literal-number-integer-long: #E74C3C;\n$codehilite-literal-number-oct: #E74C3C;\n\n// Strings\n$codehilite-literal-string: #0D904F;\n$codehilite-literal-string-backticks: #0D904F;\n$codehilite-literal-string-char: #0D904F;\n$codehilite-literal-string-doc: #999999;\n$codehilite-literal-string-double: #0D904F;\n$codehilite-literal-string-escape: #183691;\n$codehilite-literal-string-heredoc: #183691;\n$codehilite-literal-string-interpol: #183691;\n$codehilite-literal-string-other: #183691;\n$codehilite-literal-string-regex: #009926;\n$codehilite-literal-string-single: #0D904F;\n$codehilite-literal-string-symbol: #0D904F;\n\n// Miscellaneous\n$codehilite-error: #A61717;\n$codehilite-whitespace: transparent;\n\n// ----------------------------------------------------------------------------\n// Rules: syntax highlighting\n// ----------------------------------------------------------------------------\n\n// Codehilite extension\n.highlight {\n\n  // Operators\n  .o  { color: $codehilite-operator; }\n  .ow { color: $codehilite-operator-word; }\n\n  // Generics\n  .ge { color: $codehilite-generic-emph; }\n  .gr { color: $codehilite-generic-error; }\n  .gh { color: $codehilite-generic-heading; }\n  .go { color: $codehilite-generic-output; }\n  .gp { color: $codehilite-generic-prompt; }\n  .gs { color: $codehilite-generic-strong; }\n  .gu { color: $codehilite-generic-subheading; }\n  .gt { color: $codehilite-generic-traceback; }\n\n  // Diffs\n  .gd { background-color: $codehilite-diff-deleted; }\n  .gi { background-color: $codehilite-diff-inserted; }\n\n  // Keywords\n  .k  { color: $codehilite-keyword; }\n  .kc { color: $codehilite-keyword-constant; }\n  .kd { color: $codehilite-keyword-declaration; }\n  .kn { color: $codehilite-keyword-namespace; }\n  .kp { color: $codehilite-keyword-pseudo; }\n  .kr { color: $codehilite-keyword-reserved; }\n  .kt { color: $codehilite-keyword-type; }\n\n  // Comments\n  .c  { color: $codehilite-comment; }\n  .cm { color: $codehilite-comment-multiline; }\n  .cp { color: $codehilite-comment-preproc; }\n  .c1 { color: $codehilite-comment-single; }\n  .ch { color: $codehilite-comment-shebang; }\n  .cs { color: $codehilite-comment-special; }\n\n  // Names\n  .na { color: $codehilite-name-attribute; }\n  .nb { color: $codehilite-name-builtin; }\n  .bp { color: $codehilite-name-builtin-pseudo; }\n  .nc { color: $codehilite-name-class; }\n  .no { color: $codehilite-name-constant; }\n  .nd { color: $codehilite-name-entity; }\n  .ni { color: $codehilite-name-entity; }\n  .ne { color: $codehilite-name-exception; }\n  .nf { color: $codehilite-name-function; }\n  .nl { color: $codehilite-name-label; }\n  .nn { color: $codehilite-name-namespace; }\n  .nt { color: $codehilite-name-tag; }\n  .nv { color: $codehilite-name-variable; }\n  .vc { color: $codehilite-name-variable-class; }\n  .vg { color: $codehilite-name-variable-global; }\n  .vi { color: $codehilite-name-variable-instance; }\n  .nx { color: $codehilite-name-extension; }\n\n  // Numbers\n  .m  { color: $codehilite-literal-number; }\n  .mf { color: $codehilite-literal-number-float; }\n  .mh { color: $codehilite-literal-number-hex; }\n  .mi { color: $codehilite-literal-number-integer; }\n  .il { color: $codehilite-literal-number-integer-long; }\n  .mo { color: $codehilite-literal-number-oct; }\n\n  // Strings\n  .s  { color: $codehilite-literal-string; }\n  .sb { color: $codehilite-literal-string-backticks; }\n  .sc { color: $codehilite-literal-string-char; }\n  .sd { color: $codehilite-literal-string-doc; }\n  .s2 { color: $codehilite-literal-string-double; }\n  .se { color: $codehilite-literal-string-escape; }\n  .sh { color: $codehilite-literal-string-heredoc; }\n  .si { color: $codehilite-literal-string-interpol; }\n  .sx { color: $codehilite-literal-string-other; }\n  .sr { color: $codehilite-literal-string-regex; }\n  .s1 { color: $codehilite-literal-string-single; }\n  .ss { color: $codehilite-literal-string-symbol; }\n\n  // Miscellaneous\n  .err { color: $codehilite-error; }\n  .w { color: $codehilite-whitespace; }\n}\n","@charset \"utf-8\";\n\n@use \"@material/theme\" with (\n  $primary: #3948ab,\n  $secondary: #ff4081,\n  $background: #fafafa,\n  $error: #f44336,\n);\n\n@use \"@material/button/mdc-button\";\n@use \"@material/card/mdc-card\";\n@use \"@material/chips/deprecated/mdc-chips\";\n@use \"@material/data-table/mdc-data-table\";\n@use \"@material/dialog/mdc-dialog\";\n@use \"@material/drawer/mdc-drawer\";\n@use \"@material/icon-button/mdc-icon-button\";\n@use \"@material/layout-grid/mdc-layout-grid\";\n@use \"@material/list/mdc-list\";\n@use \"@material/menu-surface/mdc-menu-surface\";\n@use \"@material/menu/mdc-menu\";\n@use \"@material/ripple/mdc-ripple\";\n@use \"@material/snackbar/mdc-snackbar\";\n@use \"@material/textfield/mdc-text-field\";\n@use \"@material/tooltip/styles\";\n@use \"@material/top-app-bar/mdc-top-app-bar\";\n@use \"@material/typography/mdc-typography\";\n@import \"syntax-highlighting\";\n\nbody {\n  margin: 0;\n}\n\n#page-content {\n  padding-left: 5%;\n  padding-right: 5%;\n}\n\ncode, kbd, samp, pre, var {\n  font-family: \"Roboto Mono\", \"Courier New\", Courier, monospace;\n  white-space: pre-wrap;\n}\n\nstrong {\n  font-weight: 500;\n}\n\n// Does not override any elements with any existing classes\n.article, .page, .post {\n  h1:not([class]) {\n    @extend .mdc-typography--headline3;\n  }\n  h2:not([class]) {\n    @extend .mdc-typography--headline4;\n  }\n  h3:not([class]) {\n    @extend .mdc-typography--headline5;\n  }\n  h4:not([class]) {\n    @extend .mdc-typography--headline6;\n  }\n  h5:not([class]) {\n    @extend .mdc-typography--subtitle1;\n  }\n  h6:not([class]) {\n    @extend .mdc-typography--subtitle2;\n  }\n  p:not([class]), li:not([class]) {\n    @extend .mdc-typography--body1;\n  }\n}\n\n.card {\n  img.card__media {\n    width: 100%;\n  }\n  .card__primary {\n    padding: 1rem;\n  }\n  .card__secondary {\n    padding: 0 1rem 8px;\n  }\n  .card__title, .card__subtitle, .card__overline {\n    margin: 0;\n  }\n\n  .card__secondary, .card__subtitle {\n    color: var(--mdc-theme-text-secondary-on-background, rgba(0,0,0,.54));\n  }\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n@media print {\n  #app-bar {\n    display: none;\n  }\n}\n\n#page-content {\n  padding-top: calc(5% + 64px);\n}\n@media (max-width: 599px) {\n  #page-content {\n    padding-top: calc(5% + 56px);\n  }\n}\n\n#share-dialog-text-field {\n  width: 100%;\n}\n\n.text-pre-wrap {\n  white-space: pre-wrap;\n}\n\n.app-tooltip {\n  z-index: 999;\n}\n"],"file":"site.css"}